Cadence Genus(TM) Synthesis Solution.
Copyright 2016 Cadence Design Systems, Inc. All rights reserved worldwide.
Cadence and the Cadence logo are registered trademarks and Genus is a trademark
of Cadence Design Systems, Inc. in the United States and other countries.

Version: 16.22-s033_1, built Wed Apr 05 2017
Options: -files setup_design.tcl 
Date:    Mon Dec 11 21:01:00 2017
Host:    ellora (x86_64 w/Linux 3.10.0-693.5.2.el7.x86_64) (4cores*16cpus*Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz 10240KB) (32866740KB)
OS:      Red Hat Enterprise Linux Server release 7.4 (Maipo)

Checking out license: Genus_Synthesis

Loading tool scripts...
Finished loading tool scripts (8 seconds elapsed).

Sourcing setup_design.tcl...
  Setting attribute of root '/': 'source_verbose_info' = false
  Setting attribute of root '/': 'source_verbose' = true
set design mkPE16
set design_folder pe16
set rtl_top_inst dut
set libname tsmc65lp
set do_power_opt true
set do_clock_gating true
set do_adv_opt false
set save false
set basename_prefix "100M_32"
set backup_input false
set project_base /homes/mrhamid/bsv-designs/sim_syn
set use_tcf false
set use_vcd false
set use_saif true
set activity_filename $project_base/bsv/$design_folder/${design_folder}.saif
set rtl_path [ list \
    ${project_base}/bsv/$design_folder/vlog \
    $::env(BLUESPECDIR)/Verilog \
]
set rtl_files [ list \
    mkPE16.v \
    FIFOL1.v \
]
set sdc_file constraints_${libname}.sdc
set_db script_search_path [ concat . ${project_base}/syn/common ]
  Setting attribute of root '/': 'script_search_path' = . /homes/mrhamid/bsv-designs/sim_syn/syn/common
include run_rc.tcl
Sourcing '/homes/mrhamid/bsv-designs/sim_syn/syn/common/run_rc.tcl' (Mon Dec 11 21:01:08 -0500 2017)...
set DATE [clock format [clock seconds] -format "%b%d_%H%M"]
if {!$save} {
  set BASE_PATH build/${libname}/test_run
  file delete -force $BASE_PATH
} else {
  if {$basename_prefix != ""} {
    set BASE_PATH build/${libname}/${basename_prefix}_${DATE}
  } else {
    set BASE_PATH build/${libname}/${DATE}
  }
}
if {$backup_input} {
  set INPUTS_PATH ${BASE_PATH}/in
  file mkdir ${INPUTS_PATH}
}
set OUTPUTS_PATH ${BASE_PATH}/out
set REPORTS_PATH ${BASE_PATH}/rpt
set LOG_PATH ${BASE_PATH}/logs
set VERIFICATION_PATH ${BASE_PATH}/fv
file mkdir ${OUTPUTS_PATH}
file mkdir ${REPORTS_PATH}
file mkdir ${LOG_PATH}
file mkdir ${VERIFICATION_PATH}
file delete current
file link -symbolic current $BASE_PATH
set_db hdl_error_on_blackbox true
  Setting attribute of root '/': 'hdl_error_on_blackbox' = true
set_db information_level 9
  Setting attribute of root '/': 'information_level' = 9
set_db syn_generic_effort high
  Setting attribute of root '/': 'syn_generic_effort' = high
set_db syn_map_effort high
  Setting attribute of root '/': 'syn_map_effort' = high
if {$do_power_opt} {
  if {$do_clock_gating} {
    set_db lp_insert_clock_gating true
  }
  # set_db lp_insert_operand_isolation true
  set_db lp_power_analysis_effort high
  # set_db hdl_track_filename_row_col true
}
  Setting attribute of root '/': 'lp_insert_clock_gating' = true
Info    : Resetting power analysis results. [PA-7]
        : Power analysis effort level changed from 'medium' to 'high'.
        : All computed switching activities are removed.
  Setting attribute of root '/': 'lp_power_analysis_effort' = high
set_db init_hdl_search_path [ concat $rtl_path ]
  Setting attribute of root '/': 'init_hdl_search_path' = /homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog /u/anantha/workspace3/share/programs/Bluespec/2016.07.beta1/lib/Verilog
read_hdl -sv $rtl_files
            Reading Verilog file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'
            Reading Verilog file '/u/anantha/workspace3/share/programs/Bluespec/2016.07.beta1/lib/Verilog/FIFOL1.v'
include technology.tcl
Sourcing '/homes/mrhamid/bsv-designs/sim_syn/syn/common/technology.tcl' (Mon Dec 11 21:01:08 -0500 2017)...
if {$libname == "tsmc40lp"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CRN40LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn40lpbwp tcbn40lpbwphvt ]
    set stdcell_ver 200a
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
} elseif {$libname == "tsmc45gs"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CLN45GS/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn45gsbwp12t tcbn45gsbwp12thvt ]
    set stdcell_ver 120c
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
} elseif {$libname == "tsmc65lp"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn65lp ]
    set stdcell_ver 200a
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
}
  Setting attribute of root '/': 'lib_search_path' = /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a
            Reading file '/u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib'
    Loading library tcbn65lpwc.lib
Info    : An unsupported construct was detected in this library. [LBR-40]
        : Unknown Liberty attribute 'library_features' encountered. Ignoring (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib, Line 69)
        : Check to see if this construct is really needed for synthesis. Many liberty constructs are not actually required.
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AO211D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AO211D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Missing a function attribute in the output pin definition. [LBR-518]
        : Functionality is missing at pin 'Z' for the cell 'BHD'. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib, Line 272424)

  Message Summary for Library tcbn65lpwc.lib:
  *******************************************
  Could not find an attribute in the library. [LBR-436]: 989
  Missing a function attribute in the output pin definition. [LBR-518]: 1
  An unsupported construct was detected in this library. [LBR-40]: 1
  *******************************************
 
Info    : Created nominal operating condition. [LBR-412]
        : Operating condition '_nominal_' was created for the PVT values (1.000000, 1.080000, 125.000000) in library 'tcbn65lpwc.lib'.
        : The nominal operating condition represents either the nominal PVT values if specified in the library source, or the default PVT values (1.0, 1.0, 1.0).
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'ANTENNA' must have an output pin.
        : Add the missing output pin(s), then reload the library. Otherwise, the library cell will be marked as unusable and as timing model.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'ANTENNA' must have an output pin.
Info    : An output library pin lacks a function attribute. [LBR-41]
        : Output pin 'BHD/Z' has no function.
        : If the remainder of this library cell's semantic checks are successful, it will be considered as a timing-model (because one of its outputs does not have a valid function.
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLHQD20'
        : To use the cell in clock gating, Set cell attribute 'dont_use' false in the library.
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLHQD24'
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLNQD20'
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLNQD24'
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP16' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP16' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP32' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP32' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP4' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP4' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP64' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP64' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP8' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP8' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP10' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP10' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP2' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP2' must have an output pin.
  Setting attribute of root '/': 'library' = tcbn65lpwc.lib
elaborate $design
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD1'.
        : Setting the 'timing_sense' to non_unate.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D0'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'A2' and 'Z' in libcell 'CKXOR2D0'.
  Library has 441 usable logic and 280 usable sequential lib-cells.
Info    : Found unusable library cells. [LBR-415]
        : Library: 'tcbn65lpwc.lib', Total cells: 816, Unusable cells: 77.
	List of unusable cells: 'ANTENNA BHD BUFFD20 BUFFD24 BUFTD20 BUFTD24 CKBD20 CKBD24 CKLHQD20 CKLHQD24 CKLNQD20 CKLNQD24 CKND20 CKND24 DCAP DCAP16 DCAP32 DCAP4 DCAP64 DCAP8 GAN2D1 GAN2D2 GAOI21D1 GAOI21D2 GAOI22D1 GBUFFD1 GBUFFD2 GBUFFD3 GBUFFD4 GBUFFD8 GDCAP GDCAP10 GDCAP2 GDCAP3 GDCAP4 GDFCNQD1 GDFQD1 GFILL GFILL10 GFILL2 GFILL3 GFILL4 GINVD1 GINVD2 GINVD3 GINVD4 GINVD8 GMUX2D1 GMUX2D2 GMUX2ND1 GMUX2ND2 GND2D1 GND2D2 GND2D3 GND2D4 GND3D1 GND3D2 GNR2D1 GNR2D2 GNR3D1 GNR3D2 GOAI21D1 GOAI21D2 GOR2D1 GOR2D2 GSDFCNQD1 GTIEH GTIEL GXNR2D1 GXNR2D2 GXOR2D1 GXOR2D2 INVD20 INVD24 OD25DCAP16 OD25DCAP32 OD25DCAP64 .'
        : For more information, refer to 'Cells Identified as Unusable' in the 'User Guide'. The reason why a cell is considered unusable is stored in the 'unusable_reason' libcell attribute.
Info    : Elaborating Design. [ELAB-1]
        : Elaborating top-level block 'mkPE16' from file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Bitwidth mismatch in assignment. [CDFG-372]
        : Width of left hand side 'IF_SEXT_multiply_constants_neg_constant_BITS_7_ETC___d118' [32] doesn't match the width of right hand side [16] in assignment in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 535.
Info    : Bitwidth mismatch in assignment. [CDFG-372]
        : Width of left hand side 'IF_SEXT_multiply_constants_pos_constant_BITS_7_ETC___d74' [32] doesn't match the width of right hand side [16] in assignment in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 539.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_get_pos_partial_sum' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 137.
        : The value of the input port is not used within the design.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_get_neg_partial_sum' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 142.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_read_weights' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 147.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_is_ready' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 152.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/equal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=1 B=1 Z=1) at line 645 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=1 B=1 Z=1) at line 645 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/equal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 558 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 558 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/mult_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 535 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 535 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/mult_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/mult_unsigned/medium' (priority 1), 'hdl_implementation:GB/mult_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 587 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 587 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 537 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 537 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 400 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 400 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 405 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 405 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 561 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 561 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/mult_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 539 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 539 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/mult_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/mult_unsigned/medium' (priority 1), 'hdl_implementation:GB/mult_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 578 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 578 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 541 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 541 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 422 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 422 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 427 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 427 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 434 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 434 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 436 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 436 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=4 B=1 Z=4) at line 437 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=4 B=1 Z=4) at line 437 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 336 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 336 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 340 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 340 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 350 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 350 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 354 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 354 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/equal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=4 B=4 Z=1) at line 376 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=4 B=4 Z=1) at line 376 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/equal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 589 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 589 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 592 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 592 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 580 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 580 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 583 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 583 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : Done Elaborating Design. [ELAB-3]
        : Done elaborating 'mkPE16'.
Info: Checking for source rtl...
Info: Check completed for source rtl...
        Applying wireload models.
        Computing net loads.
UM:  flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:            12             14                                      elaborate
check_design -unresolved
  Checking the design.

 	 Check Design Report
	 -------------------- 

  Unresolved References & Empty Modules
  ------------------------------------- 
No unresolved references in design 'mkPE16'

No empty modules in design 'mkPE16'

  Done Checking the design.
set_db current_design .verification_directory $VERIFICATION_PATH
  Setting attribute of design 'mkPE16': 'verification_directory' = build/tsmc65lp/test_run/fv
if {$do_adv_opt} {
  set_db current_design .retime true
}
if {[info exists wireload_model]} {
    set_db current_design .force_wireload $wireload_model
}
if {$do_power_opt && $do_clock_gating} {
  set_db current_design .lp_clock_gating_extract_common_enable true
}
  Setting attribute of design 'mkPE16': 'lp_clock_gating_extract_common_enable' = true
read_sdc $sdc_file
            Reading file '/homes/mrhamid/bsv-designs/sim_syn/syn/pe16/constraints_tsmc65lp.sdc'
Statistics for commands executed by read_sdc:
 "all_inputs"               - successful      3 , failed      0 (runtime  0.00)
 "all_outputs"              - successful      2 , failed      0 (runtime  0.00)
 "create_clock"             - successful      1 , failed      0 (runtime  0.00)
 "current_design"           - successful      1 , failed      0 (runtime  0.00)
 "get_clocks"               - successful      3 , failed      0 (runtime  0.00)
 "get_ports"                - successful      1 , failed      0 (runtime  0.00)
 "remove_from_collection"   - successful      1 , failed      0 (runtime  0.00)
 "set_clock_latency"        - successful      1 , failed      0 (runtime  0.00)
 "set_clock_transition"     - successful      1 , failed      0 (runtime  0.00)
 "set_clock_uncertainty"    - successful      1 , failed      0 (runtime  0.00)
 "set_driving_cell"         - successful      1 , failed      0 (runtime  0.00)
 "set_input_delay"          - successful      2 , failed      0 (runtime  0.00)
 "set_load"                 - successful      1 , failed      0 (runtime  0.00)
 "set_load_unit"            - successful      1 , failed      0 (runtime  0.00)
 "set_max_fanout"           - successful      2 , failed      0 (runtime  0.00)
 "set_max_transition"       - successful      1 , failed      0 (runtime  0.00)
 "set_output_delay"         - successful      2 , failed      0 (runtime  0.00)
 "set_time_unit"            - successful      1 , failed      0 (runtime  0.00)
Total runtime 0
report timing -lint
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
============================================================
  Generated by:           Genus(TM) Synthesis Solution 16.22-s033_1
  Generated on:           Dec 11 2017  09:01:14 pm
  Module:                 mkPE16
  Technology library:     tcbn65lpwc 200
  Operating conditions:   WCCOM (balanced_tree)
  Wireload mode:          segmented
  Area mode:              timing library
============================================================


Lint summary
 Unconnected/logic driven clocks                                  0
 Sequential data pins driven by a clock signal                    0
 Sequential clock pins without clock waveform                     0
 Sequential clock pins with multiple clock waveforms              0
 Generated clocks without clock waveform                          0
 Generated clocks with incompatible options                       0
 Generated clocks with multi-master clock                         0
 Paths constrained with different clocks                          0
 Loop-breaking cells for combinational feedback                   0
 Nets with multiple drivers                                       0
 Timing exceptions with no effect                                 0
 Suspicious multi_cycle exceptions                                0
 Pins/ports with conflicting case constants                       0
 Inputs without clocked external delays                           0
 Outputs without clocked external delays                          0
 Inputs without external driver/transition                        0
 Outputs without external load                                    0
 Exceptions with invalid timing start-/endpoints                  0

                                                  Total:          0
if {$do_power_opt} {
  #set_db max_leakage_power 0.0 "/designs/$design"
  #set_db lp_power_optimization_weight <value from 0 to 1> "/designs/$DESIGN"

  set_db current_design .max_dynamic_power 0.0

  if {$use_tcf} {
    read_tcf -tcf_instance $rtl_top_inst $activity_filename
  }

  if {$use_vcd} {
    read_vcd -static -vcd_scope $rtl_top_inst $activity_filename
  }

  if {$use_saif} {
    read_saif -instance $rtl_top_inst $activity_filename
  }
}
  Setting attribute of design 'mkPE16': 'max_dynamic_power' = 0.0
10.0 % done 
20.0 % done 
30.0 % done 
40.0 % done 
50.0 % done 
60.0 % done 
70.0 % done 
80.0 % done 
90.0 % done 
100.0 % done 
100.0 % done
Nets/ports asserted in SAIF file : 2065
Total Nets/ports in SAIF file    : 8755
-------------------------------------------------------
Asserted Primary inputs in design              : 57 (100.00%)
Total connected primary inputs in design       : 57 (100.00%)
-------------------------------------------------------
Asserted sequential outputs                    : 52 (100.00%)
Total connected sequential outputs             : 52 (100.00%)
-------------------------------------------------------
Total nets in design                 : 8403 (100.00%)
Nets asserted                        : 2049 (24.38%)
Clock nets                           : 0 (0.00%)
Constant nets                        : 126 (1.50%)
Nets with no assertions              : 6354 (75.62%)
-------------------------------------------------------
Time taken to read_saif: 2.00 cpu seconds
syn_generic
Info    : Deleting instances not driving any primary outputs. [GLO-34]
        : Deleting 11 hierarchical instances. 
Following instances are deleted as they do not drive any primary output:
'mux_m_neg_partial_sum_645_15', 'mux_m_pos_partial_sum_645_15', 
'mux_m_step_645_15', 'mux_m_weight_regs_0_645_15', 
'mux_m_weight_regs_1_645_15', 'mux_m_weight_regs_2_645_15', 
'mux_m_weight_regs_3_645_15', 'mux_m_weight_regs_4_645_15', 
'mux_m_weight_regs_5_645_15', 'mux_m_weight_regs_6_645_15', 
'mux_m_weight_regs_7_645_15'.
        : Optimizations such as constant propagation or redundancy removal could change the connections so a hierarchical instance does not drive any primary outputs anymore. To see the list of deleted hierarchical instances, set the 'information_level' attribute to 2 or above. If message is truncated set message attribute 'truncate' to false to see the complete list. To prevent this optimization, set the 'delete_unloaded_insts' root/subdesign attribute to 'false' or 'preserve' instance attribute to 'true'.
Info    : Synthesizing. [SYNTH-1]
        : Synthesizing 'mkPE16' to generic gates using 'high' effort.
        Applying wireload models.
        Computing net loads.
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed generic optimization to kick in.
Info    : Optimizing RTL. [RTLOPT-1]
        : Optimizing RTL in 'mkPE16' using 'high' effort.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
      Timing sub_unsigned_974...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=24 B=16 AS=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=24 B=16 AS=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_1027...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
      Timing add_unsigned_1030...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_1064...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_1082...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : Accepted resource sharing opportunity. [RTLOPT-30]
        : Merged the following sets of instances in design 'mkPE16':
	  (add_561_25, add_541_22, add_434_25, add_436_25)

Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE16_csa_cluster' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=4 CI=1 Z=4).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=4 CI=1 Z=4) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 1 of 1 in module 'mkPE16_csa_cluster'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Used configuration 1, resulting in 1 carry-save group in module 'mkPE16_csa_cluster'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE16_csa_cluster_443' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
      Timing csa_tree_6030_6062...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
      Timing add_unsigned_carry...
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 1 in module 'mkPE16_csa_cluster_443'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Rejected all carry-save configurations in module 'mkPE16_csa_cluster_443'.
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE16_csa_cluster_442' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 2 in module 'mkPE16_csa_cluster_442'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=36 B=36 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=36 B=36 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 2 of 2 in module 'mkPE16_csa_cluster_442'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Used configuration 2, resulting in 3 carry-save groups in module 'mkPE16_csa_cluster_442'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE16_csa_cluster_451' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 1 in module 'mkPE16_csa_cluster_451'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Rejected all carry-save configurations in module 'mkPE16_csa_cluster_451'.
      Timing increment_unsigned_6608...
      Timing sub_unsigned_6609...
      Timing sub_unsigned_6610...
Info    : Done optimizing RTL. [RTLOPT-2]
        : Done optimizing RTL in 'mkPE16'.
      Removing temporary intermediate hierarchies under mkPE16
              Optimizing muxes in design 'mkPE16'.
Info    : Gating clocks. [SYNTH-13]
        : Gating clocks in 'mkPE16'.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
      Gating clocks in mkPE16
        Preparing the circuit
          Pruning unused logic
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'csa_tree_minus_587_1303' of datapath component 'csa_tree_357_393'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'inc_add_437_45_1' of datapath component 'increment_unsigned_1'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_578_9' of datapath component 'sub_unsigned_225'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_583_31' of datapath component 'sub_unsigned_382_480'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_592_31' of datapath component 'sub_unsigned_382_480'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_589_41' of datapath component 'sub_unsigned_382'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_580_41' of datapath component 'sub_unsigned_382'.
Inserting clock-gating logic .....
        
        New clock gate fanout statistics
        =================================================
        Fanout Size           Num CGs     Total FFs 
        -------------------------------------------------
        4 to 15                   1       4
        16 to 63                  3       48
        =================================================

Info    : Could not find any user created clock-gating module. [POPT-12]
        : Looking for Integrated clock-gating cell in library.
Clock Gating Status
===================
Category                                Number    Percentage
------------------------------------------------------------------
Gated flip-flops                        52		100%
Ungated flip-flops
  Cannot map to requested logic         0		  0%
  Enable signal is constant             0		  0%
  Excluded from clock-gating            0		  0%
  User preserved                        0		  0%
  Libcell unusable                      0		  0%
  Timing exception in enable logic      0		  0%
  Register bank width too small         0		  0%
Total flip-flops                        52		100%
Total CG Modules                        4
Info    : One or more cost groups were automatically created for clock gate enable paths. [POPT-96]
        : This feature can be disabled by setting the attribute lp_clock_gating_auto_cost_grouping false.
    Automatically cost grouped 4 clock gate paths.
  Setting attribute of root '/': 'pbs_stage_start_elapsed_time' = 24
  Setting attribute of root '/': 'pbs_stage_start_st_time' = 22
Info    : Done synthesizing. [SYNTH-2]
        : Done synthesizing 'mkPE16' to generic gates.
        Applying wireload models.
        Computing net loads.
     flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:            10             10                                      syn_generic
syn_map
Info    : Mapping. [SYNTH-4]
        : Mapping 'mkPE16' using 'high' effort.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
        Applying wireload models.
        Computing net loads.
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed mapping optimization to kick in.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
      Mapping 'mkPE16'...
        Preparing the circuit
          Pruning unused logic
Multi-threaded constant propagation [1|0] ...
        Rebuilding component 'mult_unsigned' based on context...
          Analyzing hierarchical boundaries
          Propagating constants
        Done preparing the circuit
          Structuring (delay-based) mkPE16...
          Done structuring (delay-based) mkPE16
Multi-threaded Virtual Mapping    (8 threads per ST process, 8 of 16 CPUs usable)
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) cb_part
            Finished partial collapsing.
            Starting partial collapsing  cb_part
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
        Rebalancing component 'mul_539_16'...
          Structuring (delay-based) mult_unsigned...
            Starting partial collapsing (xors only) mult_unsigned
            Finished partial collapsing.
            Starting partial collapsing  mult_unsigned
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) mult_unsigned
        Mapping component mult_unsigned...
          Structuring (delay-based) cb_part_637...
            Starting partial collapsing (xors only) cb_part_637
            Finished partial collapsing.
            Starting partial collapsing  cb_part_637
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) cb_part_637
        Mapping component cb_part_637...
          Structuring (delay-based) csa_tree_224...
            Starting partial collapsing (xors only) csa_tree_224
            Finished partial collapsing.
            Starting partial collapsing  csa_tree_224
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) csa_tree_224
        Mapping component csa_tree_224...
          Structuring (delay-based) add_unsigned_1030...
            Starting partial collapsing (xors only) add_unsigned_1030
            Finished partial collapsing.
            Starting partial collapsing  add_unsigned_1030
            Finished partial collapsing.
          Done structuring (delay-based) add_unsigned_1030
        Mapping component add_unsigned_1030...
          Structuring (delay-based) sub_unsigned...
            Starting partial collapsing (xors only) sub_unsigned
            Finished partial collapsing.
            Starting partial collapsing  sub_unsigned
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) sub_unsigned
        Mapping component sub_unsigned...
          Structuring (delay-based) logic partition in mkPE16...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_15x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_15x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_3x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_3x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_2x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_2x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_11x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_11x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_16x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_16x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_4x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_4x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_5x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_5x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_6x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_6x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_29x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_29x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_10x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_10x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_27x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_27x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_9x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_9x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_25x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_25x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_12x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_12x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_13x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_13x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_14x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_14x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_24x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_24x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_23x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_23x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_17x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_17x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_18x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_18x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_19x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_19x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_20x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_20x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_21x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_21x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_22x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_22x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_8x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_8x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_7x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_7x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_28x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_28x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_26x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_26x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) bmux_498_1...
            Starting partial collapsing  bmux_498_1
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) bmux_498_1
        Mapping component bmux_498_1...
          Structuring (delay-based) bmux_498_2...
            Starting partial collapsing  bmux_498_2
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) bmux_498_2
        Mapping component bmux_498_2...
          Structuring (delay-based) add_unsigned_470...
            Starting partial collapsing  add_unsigned_470
            Finished partial collapsing.
          Done structuring (delay-based) add_unsigned_470
        Mapping component add_unsigned_470...
          Structuring (delay-based) increment_unsigned_507_508...
            Starting partial collapsing (xors only) increment_unsigned_507_508
            Finished partial collapsing.
            Starting partial collapsing  increment_unsigned_507_508
            Finished partial collapsing.
          Done structuring (delay-based) increment_unsigned_507_508
        Mapping component increment_unsigned_507_508...
          Structuring (delay-based) cb_seq...
            Starting partial collapsing  cb_seq
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) cb_seq
        Mapping component cb_seq...
 
Global mapping target info
==========================
Cost Group 'clk' target slack:   294 ps
Target path end-point (Pin: m_neg_partial_sum_reg[13]/d)

             Pin                          Type          Fanout Load Arrival   
                                                               (fF)   (ps)    
------------------------------------------------------------------------------
(clock clk)                     <<<  launch                               0 R 
                                     latency                                  
cb_seqi
  m_neg_partial_sum_reg[0]/clk                                                
  m_neg_partial_sum_reg[0]/q    (u)  unmapped_d_flop        14 32.2           
cb_seqi/csa_tree_mul_535_1301_in_1 
cb_parti4348/cb_seqi_csa_tree_mul_535_1301_in_1 
  g5127/in_1                                                                  
  g5127/z                       (u)  unmapped_or2            2  4.6           
  g6322/in_0                                                                  
  g6322/z                       (u)  unmapped_or2            2  4.6           
  g6256/in_1                                                                  
  g6256/z                       (u)  unmapped_nand2          2  4.6           
  g6233/in_0                                                                  
  g6233/z                       (u)  unmapped_or2            1  2.3           
  g6234/in_1                                                                  
  g6234/z                       (u)  unmapped_nand2         24 11.5           
cb_parti4348/csa_tree_mul_535_1301_in_1[2] 
csa_tree_mul_535_1301/in_1[3] 
  g4327/in_0                                                                  
  g4327/z                       (u)  unmapped_complex2       1  2.3           
  g4328/in_1                                                                  
  g4328/z                       (u)  unmapped_nand2          1  2.3           
  g4228/in_0                                                                  
  g4228/z                       (u)  unmapped_complex2       9 20.7           
  g4763/in_0                                                                  
  g4763/z                       (u)  unmapped_complex2       1  2.3           
  g3984/in_1                                                                  
  g3984/z                       (u)  unmapped_nand2          3  6.9           
  g3953/in_0                                                                  
  g3953/z                       (u)  unmapped_or2            1  2.3           
  g3954/in_1                                                                  
  g3954/z                       (u)  unmapped_nand2          2  4.6           
  g3776/in_0                                                                  
  g3776/z                       (u)  unmapped_complex2       1  2.3           
  g3777/in_1                                                                  
  g3777/z                       (u)  unmapped_nand2          4  9.2           
csa_tree_mul_535_1301/out_1[5] 
mux_ctl_4xi/csa_tree_mul_535_1301_out_1 
  g4350/in_1                                                                  
  g4350/z                       (u)  unmapped_complex2       1  2.3           
  g4351/in_1                                                                  
  g4351/z                       (u)  unmapped_nand2          1  2.3           
mux_ctl_4xi/csa_mux_b_mux_585_52_in_1 
csa_mux_b_mux_585_52/in_1[5] 
  g222/in_1                                                                   
  g222/z                        (u)  unmapped_nand2          1  2.3           
  g163/in_1                                                                   
  g163/z                        (u)  unmapped_nand2          2  4.6           
csa_mux_b_mux_585_52/z[5] 
final_adder_mux_585_52/B[5] 
  g1093/in_1                                                                  
  g1093/z                       (u)  unmapped_or2            1  2.3           
  g1477/in_1                                                                  
  g1477/z                       (u)  unmapped_nand2          1  2.3           
  g1461/in_0                                                                  
  g1461/z                       (u)  unmapped_complex2       1  2.3           
  g1460/in_1                                                                  
  g1460/z                       (u)  unmapped_nand2          2  4.6           
  g1459/in_0                                                                  
  g1459/z                       (u)  unmapped_or2            1  2.3           
  g1457/in_0                                                                  
  g1457/z                       (u)  unmapped_nand2          1  2.3           
  g1456/in_1                                                                  
  g1456/z                       (u)  unmapped_nand2          3  6.9           
  g1455/in_1                                                                  
  g1455/z                       (u)  unmapped_nand2          1  2.3           
  g1451/in_0                                                                  
  g1451/z                       (u)  unmapped_nand2          3  6.9           
  g1450/in_1                                                                  
  g1450/z                       (u)  unmapped_nand2          1  2.3           
  g1446/in_1                                                                  
  g1446/z                       (u)  unmapped_nand2          3  6.9           
  g1445/in_1                                                                  
  g1445/z                       (u)  unmapped_nand2          1  2.3           
  g1441/in_0                                                                  
  g1441/z                       (u)  unmapped_nand2          3  6.9           
  g1437/in_1                                                                  
  g1437/z                       (u)  unmapped_nand2          1  2.3           
  g1436/in_0                                                                  
  g1436/z                       (u)  unmapped_nand2          3  6.9           
  g1432/in_1                                                                  
  g1432/z                       (u)  unmapped_nand2          1  2.3           
  g1431/in_0                                                                  
  g1431/z                       (u)  unmapped_nand2          3  6.9           
  g1427/in_1                                                                  
  g1427/z                       (u)  unmapped_nand2          1  2.3           
  g1426/in_1                                                                  
  g1426/z                       (u)  unmapped_nand2          3  6.9           
  g1422/in_1                                                                  
  g1422/z                       (u)  unmapped_nand2          1  2.3           
  g1421/in_0                                                                  
  g1421/z                       (u)  unmapped_nand2          3  6.9           
  g1420/in_1                                                                  
  g1420/z                       (u)  unmapped_nand2          1  2.3           
  g1416/in_0                                                                  
  g1416/z                       (u)  unmapped_nand2          3  6.9           
  g1412/in_1                                                                  
  g1412/z                       (u)  unmapped_nand2          1  2.3           
  g1411/in_0                                                                  
  g1411/z                       (u)  unmapped_nand2          3  6.9           
  g1410/in_1                                                                  
  g1410/z                       (u)  unmapped_nand2          2  4.6           
  g1406/in_1                                                                  
  g1406/z                       (u)  unmapped_complex2       1  2.3           
  g1401/in_1                                                                  
  g1401/z                       (u)  unmapped_complex2       3  6.9           
  g1397/in_1                                                                  
  g1397/z                       (u)  unmapped_nand2          1  2.3           
  g1396/in_1                                                                  
  g1396/z                       (u)  unmapped_nand2          3  6.9           
  g1392/in_0                                                                  
  g1392/z                       (u)  unmapped_nand2          1  2.3           
  g1391/in_0                                                                  
  g1391/z                       (u)  unmapped_nand2          3  6.9           
  g1387/in_1                                                                  
  g1387/z                       (u)  unmapped_nand2          1  2.3           
  g1386/in_1                                                                  
  g1386/z                       (u)  unmapped_nand2          3  6.9           
  g1382/in_1                                                                  
  g1382/z                       (u)  unmapped_nand2          1  2.3           
  g1381/in_0                                                                  
  g1381/z                       (u)  unmapped_nand2          3  6.9           
  g1380/in_1                                                                  
  g1380/z                       (u)  unmapped_nand2          1  2.3           
  g1376/in_0                                                                  
  g1376/z                       (u)  unmapped_nand2          3  6.9           
  g1372/in_1                                                                  
  g1372/z                       (u)  unmapped_nand2          1  2.3           
  g1371/in_0                                                                  
  g1371/z                       (u)  unmapped_nand2          3  6.9           
  g1367/in_1                                                                  
  g1367/z                       (u)  unmapped_nand2          1  2.3           
  g1366/in_1                                                                  
  g1366/z                       (u)  unmapped_nand2          3  6.9           
  g1365/in_1                                                                  
  g1365/z                       (u)  unmapped_nand2          1  2.3           
  g1361/in_1                                                                  
  g1361/z                       (u)  unmapped_nand2          3  6.9           
  g1360/in_1                                                                  
  g1360/z                       (u)  unmapped_nand2          1  2.3           
  g1356/in_1                                                                  
  g1356/z                       (u)  unmapped_nand2          3  6.9           
  g1355/in_0                                                                  
  g1355/z                       (u)  unmapped_nand2          1  2.3           
  g1351/in_1                                                                  
  g1351/z                       (u)  unmapped_nand2          3  6.9           
  g1347/in_1                                                                  
  g1347/z                       (u)  unmapped_nand2          1  2.3           
  g1346/in_1                                                                  
  g1346/z                       (u)  unmapped_nand2          3  6.9           
  g1345/in_1                                                                  
  g1345/z                       (u)  unmapped_nand2          1  2.3           
  g1341/in_1                                                                  
  g1341/z                       (u)  unmapped_nand2          3  6.9           
  g1339/in_0                                                                  
  g1339/z                       (u)  unmapped_or2            1  2.3           
  g1340/in_1                                                                  
  g1340/z                       (u)  unmapped_nand2          3  6.9           
final_adder_mux_585_52/Z[30] 
inc_add_537_22_3/A[22] 
  g202/in_0                                                                   
  g202/z                        (u)  unmapped_or2            1  2.3           
  g203/in_1                                                                   
  g203/z                        (u)  unmapped_nand2          2  4.6           
inc_add_537_22_3/Z[22] 
cb_seqi/inc_add_537_22_3_Z[22] 
  g5214/in_1                                                                  
  g5214/z                       (u)  unmapped_or2            1  2.3           
  g5208/in_0                                                                  
  g5208/z                       (u)  unmapped_or2            1  2.3           
  g5185/in_0                                                                  
  g5185/z                       (u)  unmapped_or2            1  2.3           
  g5158/in_0                                                                  
  g5158/z                       (u)  unmapped_or2            1  2.3           
  g5146/in_0                                                                  
  g5146/z                       (u)  unmapped_or2            1  2.3           
  g5144/in_0                                                                  
  g5144/z                       (u)  unmapped_or2            1  2.3           
  g5139/in_0                                                                  
  g5139/z                       (u)  unmapped_or2            1  2.3           
  g5133/in_0                                                                  
  g5133/z                       (u)  unmapped_complex2       1  2.3           
  g5127/in_0                                                                  
  g5127/z                       (u)  unmapped_nand2          1  2.3           
  g5118/in_0                                                                  
  g5118/z                       (u)  unmapped_nand2          1  2.3           
  g5100/in_0                                                                  
  g5100/z                       (u)  unmapped_nand2          9 20.7           
  g137/in_1                                                                   
  g137/z                        (u)  unmapped_or2            7 16.1           
  g5052/in_1                                                                  
  g5052/z                       (u)  unmapped_or2            1  2.3           
  g5236/data0                                                                 
  g5236/z                       (u)  unmapped_bmux3          1  2.3           
  m_neg_partial_sum_reg[13]/d   <<<  unmapped_d_flop                          
  m_neg_partial_sum_reg[13]/clk      setup                                    
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                          capture                          10000 R 
                                     latency                                  
                                     uncertainty                              
------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Start-point  : cb_seqi/m_neg_partial_sum_reg[0]/clk
End-point    : cb_seqi/m_neg_partial_sum_reg[13]/d

(u) : Net has unmapped pin(s).

The global mapper estimates a slack for this path of 5805ps.
 
Cost Group 'cg_enable_group_clk' target slack:   290 ps
Target path end-point (Pin: RC_CG_HIER_INST0/RC_CGIC_INST/E (CKLNQD1/E))

             Pin                              Type          Fanout Load Arrival   
                                                                   (fF)   (ps)    
----------------------------------------------------------------------------------
(clock clk)                       <<<    launch                               0 R 
                                         latency                                  
cb_seqi
  m_pos_partial_sum_reg[15]/clk                                                   
  m_pos_partial_sum_reg[15]/q     (u)    unmapped_d_flop        25 16.5           
cb_seqi/get_pos_partial_sum 
cb_parti4348/cb_seqi_get_pos_partial_sum 
  g6219/in_1                                                                      
  g6219/z                         (u)    unmapped_or2            2  4.6           
  g6177/in_0                                                                      
  g6177/z                         (u)    unmapped_complex2       1  0.9           
cb_parti4348/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                <<< (P)  CKLNQD1                                  
  RC_CGIC_INST/CP                        setup                                    
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                              capture                          10000 R 
                                         latency                                  
                                         uncertainty                              
----------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Start-point  : cb_seqi/m_pos_partial_sum_reg[15]/clk
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved
(u) : Net has unmapped pin(s).

The global mapper estimates a slack for this path of 9081ps.
 
Multi-threaded Technology Mapping (8 threads per ST process, 8 of 16 CPUs usable)
          Restructuring (delay-based) cb_seq...
          Done restructuring (delay-based) cb_seq
        Optimizing component cb_seq...
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
        Early Area Reclamation for increment_unsigned_507_508 'timing_driven' (slack=4481, area=128)...
                  			o_slack=3889,  bc_slack=5072
          Restructuring (delay-based) add_unsigned_470...
          Done restructuring (delay-based) add_unsigned_470
        Optimizing component add_unsigned_470...
        Early Area Reclamation for add_unsigned_470 'very_fast' (slack=3618, area=292)...
                  			o_slack=3346,  bc_slack=3889
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) bmux_498_2...
          Done restructuring (delay-based) bmux_498_2
        Optimizing component bmux_498_2...
          Restructuring (delay-based) bmux_498_1...
          Done restructuring (delay-based) bmux_498_1
        Optimizing component bmux_498_1...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
        Early Area Reclamation for sub_unsigned 'very_fast' (slack=6877, area=154)...
                  			o_slack=6537,  bc_slack=7217
          Restructuring (delay-based) sub_unsigned_774...
          Done restructuring (delay-based) sub_unsigned_774
        Optimizing component sub_unsigned_774...
          Restructuring (delay-based) sub_unsigned_774...
          Done restructuring (delay-based) sub_unsigned_774
        Optimizing component sub_unsigned_774...
          Restructuring (delay-based) csa_tree_224...
          Done restructuring (delay-based) csa_tree_224
        Optimizing component csa_tree_224...
          Restructuring (delay-based) add_unsigned_1030...
          Done restructuring (delay-based) add_unsigned_1030
        Optimizing component add_unsigned_1030...
        Early Area Reclamation for add_unsigned_1030 'very_fast' (slack=4577, area=205)...
                  			o_slack=3962,  bc_slack=5192
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) cb_part_637...
          Done restructuring (delay-based) cb_part_637
        Optimizing component cb_part_637...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
        Pre-mapped Exploration for mult_unsigned 'timing_driven' (slack=3453, area=2041)...
                  			o_slack=3040,  bc_slack=3866
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
        Early Area Reclamation for mult_unsigned 'timing_driven' (slack=3453, area=2041)...
                  			o_slack=3040,  bc_slack=3866
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
 
Global mapping timing result
============================
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
                Pin                             Type       Fanout Load Slew Delay Arrival   
                                                                  (fF) (ps)  (ps)   (ps)    
--------------------------------------------------------------------------------------------
(clock clk)                                   launch                                    0 R 
                                              latency                        +200     200 R 
(constraints_tsmc65lp_line_44_118_1)          ext delay                      +100     300 F 
EN_reset_pe                                   in port           7  5.8   33   +15     315 F 
cb_parti4348/EN_reset_pe 
  g8189/A1                                                                     +0     315   
  g8189/ZN                                    NR2XD0            4  3.2  106   +78     392 R 
  g8182/I                                                                      +0     392   
  g8182/ZN                                    CKND1             2  2.1   44   +58     450 F 
  g8171/A1                                                                     +0     450   
  g8171/ZN                                    NR2XD1            5  4.1   71   +58     508 R 
  g8122/A2                                                                     +0     508   
  g8122/ZN                                    CKND2D0           2  1.8   84   +79     587 F 
  g8057/A2                                                                     +0     587   
  g8057/ZN                                    NR2XD0            2  2.1   79   +82     669 R 
  g8037/A2                                                                     +0     669   
  g8037/ZN                                    CKND2D0           1  0.9  108   +64     733 F 
cb_parti4348/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                          +0     733   
  RC_CGIC_INST/CP                             setup                     100  +101     834 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                                   capture                               10000 R 
                                              latency                        +200   10200 R 
                                              uncertainty                    -100   10100 R 
--------------------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Timing slack :    9266ps 
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

            Pin                      Type       Fanout Load Slew Delay Arrival   
                                                       (fF) (ps)  (ps)   (ps)    
---------------------------------------------------------------------------------
(clock clk)                        launch                                    0 R 
                                   latency                        +200     200 R 
cb_seqi
  m_neg_partial_sum_reg[0]/CP                                100           200 R 
  m_neg_partial_sum_reg[0]/Q       DFKCNQD4         13 10.3   42  +240     440 F 
cb_seqi/csa_tree_mul_535_1301_in_1 
cb_parti4348/cb_seqi_csa_tree_mul_535_1301_in_1 
  g8176/A1                                                          +0     440   
  g8176/ZN                         NR2XD0            2  1.4   61   +54     493 R 
  g8129/A2                                                          +0     493   
  g8129/ZN                         CKND2D0           2  1.4   72   +69     562 F 
  g8110/A1                                                          +0     562   
  g8110/ZN                         NR2XD0            2  1.4   62   +62     624 R 
  g8046/A2                                                          +0     624   
  g8046/ZN                         CKND2D0           2  1.4   72   +69     693 F 
  g8034/A2                                                          +0     693   
  g8034/ZN                         CKND2D0           1  1.5   76   +73     766 R 
  g8001/A1                                                          +0     766   
  g8001/ZN                         XNR2D2            8  7.1   86  +180     946 F 
cb_parti4348/csa_tree_mul_535_1301_in_1[4] 
csa_tree_mul_535_1301/in_1[5] 
  g8875/I                                                           +0     946   
  g8875/ZN                         INVD2            16 15.0  106   +92    1038 R 
  g8817/A2                                                          +0    1038   
  g8817/ZN                         XNR2D2            6  5.8   80  +219    1257 F 
  g8703/C                                                           +0    1257   
  g8703/Z                          AO211D1           6  5.5   88  +224    1482 F 
  g8693/I                                                           +0    1482   
  g8693/ZN                         INVD1             4  2.8   51   +60    1542 R 
  g8661/A1                                                          +0    1542   
  g8661/Z                          AO22D0            1  2.7   94  +141    1683 R 
  g8592/B                                                           +0    1683   
  g8592/S                          HA1D0             1  1.0   50  +149    1831 R 
  g8526/A                                                           +0    1831   
  g8526/S                          FA1D0             3  2.1   81  +273    2104 R 
csa_tree_mul_535_1301/out_1[8] 
mux_ctl_7xi/csa_tree_mul_535_1301_out_1 
  g4363/A2                                                          +0    2104   
  g4363/Z                          XOR2D0            1  0.7   50  +190    2294 F 
mux_ctl_7xi/csa_mux_b_mux_585_52_in_1 
csa_mux_b_mux_585_52/in_1[8] 
  g513/B2                                                           +0    2294   
  g513/Z                           AO22D0            1  1.0   53  +160    2454 F 
csa_mux_b_mux_585_52/z[8] 
final_adder_mux_585_52/B[8] 
  g2262/A                                                           +0    2454   
  g2262/CO                         FA1D0             1  0.9   50  +272    2726 F 
  g2261/CI                                                          +0    2726   
  g2261/CO                         FA1D0             1  0.9   50  +139    2865 F 
  g2260/CI                                                          +0    2865   
  g2260/CO                         FA1D0             1  0.9   50  +139    3004 F 
  g2259/CI                                                          +0    3004   
  g2259/CO                         FA1D0             1  0.9   50  +139    3144 F 
  g2258/CI                                                          +0    3144   
  g2258/CO                         FA1D0             1  0.9   50  +139    3283 F 
  g2257/CI                                                          +0    3283   
  g2257/CO                         FA1D0             1  0.9   50  +139    3422 F 
  g2256/CI                                                          +0    3422   
  g2256/CO                         FA1D0             1  0.9   50  +139    3562 F 
  g2255/CI                                                          +0    3562   
  g2255/CO                         FA1D0             1  0.9   50  +139    3701 F 
  g2254/CI                                                          +0    3701   
  g2254/CO                         FA1D0             1  0.9   50  +139    3840 F 
  g2253/CI                                                          +0    3840   
  g2253/CO                         FA1D0             1  0.9   50  +139    3979 F 
  g2252/CI                                                          +0    3979   
  g2252/CO                         FA1D0             1  0.9   50  +139    4119 F 
  g2251/CI                                                          +0    4119   
  g2251/CO                         FA1D0             1  0.9   50  +139    4258 F 
  g2250/CI                                                          +0    4258   
  g2250/CO                         FA1D0             1  0.9   50  +139    4397 F 
  g2249/CI                                                          +0    4397   
  g2249/CO                         FA1D0             1  0.9   50  +139    4537 F 
  g2248/CI                                                          +0    4537   
  g2248/CO                         FA1D0             1  0.9   50  +139    4676 F 
  g2247/CI                                                          +0    4676   
  g2247/CO                         FA1D0             1  0.9   50  +139    4815 F 
  g2246/CI                                                          +0    4815   
  g2246/CO                         FA1D0             1  0.9   50  +139    4954 F 
  g2245/CI                                                          +0    4954   
  g2245/CO                         FA1D0             1  0.9   50  +139    5094 F 
  g2244/CI                                                          +0    5094   
  g2244/CO                         FA1D0             1  0.9   50  +139    5233 F 
  g2243/CI                                                          +0    5233   
  g2243/CO                         FA1D0             1  0.9   50  +139    5372 F 
  g2242/CI                                                          +0    5372   
  g2242/CO                         FA1D0             1  0.9   50  +139    5512 F 
  g2241/CI                                                          +0    5512   
  g2241/CO                         FA1D0             1  0.9   50  +139    5651 F 
  g2240/CI                                                          +0    5651   
  g2240/S                          FA1D0             3  2.5   78  +168    5819 F 
final_adder_mux_585_52/Z[30] 
inc_add_537_22_3/A[22] 
  g308/B1                                                           +0    5819   
  g308/ZN                          MOAI22D1          2  1.3   55  +107    5926 F 
inc_add_537_22_3/Z[22] 
cb_seqi/inc_add_537_22_3_Z[22] 
  g6145/A4                                                          +0    5926   
  g6145/Z                          OR4D0             1  0.7   76  +215    6141 F 
  g6133/A4                                                          +0    6141   
  g6133/Z                          OR4D0             1  0.7   76  +220    6361 F 
  g6129/A1                                                          +0    6361   
  g6129/ZN                         NR2D0             1  0.7   73   +73    6434 R 
  g6119/I0                                                          +0    6434   
  g6119/ZN                         MUX2ND0           1  0.6   62   +69    6503 F 
  g6117/A2                                                          +0    6503   
  g6117/ZN                         CKND2D0           1  1.1   64   +63    6566 R 
  g6116/B                                                           +0    6566   
  g6116/Z                          OA21D1            9  6.6  102  +144    6710 R 
  g6106/I                                                           +0    6710   
  g6106/ZN                         CKND1             1  1.3   38   +50    6760 F 
  g6094/A1                                                          +0    6760   
  g6094/ZN                         NR2XD1            7  4.2   72   +57    6817 R 
  g6078/A2                                                          +0    6817   
  g6078/ZN                         CKND2D0           1  0.8   54   +61    6878 F 
  m_neg_partial_sum_reg[1]/D  <<<  DFKCNQD4                         +0    6878   
  m_neg_partial_sum_reg[1]/CP      setup                     100   +26    6903 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                        capture                               10000 R 
                                   latency                        +200   10200 R 
                                   uncertainty                    -100   10100 R 
---------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Timing slack :    3197ps 
Start-point  : cb_seqi/m_neg_partial_sum_reg[0]/CP
End-point    : cb_seqi/m_neg_partial_sum_reg[1]/D

 
 
Global mapping status
=====================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_map                 5550        0 

             Cost Group            Target    Slack    Diff.    Clock
--------------------------------------------------------------------
    cg_enable_group_clk               290     9266             10000 
                    clk               294     3197             10000 

 
Global incremental target info
==============================
Cost Group 'clk' target slack:   195 ps
Target path end-point (Pin: m_neg_partial_sum_reg[13]/D (DFKCNQD4/D))

             Pin                      Type       Fanout Load Arrival   
                                                        (fF)   (ps)    
-----------------------------------------------------------------------
(clock clk)                    <<<  launch                         0 R 
                                    latency                            
cb_seqi
  m_neg_partial_sum_reg[0]/CP                                          
  m_neg_partial_sum_reg[0]/Q        DFKCNQD4         13 10.3           
cb_seqi/csa_tree_mul_535_1301_in_1 
cb_parti4348/cb_seqi_csa_tree_mul_535_1301_in_1 
  g8176/A1                                                             
  g8176/ZN                          NR2XD0            2  1.4           
  g8129/A2                                                             
  g8129/ZN                          CKND2D0           2  1.4           
  g8110/A1                                                             
  g8110/ZN                          NR2XD0            2  1.4           
  g8046/A2                                                             
  g8046/ZN                          CKND2D0           2  1.4           
  g8034/A2                                                             
  g8034/ZN                          CKND2D0           1  1.5           
  g8001/A1                                                             
  g8001/ZN                          XNR2D2            8  7.1           
cb_parti4348/csa_tree_mul_535_1301_in_1[4] 
csa_tree_mul_535_1301/in_1[5] 
  g8875/I                                                              
  g8875/ZN                          INVD2            16 15.0           
  g8817/A2                                                             
  g8817/ZN                          XNR2D2            6  5.8           
  g8703/C                                                              
  g8703/Z                           AO211D1           6  5.5           
  g8693/I                                                              
  g8693/ZN                          INVD1             4  2.8           
  g8661/A1                                                             
  g8661/Z                           AO22D0            1  2.7           
  g8592/B                                                              
  g8592/S                           HA1D0             1  1.0           
  g8526/A                                                              
  g8526/S                           FA1D0             3  2.1           
csa_tree_mul_535_1301/out_1[8] 
mux_ctl_7xi/csa_tree_mul_535_1301_out_1 
  g4363/A2                                                             
  g4363/Z                           XOR2D0            1  0.7           
mux_ctl_7xi/csa_mux_b_mux_585_52_in_1 
csa_mux_b_mux_585_52/in_1[8] 
  g513/B2                                                              
  g513/Z                            AO22D0            1  1.0           
csa_mux_b_mux_585_52/z[8] 
final_adder_mux_585_52/B[8] 
  g2262/A                                                              
  g2262/CO                          FA1D0             1  0.9           
  g2261/CI                                                             
  g2261/CO                          FA1D0             1  0.9           
  g2260/CI                                                             
  g2260/CO                          FA1D0             1  0.9           
  g2259/CI                                                             
  g2259/CO                          FA1D0             1  0.9           
  g2258/CI                                                             
  g2258/CO                          FA1D0             1  0.9           
  g2257/CI                                                             
  g2257/CO                          FA1D0             1  0.9           
  g2256/CI                                                             
  g2256/CO                          FA1D0             1  0.9           
  g2255/CI                                                             
  g2255/CO                          FA1D0             1  0.9           
  g2254/CI                                                             
  g2254/CO                          FA1D0             1  0.9           
  g2253/CI                                                             
  g2253/CO                          FA1D0             1  0.9           
  g2252/CI                                                             
  g2252/CO                          FA1D0             1  0.9           
  g2251/CI                                                             
  g2251/CO                          FA1D0             1  0.9           
  g2250/CI                                                             
  g2250/CO                          FA1D0             1  0.9           
  g2249/CI                                                             
  g2249/CO                          FA1D0             1  0.9           
  g2248/CI                                                             
  g2248/CO                          FA1D0             1  0.9           
  g2247/CI                                                             
  g2247/CO                          FA1D0             1  0.9           
  g2246/CI                                                             
  g2246/CO                          FA1D0             1  0.9           
  g2245/CI                                                             
  g2245/CO                          FA1D0             1  0.9           
  g2244/CI                                                             
  g2244/CO                          FA1D0             1  0.9           
  g2243/CI                                                             
  g2243/CO                          FA1D0             1  0.9           
  g2242/CI                                                             
  g2242/CO                          FA1D0             1  0.9           
  g2241/CI                                                             
  g2241/CO                          FA1D0             1  0.9           
  g2240/CI                                                             
  g2240/S                           FA1D0             3  2.5           
final_adder_mux_585_52/Z[30] 
inc_add_537_22_3/A[22] 
  g308/B1                                                              
  g308/ZN                           MOAI22D1          2  1.3           
inc_add_537_22_3/Z[22] 
cb_seqi/inc_add_537_22_3_Z[22] 
  g6145/A4                                                             
  g6145/Z                           OR4D0             1  0.7           
  g6133/A4                                                             
  g6133/Z                           OR4D0             1  0.7           
  g6129/A1                                                             
  g6129/ZN                          NR2D0             1  0.7           
  g6119/I0                                                             
  g6119/ZN                          MUX2ND0           1  0.6           
  g6117/A2                                                             
  g6117/ZN                          CKND2D0           1  1.1           
  g6116/B                                                              
  g6116/Z                           OA21D1            9  6.6           
  g6106/I                                                              
  g6106/ZN                          CKND1             1  1.3           
  g6094/A1                                                             
  g6094/ZN                          NR2XD1            7  4.2           
  g6084/A2                                                             
  g6084/ZN                          CKND2D0           1  0.8           
  m_neg_partial_sum_reg[13]/D  <<<  DFKCNQD4                           
  m_neg_partial_sum_reg[13]/CP      setup                              
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                         capture                    10000 R 
                                    latency                            
                                    uncertainty                        
-----------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Start-point  : cb_seqi/m_neg_partial_sum_reg[0]/CP
End-point    : cb_seqi/m_neg_partial_sum_reg[13]/D

The global mapper estimates a slack for this path of 2716ps.
 
Cost Group 'cg_enable_group_clk' target slack:   193 ps
Target path end-point (Pin: RC_CG_HIER_INST0/RC_CGIC_INST/E (CKLNQD1/E))

                Pin                             Type       Fanout Load Arrival   
                                                                  (fF)   (ps)    
---------------------------------------------------------------------------------
(clock clk)                            <<<    launch                         0 R 
                                              latency                            
(constraints_tsmc65lp_line_44_118_1)          ext delay                          
EN_reset_pe                                   in port           7  5.8           
cb_parti4348/EN_reset_pe 
  g8189/A1                                                                       
  g8189/ZN                                    NR2XD0            4  3.2           
  g8182/I                                                                        
  g8182/ZN                                    CKND1             2  2.1           
  g8171/A1                                                                       
  g8171/ZN                                    NR2XD1            5  4.1           
  g8122/A2                                                                       
  g8122/ZN                                    CKND2D0           2  1.8           
  g8057/A2                                                                       
  g8057/ZN                                    NR2XD0            2  2.1           
  g8037/A2                                                                       
  g8037/ZN                                    CKND2D0           1  0.9           
cb_parti4348/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                            
  RC_CGIC_INST/CP                             setup                              
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                                   capture                    10000 R 
                                              latency                            
                                              uncertainty                        
---------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

The global mapper estimates a slack for this path of 8989ps.
 
 
Global incremental timing result
================================
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
                Pin                             Type       Fanout Load Slew Delay Arrival   
                                                                  (fF) (ps)  (ps)   (ps)    
--------------------------------------------------------------------------------------------
(clock clk)                                   launch                                    0 R 
                                              latency                        +200     200 R 
(constraints_tsmc65lp_line_44_118_1)          ext delay                      +100     300 R 
EN_reset_pe                                   in port           7  6.1   49   +22     322 R 
cb_parti4348/EN_reset_pe 
  g8189/A1                                                                     +0     322   
  g8189/ZN                                    NR2XD1            4  4.0   56   +48     370 F 
  drc_bufs8271/I                                                               +0     370   
  drc_bufs8271/ZN                             INVD0             2  2.2   70   +63     433 R 
  g8171/A1                                                                     +0     433   
  g8171/ZN                                    NR2XD1            5  4.6   61   +58     490 F 
  g8122/A2                                                                     +0     490   
  g8122/ZN                                    CKND2D0           2  1.9   88   +76     567 R 
  g8057/A2                                                                     +0     567   
  g8057/ZN                                    NR2XD0            2  1.8   53   +65     632 F 
  g8037/A2                                                                     +0     632   
  g8037/ZN                                    CKND2D0           1  0.9   58   +57     689 R 
cb_parti4348/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                          +0     689   
  RC_CGIC_INST/CP                             setup                     100  +138     827 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                                   capture                               10000 R 
                                              latency                        +200   10200 R 
                                              uncertainty                    -100   10100 R 
--------------------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Timing slack :    9273ps 
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

            Pin                      Type       Fanout Load Slew Delay Arrival   
                                                       (fF) (ps)  (ps)   (ps)    
---------------------------------------------------------------------------------
(clock clk)                        launch                                    0 R 
                                   latency                        +200     200 R 
cb_seqi
  m_neg_partial_sum_reg[0]/CP                                100           200 R 
  m_neg_partial_sum_reg[0]/Q       DFKCNQD2         13 10.1   57  +286     486 F 
cb_seqi/csa_tree_mul_535_1301_in_1 
cb_parti4348/cb_seqi_csa_tree_mul_535_1301_in_1 
  g8176/A1                                                          +0     486   
  g8176/ZN                         NR2XD0            2  1.5   64   +59     545 R 
  g8315/B1                                                          +0     545   
  g8315/ZN                         IND2D0            2  1.4   74   +68     613 F 
  g8110/A1                                                          +0     613   
  g8110/ZN                         NR2XD0            2  1.5   64   +64     677 R 
  g8317/B1                                                          +0     677   
  g8317/ZN                         IND2D0            2  1.4   74   +68     745 F 
  g8034/A2                                                          +0     745   
  g8034/ZN                         CKND2D0           1  1.5   76   +74     819 R 
  g8001/A1                                                          +0     819   
  g8001/ZN                         XNR2D2            8  7.7   88  +182    1002 F 
cb_parti4348/csa_tree_mul_535_1301_in_1[4] 
csa_tree_mul_535_1301/in_1[5] 
  g8875/I                                                           +0    1002   
  g8875/ZN                         CKND3            16 15.0   74   +74    1076 R 
  g8817/A2                                                          +0    1076   
  g8817/ZN                         XNR2D1            6  5.0   82  +196    1272 F 
  g8703/C                                                           +0    1272   
  g8703/Z                          AO211D1           6  5.4   87  +224    1496 F 
  g8693/I                                                           +0    1496   
  g8693/ZN                         CKND1             4  2.8   51   +60    1556 R 
  g8661/A1                                                          +0    1556   
  g8661/Z                          AO22D0            1  2.7   94  +141    1697 R 
  g8592/B                                                           +0    1697   
  g8592/S                          HA1D0             1  1.0   50  +149    1846 R 
  g8526/A                                                           +0    1846   
  g8526/S                          FA1D0             3  2.1   81  +273    2118 R 
csa_tree_mul_535_1301/out_1[8] 
mux_ctl_7xi/csa_tree_mul_535_1301_out_1 
  g4363/A2                                                          +0    2118   
  g4363/Z                          XOR2D0            1  0.7   50  +190    2309 F 
mux_ctl_7xi/csa_mux_b_mux_585_52_in_1 
csa_mux_b_mux_585_52/in_1[8] 
  g513/B2                                                           +0    2309   
  g513/Z                           AO22D0            1  1.0   53  +160    2469 F 
csa_mux_b_mux_585_52/z[8] 
final_adder_mux_585_52/B[8] 
  g2262/A                                                           +0    2469   
  g2262/CO                         FA1D0             1  0.9   50  +272    2740 F 
  g2261/CI                                                          +0    2740   
  g2261/CO                         FA1D0             1  0.9   50  +139    2880 F 
  g2260/CI                                                          +0    2880   
  g2260/CO                         FA1D0             1  0.9   50  +139    3019 F 
  g2259/CI                                                          +0    3019   
  g2259/CO                         FA1D0             1  0.9   50  +139    3158 F 
  g2258/CI                                                          +0    3158   
  g2258/CO                         FA1D0             1  0.9   50  +139    3297 F 
  g2257/CI                                                          +0    3297   
  g2257/CO                         FA1D0             1  0.9   50  +139    3437 F 
  g2256/CI                                                          +0    3437   
  g2256/CO                         FA1D0             1  0.9   50  +139    3576 F 
  g2255/CI                                                          +0    3576   
  g2255/CO                         FA1D0             1  0.9   50  +139    3715 F 
  g2254/CI                                                          +0    3715   
  g2254/CO                         FA1D0             1  0.9   50  +139    3855 F 
  g2253/CI                                                          +0    3855   
  g2253/CO                         FA1D0             1  0.9   50  +139    3994 F 
  g2252/CI                                                          +0    3994   
  g2252/CO                         FA1D0             1  0.9   50  +139    4133 F 
  g2251/CI                                                          +0    4133   
  g2251/CO                         FA1D0             1  0.9   50  +139    4272 F 
  g2250/CI                                                          +0    4272   
  g2250/CO                         FA1D0             1  0.9   50  +139    4412 F 
  g2249/CI                                                          +0    4412   
  g2249/CO                         FA1D0             1  0.9   50  +139    4551 F 
  g2248/CI                                                          +0    4551   
  g2248/CO                         FA1D0             1  0.9   50  +139    4690 F 
  g2247/CI                                                          +0    4690   
  g2247/CO                         FA1D0             1  0.9   50  +139    4830 F 
  g2246/CI                                                          +0    4830   
  g2246/CO                         FA1D0             1  0.9   50  +139    4969 F 
  g2245/CI                                                          +0    4969   
  g2245/CO                         FA1D0             1  0.9   50  +139    5108 F 
  g2244/CI                                                          +0    5108   
  g2244/CO                         FA1D0             1  0.9   50  +139    5248 F 
  g2243/CI                                                          +0    5248   
  g2243/CO                         FA1D0             1  0.9   50  +139    5387 F 
  g2242/CI                                                          +0    5387   
  g2242/CO                         FA1D0             1  0.9   50  +139    5526 F 
  g2241/CI                                                          +0    5526   
  g2241/CO                         FA1D0             1  0.9   50  +139    5666 F 
  g2240/CI                                                          +0    5666   
  g2240/S                          FA1D0             3  2.7   95  +199    5864 R 
final_adder_mux_585_52/Z[30] 
inc_add_537_22_3/A[22] 
  g308/B1                                                           +0    5864   
  g308/ZN                          MOAI22D1          2  1.3   73  +107    5971 R 
inc_add_537_22_3/Z[22] 
cb_seqi/inc_add_537_22_3_Z[22] 
  g6144/A1                                                          +0    5971   
  g6144/Z                          AN4D0             1  0.7   67  +176    6147 R 
  g6134/A1                                                          +0    6147   
  g6134/Z                          AN4D0             1  0.7   67  +175    6322 R 
  g6124/A1                                                          +0    6322   
  g6124/ZN                         IOA21D0           1  1.0   55  +111    6433 R 
  g6120/A1                                                          +0    6433   
  g6120/Z                          AN2D2            14 12.7  100  +134    6567 R 
  drc_bufs6188/I                                                    +0    6567   
  drc_bufs6188/Z                   CKBD1             2  2.0   41   +85    6652 R 
  g6099/A2                                                          +0    6652   
  g6099/ZN                         AOI22D1           1  0.6   59   +44    6696 F 
  g6079/A1                                                          +0    6696   
  g6079/ZN                         CKND2D0           1  0.9   58   +56    6752 R 
  m_neg_partial_sum_reg[3]/D  <<<  DFKCNQD2                         +0    6752   
  m_neg_partial_sum_reg[3]/CP      setup                     100  +160    6912 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                        capture                               10000 R 
                                   latency                        +200   10200 R 
                                   uncertainty                    -100   10100 R 
---------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Timing slack :    3188ps 
Start-point  : cb_seqi/m_neg_partial_sum_reg[0]/CP
End-point    : cb_seqi/m_neg_partial_sum_reg[3]/D

 
 
Global incremental optimization status
======================================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_incr                5397        0 

             Cost Group            Target    Slack    Diff.    Clock
--------------------------------------------------------------------
    cg_enable_group_clk               193     9273             10000 
                    clk               195     3188             10000 


Scan mapping status report
==========================
    Scan mapping: converting flip-flops that pass TDRC.
    Scan mapping: bypassed.  You have to either 1) set attribute 'dft_scan_map_mode' to 'tdrc_pass' and run 'check_dft_rules' or 2) set attribute 'dft_scan_map_mode' to 'force_all'.

    Scan mapping bypassed because no TDRC data is available: either command 'check_dft_rules' has not been run or TDRC data has been subsequently invalidated.
          Performing post-mapping optimization ...

Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'inc_add_537_22_3' in module 'mkPE16' would be automatically ungrouped.
        : Hierarchical instances can be automatically ungrouped to allow for better area or timing optimization. You can control auto ungrouping using the root-level attribute 'auto_ungroup'. You can skip individual instances or modules using the attribute 'ungroup_ok'.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'add_561_25_Y_add_541_22_Y_add_434_25_Y_add_436_25' in module 'mkPE16' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'final_adder_mux_585_52' in module 'mkPE16' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'sub_558_25' in module 'mkPE16' would be automatically ungrouped.
          There are 4 hierarchical instances automatically ungrouped.
        Applying wireload models.
        Computing net loads.
 Doing ConstProp on design:mkPE16 ... 

Info    : One or more cost groups were automatically created for clock gate enable paths. [POPT-96]
    Automatically cost grouped 4 clock gate paths.
  Decloning clock-gating logic from design:mkPE16
Clock-gating declone status
===========================
Total number of clock-gating instances before: 4
Total number of clock-gating instances after : 4
 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - - - DRC Totals - - - -
                           Total  Weighted      Neg      Max       Max     Max  
Operation                   Area   Slacks      Slack    Trans      Cap   Fanout 
-------------------------------------------------------------------------------
 init_delay                 5341        0         0       280        0        1

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
       crit_upsz         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00

 
Local TNS optimization status
=============================
                                   Group   
                                  Tot Wrst     Total - - - - DRC Totals - - - -
                           Total  Weighted      Neg      Max       Max     Max  
Operation                   Area   Slacks      Slack    Trans      Cap   Fanout 
-------------------------------------------------------------------------------
 init_tns                   5341        0         0       280        0        1

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00

##>======== Cadence Confidential (Mapping-Logical) ========
##>Main Thread Summary:
##>--------------------------------------------------------
##>STEP               Elapsed     Insts      Area    Memory
##>--------------------------------------------------------
##>M:Initial                0      4305     14565       418
##>M:Launch ST              0         -         -         -
##>M:Distributed            0         -         -         -
##>M:Cleanup                0      1606      5341       449
##>M:MBCI                   0      1606      5341       449
##>M:Misc                  49
##>--------------------------------------------------------
##>Total Elapsed           49
##>========================================================
  Setting attribute of root '/': 'pbs_stage_start_elapsed_time' = 73
  Setting attribute of root '/': 'pbs_stage_start_st_time' = 70
Info    : Done mapping. [SYNTH-5]
        : Done mapping 'mkPE16'.
        Applying wireload models.
        Computing net loads.
     flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:            68             49           -0.0 ps         3187.9 ps  syn_map
report area > $REPORTS_PATH/area.rpt
report timing > $REPORTS_PATH/timing.rpt
report power > $REPORTS_PATH/power.rpt
Warning : Clock period mismatch between synthesis(SDC) and simulation(VCD/TCF/SAIF) values. [RPT-13]
        : Clock(clock:mkPE16/clk) period mismatch between SDC(10.0 ns) and asserted(9.642876084220878 ns) values.
        : Synthesis clock period (derived from SDC) does not match with asserted data from VCD/TCF/SAIF. User can scale simulation frequency using -scale option of read_vcd/read_tcf/read_saif commands.
Info    : Time taken to report power. [RPT-7]
        : 0.00 cpu seconds
report clock_gating > $REPORTS_PATH/clockgating.rpt
report gates > $REPORTS_PATH/gates.rpt
report gates -power > $REPORTS_PATH/gates_power.rpt
report datapath > $REPORTS_PATH/datapath.rpt
Beginning report datapath command
Warning : The filename, column and line number information will not be available in the report. [RPT_DP-100]
        : The attribute for getting HDL filename and line number is not set.
        : You must set the 'hdl_track_filename_row_col' attribute to 'true' (before elaborate) to enable filename, column, and line number tracking in the datapath report.
report messages > $REPORTS_PATH/messages.rpt
report qor > $REPORTS_PATH/qor.rpt
write_design -basename ${OUTPUTS_PATH}/${design}_syn
Exporting design data for 'mkPE16' to build/tsmc65lp/test_run/out/mkPE16_syn...
Info    : Generating design database. [PHYS-90]
        : Writing netlist: build/tsmc65lp/test_run/out/mkPE16_syn.v
        : The database contains all the files required to restore the design in the specified application.
Info    : Generating design database. [PHYS-90]
        : Writing Metrics file: build/tsmc65lp/test_run/out/mkPE16_syn.metrics.json
Info    : Generating design database. [PHYS-90]
        : Writing write_script: build/tsmc65lp/test_run/out/mkPE16_syn.g
Info    : Generating design database. [PHYS-90]
        : Writing TCF: build/tsmc65lp/test_run/out/mkPE16_syn.tcf
Info    : Generating design database. [PHYS-90]
        : Writing multi-mode multi-corner file: build/tsmc65lp/test_run/out/mkPE16_syn.mmmc.tcl
Finished SDC export (command execution time mm:ss (real) = 00:00).
Info: file build/tsmc65lp/test_run/out//mkPE16_syn.default_emulate_constraint_mode.sdc has been written
File build/tsmc65lp/test_run/out//mkPE16_syn.mmmc.tcl has been written.
Info    : Design has no library or power domains. [INVS_MSV-301]
        : No power domains will be created for Innovus.
Info    : Generating design database. [PHYS-90]
        : Writing INIT setup file for Genus: build/tsmc65lp/test_run/out/mkPE16_syn.genus_init.tcl
Info    : Generating design database. [PHYS-90]
        : Writing Genus(TM) Synthesis Solution setup file: build/tsmc65lp/test_run/out/mkPE16_syn.genus_setup.tcl
** To load the database source build/tsmc65lp/test_run/out/mkPE16_syn.genus_setup.tcl in an Genus(TM) Synthesis Solution session.
Finished exporting design data for 'mkPE16' (command execution time mm:ss cpu = 00:00, real = 00:00).
.
write_hdl  > ${OUTPUTS_PATH}/${design}_syn.v
write_sdc > ${OUTPUTS_PATH}/${design}_syn.sdc
Finished SDC export (command execution time mm:ss (real) = 00:00).
write_sdf -edges check_edge > ${OUTPUTS_PATH}/${design}_syn.sdf
Warning : Default value for an option has changed in this release. [WSDF-104]
        : Default value for -setuphold has changed from split to merge_always. Specify '-setuphold split' to preserve the behavior of the previous release.
        : Specify the option explicitly.
Warning : Default value for an option has changed in this release. [WSDF-104]
        : Default value for -recrem has changed from split to merge_always. Specify '-recrem split' to preserve the behavior of the previous release.
write_db ${design} -to_file ${OUTPUTS_PATH}/${design}_syn.db
Finished exporting design database to file 'build/tsmc65lp/test_run/out/mkPE16_syn.db' for 'mkPE16' (command execution time mm:ss cpu = 00:00, real = 00:00).
file copy [get_db stdout_log] ${LOG_PATH}/
