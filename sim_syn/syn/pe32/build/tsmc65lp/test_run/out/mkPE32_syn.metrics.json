{ "id": "",
  "metric_cfgs": [

    {"metric":"alerts", "type":"alert", "description":"Alerts about other metric values", "dp":"0", "cmp":"notEqualBad"}, 
    {"metric":"design.area", "units":"um^2", "type":"area", "description":"Total design area", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.always_on", "units":"um^2", "type":"area", "description":"Total area of always on instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.area_io", "units":"um^2", "type":"area", "description":"Total area of area_io instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.blackbox", "units":"um^2", "type":"area", "description":"Total area of block instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.block", "units":"um^2", "type":"area", "description":"Total area of block instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.block.<block>", "units":"um^2", "type":"area", "description":"Design area per block", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.buffer", "units":"um^2", "type":"area", "description":"Total area of buffer instances", "dp":"0", "cmp":"lessBetter", "scan_tcl":"\n  set_alert_metric -id $db_id -uuid $self_uuid -name $metric \"Buffer area increased by over 20%\" -condition [expr { [lindex $previous 0 0] ne {} && [lindex $self 0] ne {} && ( [lindex $previous 0 0] == 0 || (([lindex $self 0] * 100) / [lindex $previous 0 0]) >= 120) }]\n"}, 
    {"metric":"design.area.filler", "units":"um^2", "type":"area", "description":"Total design area of filler isntances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.inverter", "units":"um^2", "type":"area", "description":"Total area of inverter", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.io", "units":"um^2", "type":"area", "description":"Total area of io instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.logical", "units":"um^2", "type":"area", "description":"Total area of logical", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.physical", "units":"um^2", "type":"area", "description":"Total area of physical only instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.power_switch", "units":"um^2", "type":"area", "description":"Total area of power switches instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.sequential", "units":"um^2", "type":"area", "description":"Total area of sequential instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.area.std_cell", "units":"um^2", "type":"area", "description":"Total area of standard cell instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.congestion.hotspot.max", "description":"Maximum congestion hotspot size", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"design.congestion.hotspot.total", "description":"Total size of all congestion hotspots", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"design.density", "units":"%", "type":"density", "description":"Density w/o filler cells", "dp":"1", "cmp":"lessBetter"}, 
    {"metric":"design.density.peak", "units":"%", "type":"density", "description":"Peak design density w/o filler cells", "dp":"1", "cmp":"lessBetter"}, 
    {"metric":"design.img.floorplan", "type":"image", "dp":"0"}, 
    {"metric":"design.instance.always_on", "description":"Total number of always on instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instance.power_switch", "description":"Total number of power switches", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances", "description":"Total number of instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.area_io", "description":"Total number of Area IO instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.blackbox", "description":"Total number of blackbox instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.block", "description":"Total number of block instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.block.<block>", "description":"Number of instances per block", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.buffer", "description":"Total number of buffer instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.filler", "description":"Total number of filler instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.inverter", "description":"Total number of inverter instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.io", "description":"Total number of IO instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.logical", "description":"Total number of logical instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.physical", "description":"Total number of physical instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.sequential", "description":"Total number of sequential instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.instances.std_cell", "description":"Total number of standard cell instances", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.name", "type":"area", "description":"Design name", "dp":"0"}, 
    {"metric":"design.nets.avg_pin", "description":"Average terms per net", "dp":"1", "cmp":"lessBetter"}, 
    {"metric":"design.nets.global", "description":"Number of global nets", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.nets.missing_iso", "description":"Number of nets crossing domains w/o ISO", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.nets.signal", "description":"Number of signal nets", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"design.power_domains", "description":"List of power domains", "dp":"0"}, 
    {"metric":"flow.cputime", "units":"s", "type":"time", "description":"CPU time since the last snapshot", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.cputime.not_child", "units":"s", "type":"time", "description":"CPU time taken since the last snapshot excluding child snapshots", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.cputime.total", "units":"s", "type":"time", "description":"Total CPU time", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.cputime.user", "units":"s", "type":"time", "description":"User CPU time since the last snapshot", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.cputime.user.not_child", "units":"s", "type":"time", "description":"User CPU time since the last snapshot excluding child snapshots", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.cputime.user.total", "units":"s", "type":"time", "description":"Total user CPU time", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.exclude_time_metric", "type":"bool", "description":"CPU and Wall time are excluded from parent snapshot", "dp":"0", "inheritance_enabled":false}, 
    {"metric":"flow.log", "type":"file", "description":"log file", "dp":"0"}, 
    {"metric":"flow.log.verbose", "description":"verbose log file", "dp":"0"}, 
    {"metric":"flow.machine", "tcl":" info hostname ", "description":"Hostname", "dp":"0"}, 
    {"metric":"flow.machine.load", "description":"Host load average", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"flow.memory", "units":"MB", "type":"memory", "description":"Current memory footprint", "dp":"0", "cmp":"lessBetter", "inheritance_tcl":"\n  variable m [lindex [get_metric -id $db_id -uuid $self_uuid $metric.instant] 1]\n  # Use get_metric to normalize to MB and strip off units\n  foreach pu $previous_uuid {variable p [lindex [get_metric -id $db_id -uuid $pu $metric] 1]; if {$p > $m || $m == \"\"} {variable m $p}}\n  foreach cu $children_uuid {variable c [lindex [get_metric -id $db_id -uuid $cu $metric] 1]; if {$c > $m || $m == \"\"} {variable m $c}}\n  if {$m == \"\"} {return \"\"}\n  return [list $m MB]\n", "inherit_no_children":true}, 
    {"metric":"flow.memory.instant", "units":"MB", "type":"memory", "description":"Current memory footprint", "dp":"0", "cmp":"lessBetter", "inheritance_enabled":false}, 
    {"metric":"flow.memory.resident", "units":"MB", "type":"memory", "description":"Current resident memory footprint", "dp":"0", "cmp":"lessBetter", "inheritance_tcl":"\n  variable m [lindex [get_metric -id $db_id -uuid $self_uuid $metric.instant] 1]\n  # Use get_metric to normalize to MB and strip off units\n  foreach pu $previous_uuid {variable p [lindex [get_metric -id $db_id -uuid $pu $metric] 1]; if {$p > $m || $m == \"\"} {variable m $p}}\n  foreach cu $children_uuid {variable c [lindex [get_metric -id $db_id -uuid $cu $metric] 1]; if {$c > $m || $m == \"\"} {variable m $c}}\n  if {$m == \"\"} {return \"\"}\n  return [list $m MB]\n", "inherit_no_children":true}, 
    {"metric":"flow.memory.resident.instant", "units":"MB", "type":"memory", "description":"Current resident memory footprint", "dp":"0", "cmp":"lessBetter", "inheritance_enabled":false}, 
    {"metric":"flow.memory.resident.peak", "units":"MB", "type":"memory", "description":"Maximum resident memory footprint", "dp":"0", "cmp":"lessBetter", "inheritance_tcl":"\n  variable m [lindex [get_metric -id $db_id -uuid $self_uuid $metric.instant] 1]\n  # Use get_metric to normalize to MB and strip off units\n  foreach pu $previous_uuid {variable p [lindex [get_metric -id $db_id -uuid $pu $metric] 1]; if {$p > $m || $m == \"\"} {variable m $p}}\n  foreach cu $children_uuid {variable c [lindex [get_metric -id $db_id -uuid $cu $metric] 1]; if {$c > $m || $m == \"\"} {variable m $c}}\n  if {$m == \"\"} {return \"\"}\n  return [list $m MB]\n", "inherit_no_children":true}, 
    {"metric":"flow.memory.resident.peak.instant", "units":"MB", "type":"memory", "description":"Maximum resident memory footprint", "dp":"0", "cmp":"lessBetter", "inheritance_enabled":false}, 
    {"metric":"flow.realtime", "units":"s", "type":"time", "description":"Real time since the last snapshot", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.realtime.not_child", "units":"s", "type":"time", "description":"Real time since the last snapshot excluding child snapshots", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.realtime.total", "units":"s", "type":"time", "description":"Total real time", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"flow.root_config", "type":"dict", "description":"Non-default root config option values", "dp":"0"}, 
    {"metric":"flow.run_directory", "tcl":" return [pwd] ", "type":"dir", "description":"Current working directory", "dp":"0"}, 
    {"metric":"flow.run_tag", "tcl":" ; #owner: um team\n  if {[is_common_ui_mode]} {\n    return [get_db flow_run_tag]\n  } else {\n    if {[is_attribute -obj_type root flow_run_tag]} { \n      return [um::get_obj flow_run_tag]\n    }\n  }\n  return \"\" \n", "description":"Flow run tag", "dp":"0"}, 
    {"metric":"flow.step.tcl", "type":"tcl", "description":"Tcl that was executed for this step", "dp":"0", "inheritance_enabled":false}, 
    {"metric":"flow.template.feature_enabled", "tcl":"\n  variable ret {}\n  variable f\n  variable s\n  if {[is_common_ui_mode]} {\n    foreach {f s} [get_db flow_template_feature_definition] { \n      if {$s eq {enabled}} { \n        lappend ret $f\n      }\n      if {($s eq {optional}) && [get_db flow_feature_$f]} { \n        lappend ret $f\n      }\n    } \n  } else {\n    if {[is_attribute flow_template_feature_definition -obj_type root]} { \n      foreach {f s} [um::get_obj flow_template_feature_definition] { \n        if {$s eq {enabled}} { \n          lappend ret $f\n        }\n        if {($s eq {optional}) && [um::get_obj flow_feature_$f]} { \n          lappend ret $f\n        }\n      } \n    }\n  }\n  return $ret\n", "description":"The flow template features that are currently enabled", "dp":"0"}, 
    {"metric":"flow.template.type", "tcl":"\n  if {[is_common_ui_mode]} {\n    return [get_db flow_template_type]\n  } else {\n    if {[is_attribute flow_template_type -obj_type root]} { \n      return [um::get_obj flow_template_type]; \n    }\n  }\n  return {}\n", "description":"The type of flow template", "dp":"0"}, 
    {"metric":"flow.tool.name", "tcl":" \n  if {[is_common_ui_mode]} {\n    return [get_db program_name]\n  } else {\n    return [um::get_obj program_name]\n  }\n", "description":"Tool name", "dp":"0"}, 
    {"metric":"flow.tool.name.short", "tcl":"\n  if {[is_common_ui_mode]} {\n    return [get_db program_short_name] \n  } else {\n    return [um::get_obj program_short_name] \n  }\n", "description":"Tool short name", "dp":"0"}, 
    {"metric":"flow.tool.version", "tcl":"\n  if {[is_common_ui_mode]} {\n    return [get_db program_version]\n  } else {\n    return [um::get_obj program_version]\n  }\n", "description":"Tool version", "dp":"0"}, 
    {"metric":"flow.user", "tcl":" set env(USER) ", "description":"User name", "dp":"0"}, 
    {"metric":"messages", "tcl":"\n  # check that the procs exist\n  if {[namespace eval ::flowkit {info commands generic.get_msg_since_last_call}] eq {}} {\n    return {}\n  } else {\n    # call the flowkit messages with out own var\n    return [::flowkit::generic.get_msg_since_last_call ::um::userscript::metric_last_message]\n  }\n", "type":"messages", "description":"messages", "dp":"0", "inheritance_tcl":"\n  # add the counts together of the similar messages\n  # format is: [list {count 1 id IMPDBTCL-247 ... }]\n  variable parent_dict {}\n  variable c\n  variable e\n  foreach c $children {\n    foreach e $c {\n      if {$e ne {}} {\n        if {[dict exists $parent_dict [dict get $e \"id\"]]} {\n          dict set parent_dict [dict get $e \"id\"] \"count\"  [expr [dict get $parent_dict [dict get $e \"id\"] \"count\"]  + [dict get $e \"count\"]]\n        } else {\n          dict set parent_dict [dict get $e \"id\"] $e\n        }\n      }\n    }\n  }\n  return [dict values $parent_dict]  \n"}, 
    {"metric":"name", "description":"Name of the snapshot", "dp":"0"}, 
    {"metric":"power.block.<block>", "units":"mw", "description":"Total per block power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.clock.total", "units":"mw", "description":"Total clock power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.dynamic.block", "units":"mw", "description":"Macro dynamic power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.dynamic.combinatorial", "units":"mw", "description":"Combinatorial dynamic power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.dynamic.io", "units":"mw", "description":"IO dynamic power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.dynamic.sequential", "units":"mw", "description":"Sequential dynamic power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.dynamic.total", "units":"mw", "description":"Total dynamic power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.block", "units":"mw", "description":"Internal Macro power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.block.<block>", "units":"mw", "description":"Total per block internal power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.clock_combinatorial", "units":"mw", "description":"Internal combinatorial clock power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.clock_sequential", "units":"mw", "description":"Internal sequential clock power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.combinatorial", "units":"mw", "description":"Internal combinatorial power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.io", "units":"mw", "description":"Internal IO power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.sequential", "units":"mw", "description":"Internal sequential power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.internal.total", "units":"mw", "description":"Total internal power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.block", "units":"mw", "description":"Macro leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.block.<block>", "units":"mw", "description":"Total per block leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.clock_combinatorial", "units":"mw", "description":"Combinatorial clock leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.clock_sequential", "units":"mw", "description":"Sequential clock leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.combinatorial", "units":"mw", "description":"Combinatorial leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.io", "units":"mw", "description":"IO leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.sequential", "units":"mw", "description":"Sequential leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.leakage.total", "units":"mw", "description":"Total leakage power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.block", "units":"mw", "description":"Macro switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.block.<block>", "units":"mw", "description":"Total per block switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.clock_combinatorial", "units":"mw", "description":"Combinatorial clock switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.clock_sequential", "units":"mw", "description":"Sequential clock switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.combinatorial", "units":"mw", "description":"Combinatorial switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.io", "units":"mw", "description":"IO switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.sequential", "units":"mw", "description":"Sequential switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.switching.total", "units":"mw", "description":"Total switching power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.total", "units":"mw", "description":"Total power", "dp":"2", "cmp":"lessBetter"}, 
    {"metric":"power.view", "description":"Power analysis view", "dp":"0"}, 
    {"metric":"route.drc.<layer>", "description":"DRC count per layer", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.drc.<type>", "description":"DRC count per type", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.drc.total", "description":"Total DRC count", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.layers", "description":"Number of routing layers", "dp":"0"}, 
    {"metric":"route.overcon.<layer>", "description":"GR overcon per layer", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.overcon.total", "description":"Total GR overcon", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.overflow.horizontal", "description":"Trial-route horizontal overflow", "dp":"3", "cmp":"lessBetter"}, 
    {"metric":"route.overflow.vertical", "description":"Trial-route vertical overflow", "dp":"3", "cmp":"lessBetter"}, 
    {"metric":"route.pitch.<layer>", "units":"um", "description":"Routing pitch per layer", "dp":"3"}, 
    {"metric":"route.shielding.nets", "description":"Number of shielded nets", "dp":"0"}, 
    {"metric":"route.shielding.percentage", "description":"Shielding percentage", "dp":"0"}, 
    {"metric":"route.via.multicut.<layer>", "description":"Number of MC vias per layer", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.via.multicut.percentage", "description":"Percentage of MC vias", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.via.multicut.total", "description":"Total number of MC vias", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.via.singlecut.<layer>", "description":"Number of SC vias per layer", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.via.singlecut.percentage", "description":"Percentage of SC vias", "dp":"0"}, 
    {"metric":"route.via.singlecut.total", "description":"Total number of SC vias", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.via.total", "description":"Total number of vias", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.via.total.<layer>", "description":"Total number of vias per layer", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.width.<layer>", "units":"um", "description":"Routing width per layer", "dp":"3"}, 
    {"metric":"route.wirelength.<layer>", "units":"um", "description":"Wirelength per layer", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"route.wirelength.total", "units":"um", "description":"Total wirelength", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.analysis_views.all", "description":"All views of setup/hold timing", "dp":"0"}, 
    {"metric":"timing.analysis_views.all.number", "description":"The number of all views of setup/hold timing", "dp":"0"}, 
    {"metric":"timing.drv.max_cap.total", "description":"Total max capacitance violation", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.drv.max_cap.worst", "description":"Worst max capacitance violation", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.drv.max_fanout.total", "description":"Total max fanout violations", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.drv.max_fanout.worst", "description":"Worst max fanout violation", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.drv.max_length.total", "description":"Total max length violations", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.drv.max_length.worst", "units":"um", "description":"Worst max length violation", "dp":"3", "cmp":"lessBetter"}, 
    {"metric":"timing.drv.max_tran.total", "description":"Total max transition violations", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.drv.max_tran.worst", "units":"ns", "description":"Worst max transition violation", "dp":"3", "cmp":"lessBetter"}, 
    {"metric":"timing.hold.worst_path.capture_clock", "description":"Capture clock of the worst hold path", "dp":"0"}, 
    {"metric":"timing.hold.worst_path.freq", "units":"GHz", "description":"Frequency: 1/(capture period-slack) of the worst hold path", "dp":"0", "cmp":"moreBetter"}, 
    {"metric":"timing.hold.worst_path.launch_clock", "description":"Launch clock of the worst hold path", "dp":"0"}, 
    {"metric":"timing.hold.worst_path.view", "description":"Analysis view of the worst hold path", "dp":"0"}, 
    {"metric":"timing.setup.analysis_views.active", "description":"All active views of setup timing", "dp":"0"}, 
    {"metric":"timing.setup.analysis_views.active.number", "description":"The number of all active views of setup timing", "dp":"0"}, 
    {"metric":"timing.setup.analysis_views.enabled", "description":"All enabled views of setup timing", "dp":"0"}, 
    {"metric":"timing.setup.analysis_views.enabled.number", "description":"The number of all enabled views of setup timing", "dp":"0"}, 
    {"metric":"timing.setup.feps", "description":"Total number of setup failing end points", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.setup.feps.<pathgroup>", "description":"Total number of setup failing end points for a specific path group", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.setup.feps.<view>", "description":"Total number of setup failing end points for a specific view", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.setup.tns", "units":"ns", "type":"slack", "description":"Total negative setup slack (all path groups)", "dp":"0", "cmp":"moreBetter"}, 
    {"metric":"timing.setup.tns.<pathgroup>", "units":"ns", "type":"slack", "description":"Total negative setup slack for a specific path group", "dp":"0", "cmp":"moreBetter"}, 
    {"metric":"timing.setup.tns.<view>", "units":"ns", "type":"slack", "description":"Total negative setup slack for a specific view", "dp":"0", "cmp":"moreBetter"}, 
    {"metric":"timing.setup.wns", "units":"ns", "type":"slack", "description":"Worst negative setup slack (all path groups)", "dp":"3", "cmp":"moreBetterIgnorePositive"}, 
    {"metric":"timing.setup.wns.<pathgroup>", "units":"ns", "type":"slack", "description":"Worst negative setup slack for a specific path group", "dp":"3", "cmp":"moreBetterIgnorePositive"}, 
    {"metric":"timing.setup.wns.<view>", "units":"ns", "type":"slack", "description":"Worst negative setup slack for a specific view", "dp":"3", "cmp":"moreBetterIgnorePositive"}, 
    {"metric":"timing.setup.worst_path.capture_clock", "description":"Capture clock of the worst setup path", "dp":"0"}, 
    {"metric":"timing.setup.worst_path.freq", "units":"GHz", "description":"Frequency: 1/(capture period-slack) of the worst setup path", "dp":"0", "cmp":"moreBetter"}, 
    {"metric":"timing.setup.worst_path.launch_clock", "description":"Launch clock of the worst setup path", "dp":"0"}, 
    {"metric":"timing.setup.worst_path.view", "description":"Analysis view of the worst setup path", "dp":"0"}, 
    {"metric":"timing.si.glitches", "description":"Number of SI glitches", "dp":"0", "cmp":"lessBetter"}, 
    {"metric":"timing.si.noise", "units":"ns", "description":"Amount of noise delay remaining", "dp":"3", "cmp":"lessBetter"}
  ],
  "headers": {
  },
  "metadata": {
  },
  "snapshots": [
    { "name": "elaborate", "uuid": "35432c68", "path": "elaborate", "branch": "default", "key": "35432c68", "parent_key": "", "metrics": [
        { "name": "alerts", "value": "" }, 
        { "name": "design.area", "value": "59834.5915" }, 
        { "name": "design.area.block", "value": "0" }, 
        { "name": "design.area.buffer", "value": "0" }, 
        { "name": "design.area.inverter", "value": "0" }, 
        { "name": "design.area.io", "value": "0" }, 
        { "name": "design.area.logical", "value": "59834.5915" }, 
        { "name": "design.area.sequential", "value": "0" }, 
        { "name": "design.area.std_cell", "value": "59834.5915" }, 
        { "name": "design.density", "value": "0" }, 
        { "name": "design.instance.always_on", "value": "0" }, 
        { "name": "design.instances", "value": "17741" }, 
        { "name": "design.instances.area_io", "value": "0" }, 
        { "name": "design.instances.blackbox", "value": "0" }, 
        { "name": "design.instances.block", "value": "0" }, 
        { "name": "design.instances.buffer", "value": "0" }, 
        { "name": "design.instances.inverter", "value": "2024" }, 
        { "name": "design.instances.io", "value": "0" }, 
        { "name": "design.instances.logical", "value": "17741" }, 
        { "name": "design.instances.physical", "value": "0" }, 
        { "name": "design.instances.sequential", "value": "84" }, 
        { "name": "design.instances.std_cell", "value": "17741" }, 
        { "name": "design.name", "value": "mkPE32" }, 
        { "name": "design.nets.global", "value": "0" }, 
        { "name": "design.nets.signal", "value": "18872" }, 
        { "name": "flow.cputime", "value": "12" }, 
        { "name": "flow.cputime.not_child", "value": "12" }, 
        { "name": "flow.cputime.total", "value": "12" }, 
        { "name": "flow.cputime.user", "value": "12" }, 
        { "name": "flow.cputime.user.not_child", "value": "12" }, 
        { "name": "flow.cputime.user.total", "value": "12" }, 
        { "name": "flow.log", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32/genus.log6" }, 
        { "name": "flow.machine", "value": "ellora" }, 
        { "name": "flow.machine.load", "value": "0.59" }, 
        { "name": "flow.memory", "value": "294 MB", "inherited": true }, 
        { "name": "flow.memory.instant", "value": "294 MB" }, 
        { "name": "flow.memory.resident", "value": "294 MB", "inherited": true }, 
        { "name": "flow.memory.resident.instant", "value": "294 MB" }, 
        { "name": "flow.memory.resident.peak", "value": "296 MB", "inherited": true }, 
        { "name": "flow.memory.resident.peak.instant", "value": "296 MB" }, 
        { "name": "flow.realtime", "value": "13" }, 
        { "name": "flow.realtime.not_child", "value": "13" }, 
        { "name": "flow.realtime.total", "value": "13" }, 
        { "name": "flow.run_directory", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32" }, 
        { "name": "flow.tool.name", "value": "Genus(TM) Synthesis Solution" }, 
        { "name": "flow.tool.name.short", "value": "genus" }, 
        { "name": "flow.tool.version", "value": "16.22-s033_1" }, 
        { "name": "flow.user", "value": "mrhamid" }, 
        { "name": "messages", "value": "{count 245 id message:LBR/LBR-162 severity Info short {Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed.}} {count 40 id message:LBR/LBR-9 severity Warning short {Library cell has no output pins defined.}} {count 1 id message:LBR/LBR-41 severity Info short {An output library pin lacks a function attribute.}} {count 1 id message:LBR/LBR-415 severity Info short {Found unusable library cells.}} {count 989 id message:LBR/LBR-436 severity Info short {Could not find an attribute in the library.}} {count 1 id message:LBR/LBR-518 severity Info short {Missing a function attribute in the output pin definition.}} {count 1 id message:LBR/LBR-40 severity Info short {An unsupported construct was detected in this library.}} {count 1 id message:LBR/LBR-412 severity Info short {Created nominal operating condition.}} {count 4 id message:LBR/LBR-101 severity Warning short {Unusable clock gating integrated cell.}} {count 1 id message:PA/PA-7 severity Info short {Resetting power analysis results.}} {count 1 id message:ELAB/ELAB-1 severity Info short {Elaborating Design.}} {count 1 id message:ELAB/ELAB-3 severity Info short {Done Elaborating Design.}} {count 25 id message:CWD/CWD-19 severity Info short {An implementation was inferred.}} {count 25 id message:CWD/CWD-36 severity Info short {Sorted the set of valid implementations for synthetic operator.}} {count 1 id message:CDFG/CDFG-303 severity Info short {Processing HDL design.}} {count 2 id message:CDFG/CDFG-372 severity Info short {Bitwidth mismatch in assignment.}} {count 4 id message:CDFG/CDFG-500 severity Info short {Unused module input port.}} {count 2 id message:CDFG/CDFG-738 severity Info short {Common subexpression eliminated.}} {count 2 id message:CDFG/CDFG-739 severity Info short {Common subexpression kept.}} {count 1 id message:CDFG/CDFG-742 severity Info short {Common subexpression elimination.}} {count 1 id message:CDFG2G/CDFG2G-110 severity Info short {Finished processing module.}}" }, 
        { "name": "name", "value": "elaborate" }, 
        { "name": "timing.analysis_views.all", "value": "" }, 
        { "name": "timing.analysis_views.all.number", "value": "0" }, 
        { "name": "timing.setup.analysis_views.active", "value": "" }, 
        { "name": "timing.setup.analysis_views.active.number", "value": "0" }, 
        { "name": "timing.setup.analysis_views.enabled", "value": "" }, 
        { "name": "timing.setup.analysis_views.enabled.number", "value": "0" }
      ], "total_cpu": 12, "total_cpu_user": 12, "delta_cpu_not_child": 12, "delta_cpu_user_not_child": 12, "delta_cpu": 12, "delta_cpu_user": 12, "real_start": 1513044093, "real_end": 1513044106 }, 
    { "name": "syn_generic", "uuid": "35432c67", "path": "syn_generic", "branch": "default", "key": "35432c67", "parent_key": "", "previous": [
        "35432c68"
      ], "metrics": [
        { "name": "alerts", "value": "design.area.buffer {Buffer area increased by over 20%}" }, 
        { "name": "design.area", "value": "45034.967" }, 
        { "name": "design.area.block", "value": "0" }, 
        { "name": "design.area.buffer", "value": "0" }, 
        { "name": "design.area.inverter", "value": "0" }, 
        { "name": "design.area.io", "value": "0" }, 
        { "name": "design.area.logical", "value": "45034.967" }, 
        { "name": "design.area.sequential", "value": "0" }, 
        { "name": "design.area.std_cell", "value": "45034.967" }, 
        { "name": "design.density", "value": "0" }, 
        { "name": "design.instance.always_on", "value": "0" }, 
        { "name": "design.instances", "value": "13479" }, 
        { "name": "design.instances.area_io", "value": "0" }, 
        { "name": "design.instances.blackbox", "value": "0" }, 
        { "name": "design.instances.block", "value": "0" }, 
        { "name": "design.instances.buffer", "value": "0" }, 
        { "name": "design.instances.inverter", "value": "1414" }, 
        { "name": "design.instances.io", "value": "0" }, 
        { "name": "design.instances.logical", "value": "13479" }, 
        { "name": "design.instances.physical", "value": "0" }, 
        { "name": "design.instances.sequential", "value": "84" }, 
        { "name": "design.instances.std_cell", "value": "13479" }, 
        { "name": "design.name", "value": "mkPE32" }, 
        { "name": "design.nets.global", "value": "0" }, 
        { "name": "design.nets.signal", "value": "13630" }, 
        { "name": "flow.cputime", "value": "25" }, 
        { "name": "flow.cputime.not_child", "value": "25" }, 
        { "name": "flow.cputime.total", "value": "37" }, 
        { "name": "flow.cputime.user", "value": "25" }, 
        { "name": "flow.cputime.user.not_child", "value": "25" }, 
        { "name": "flow.cputime.user.total", "value": "37" }, 
        { "name": "flow.log", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32/genus.log6" }, 
        { "name": "flow.machine", "value": "ellora" }, 
        { "name": "flow.machine.load", "value": "0.89" }, 
        { "name": "flow.memory", "value": "314 MB", "inherited": true }, 
        { "name": "flow.memory.instant", "value": "314 MB" }, 
        { "name": "flow.memory.resident", "value": "314 MB", "inherited": true }, 
        { "name": "flow.memory.resident.instant", "value": "314 MB" }, 
        { "name": "flow.memory.resident.peak", "value": "366 MB", "inherited": true }, 
        { "name": "flow.memory.resident.peak.instant", "value": "366 MB" }, 
        { "name": "flow.realtime", "value": "25" }, 
        { "name": "flow.realtime.not_child", "value": "25" }, 
        { "name": "flow.realtime.total", "value": "38" }, 
        { "name": "flow.run_directory", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32" }, 
        { "name": "flow.tool.name", "value": "Genus(TM) Synthesis Solution" }, 
        { "name": "flow.tool.name.short", "value": "genus" }, 
        { "name": "flow.tool.version", "value": "16.22-s033_1" }, 
        { "name": "flow.user", "value": "mrhamid" }, 
        { "name": "messages", "value": "{count 306 id message:TUI/TUI-92 severity Warning short {Cannot set probability or toggle rate on a constant net.}} {count 1 id message:GLO/GLO-34 severity Info short {Deleting instances not driving any primary outputs.}} {count 1 id message:PHYS/PHYS-752 severity Info short {Partition Based Synthesis execution skipped.}} {count 1 id message:POPT/POPT-12 severity Info short {Could not find any user created clock-gating module.}} {count 1 id message:POPT/POPT-96 severity Info short {One or more cost groups were automatically created for clock gate enable paths.}} {count 2 id message:GB/GB-6 severity Info short {A datapath component has been ungrouped.}} {count 1 id message:RTLOPT/RTLOPT-1 severity Info short {Optimizing RTL.}} {count 1 id message:RTLOPT/RTLOPT-2 severity Info short {Done optimizing RTL.}} {count 7 id message:RTLOPT/RTLOPT-19 severity Info short {Grouping carry-save logic.}} {count 2 id message:RTLOPT/RTLOPT-20 severity Info short {Accepted carry-save configuration.}} {count 6 id message:RTLOPT/RTLOPT-21 severity Info short {Rejected carry-save configuration.}} {count 7 id message:RTLOPT/RTLOPT-23 severity Info short {Done grouping carry-save logic.}} {count 2 id message:RTLOPT/RTLOPT-30 severity Info short {Accepted resource sharing opportunity.}} {count 1 id message:SYNTH/SYNTH-13 severity Info short {Gating clocks.}} {count 1 id message:SYNTH/SYNTH-2 severity Info short {Done synthesizing.}} {count 1 id message:SYNTH/SYNTH-1 severity Info short Synthesizing.} {count 316 id message:CWD/CWD-19 severity Info short {An implementation was inferred.}} {count 294 id message:CWD/CWD-36 severity Info short {Sorted the set of valid implementations for synthetic operator.}}" }, 
        { "name": "name", "value": "syn_generic" }, 
        { "name": "timing.analysis_views.all", "value": " default_emulate_view" }, 
        { "name": "timing.analysis_views.all.number", "value": "1" }, 
        { "name": "timing.setup.analysis_views.active", "value": " default_emulate_view" }, 
        { "name": "timing.setup.analysis_views.active.number", "value": "1" }, 
        { "name": "timing.setup.analysis_views.enabled", "value": " default_emulate_view" }, 
        { "name": "timing.setup.analysis_views.enabled.number", "value": "1" }
      ], "total_cpu": 37, "total_cpu_user": 37, "delta_cpu_not_child": 25, "delta_cpu_user_not_child": 25, "delta_cpu": 25, "delta_cpu_user": 25, "real_start": 1513044106, "real_end": 1513044131 }, 
    { "name": "syn_map", "uuid": "35432c4d", "path": "syn_map", "branch": "default", "key": "35432c4d", "parent_key": "", "previous": [
        "35432c67"
      ], "metrics": [
        { "name": "alerts", "value": "design.area.buffer {Buffer area increased by over 20%}" }, 
        { "name": "design.area", "value": "19612.8" }, 
        { "name": "design.area.block", "value": "0" }, 
        { "name": "design.area.buffer", "value": "141.8399999999999" }, 
        { "name": "design.area.inverter", "value": "1319.0400000000034" }, 
        { "name": "design.area.io", "value": "0" }, 
        { "name": "design.area.logical", "value": "19612.8" }, 
        { "name": "design.area.sequential", "value": "660.5999999999996" }, 
        { "name": "design.area.std_cell", "value": "19612.8" }, 
        { "name": "design.density", "value": "0" }, 
        { "name": "design.instance.always_on", "value": "0" }, 
        { "name": "design.instances", "value": "6612" }, 
        { "name": "design.instances.area_io", "value": "0" }, 
        { "name": "design.instances.blackbox", "value": "0" }, 
        { "name": "design.instances.block", "value": "0" }, 
        { "name": "design.instances.buffer", "value": "78" }, 
        { "name": "design.instances.inverter", "value": "1028" }, 
        { "name": "design.instances.io", "value": "0" }, 
        { "name": "design.instances.logical", "value": "6612" }, 
        { "name": "design.instances.physical", "value": "0" }, 
        { "name": "design.instances.sequential", "value": "84" }, 
        { "name": "design.instances.std_cell", "value": "6612" }, 
        { "name": "design.name", "value": "mkPE32" }, 
        { "name": "design.nets.global", "value": "0" }, 
        { "name": "design.nets.signal", "value": "7448" }, 
        { "name": "flow.cputime", "value": "184" }, 
        { "name": "flow.cputime.not_child", "value": "184" }, 
        { "name": "flow.cputime.total", "value": "221" }, 
        { "name": "flow.cputime.user", "value": "184" }, 
        { "name": "flow.cputime.user.not_child", "value": "184" }, 
        { "name": "flow.cputime.user.total", "value": "221" }, 
        { "name": "flow.log", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32/genus.log6" }, 
        { "name": "flow.machine", "value": "ellora" }, 
        { "name": "flow.machine.load", "value": "1.24" }, 
        { "name": "flow.memory", "value": "358 MB", "inherited": true }, 
        { "name": "flow.memory.instant", "value": "358 MB" }, 
        { "name": "flow.memory.resident", "value": "358 MB", "inherited": true }, 
        { "name": "flow.memory.resident.instant", "value": "358 MB" }, 
        { "name": "flow.memory.resident.peak", "value": "402 MB", "inherited": true }, 
        { "name": "flow.memory.resident.peak.instant", "value": "402 MB" }, 
        { "name": "flow.realtime", "value": "140" }, 
        { "name": "flow.realtime.not_child", "value": "140" }, 
        { "name": "flow.realtime.total", "value": "178" }, 
        { "name": "flow.run_directory", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32" }, 
        { "name": "flow.tool.name", "value": "Genus(TM) Synthesis Solution" }, 
        { "name": "flow.tool.name.short", "value": "genus" }, 
        { "name": "flow.tool.version", "value": "16.22-s033_1" }, 
        { "name": "flow.user", "value": "mrhamid" }, 
        { "name": "messages", "value": "{count 7 id message:GLO/GLO-51 severity Info short {Hierarchical instance automatically ungrouped.}} {count 1 id message:PHYS/PHYS-752 severity Info short {Partition Based Synthesis execution skipped.}} {count 1 id message:POPT/POPT-96 severity Info short {One or more cost groups were automatically created for clock gate enable paths.}} {count 30 id message:PA/PA-7 severity Info short {Resetting power analysis results.}} {count 1 id message:SYNTH/SYNTH-5 severity Info short {Done mapping.}} {count 1 id message:SYNTH/SYNTH-4 severity Info short Mapping.}" }, 
        { "name": "name", "value": "syn_map" }, 
        { "name": "timing.analysis_views.all", "value": " default_emulate_view" }, 
        { "name": "timing.analysis_views.all.number", "value": "1" }, 
        { "name": "timing.setup.analysis_views.active", "value": " default_emulate_view" }, 
        { "name": "timing.setup.analysis_views.active.number", "value": "1" }, 
        { "name": "timing.setup.analysis_views.enabled", "value": " default_emulate_view" }, 
        { "name": "timing.setup.analysis_views.enabled.number", "value": "1" }, 
        { "name": "timing.setup.feps", "value": "0" }, 
        { "name": "timing.setup.tns", "value": "-0.0 ps" }, 
        { "name": "timing.setup.tns.cost_group:mkPE32/cg_enable_group_clk", "value": "-0.0 ps" }, 
        { "name": "timing.setup.tns.cost_group:mkPE32/clk", "value": "-0.0 ps" }, 
        { "name": "timing.setup.tns.cost_group:mkPE32/default", "value": "-0.0 ps" }, 
        { "name": "timing.setup.wns", "value": "313.2 ps" }, 
        { "name": "timing.setup.wns.cg_enable_group_clk", "value": "9334.3 ps" }, 
        { "name": "timing.setup.wns.clk", "value": "313.2 ps" }, 
        { "name": "timing.setup.wns.default", "value": "no_value ps" }
      ], "total_cpu": 221, "total_cpu_user": 221, "delta_cpu_not_child": 184, "delta_cpu_user_not_child": 184, "delta_cpu": 184, "delta_cpu_user": 184, "real_start": 1513044131, "real_end": 1513044271 }
  ],
  "metrics": [
    { "name": "alerts", "value": "design.area.buffer {Buffer area increased by over 20%}", "inherited": true }, 
    { "name": "design.area", "value": "19612.8", "inherited": true }, 
    { "name": "design.area.block", "value": "0", "inherited": true }, 
    { "name": "design.area.buffer", "value": "141.8399999999999", "inherited": true }, 
    { "name": "design.area.inverter", "value": "1319.0400000000034", "inherited": true }, 
    { "name": "design.area.io", "value": "0", "inherited": true }, 
    { "name": "design.area.logical", "value": "19612.8", "inherited": true }, 
    { "name": "design.area.sequential", "value": "660.5999999999996", "inherited": true }, 
    { "name": "design.area.std_cell", "value": "19612.8", "inherited": true }, 
    { "name": "design.density", "value": "0", "inherited": true }, 
    { "name": "design.instance.always_on", "value": "0", "inherited": true }, 
    { "name": "design.instances", "value": "6612", "inherited": true }, 
    { "name": "design.instances.area_io", "value": "0", "inherited": true }, 
    { "name": "design.instances.blackbox", "value": "0", "inherited": true }, 
    { "name": "design.instances.block", "value": "0", "inherited": true }, 
    { "name": "design.instances.buffer", "value": "78", "inherited": true }, 
    { "name": "design.instances.inverter", "value": "1028", "inherited": true }, 
    { "name": "design.instances.io", "value": "0", "inherited": true }, 
    { "name": "design.instances.logical", "value": "6612", "inherited": true }, 
    { "name": "design.instances.physical", "value": "0", "inherited": true }, 
    { "name": "design.instances.sequential", "value": "84", "inherited": true }, 
    { "name": "design.instances.std_cell", "value": "6612", "inherited": true }, 
    { "name": "design.name", "value": "mkPE32", "inherited": true }, 
    { "name": "design.nets.global", "value": "0", "inherited": true }, 
    { "name": "design.nets.signal", "value": "7448", "inherited": true }, 
    { "name": "flow.cputime", "value": "221" }, 
    { "name": "flow.cputime.not_child", "value": "0" }, 
    { "name": "flow.cputime.total", "value": "221" }, 
    { "name": "flow.cputime.user", "value": "221" }, 
    { "name": "flow.cputime.user.not_child", "value": "0" }, 
    { "name": "flow.cputime.user.total", "value": "221" }, 
    { "name": "flow.log", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32/genus.log6", "inherited": true }, 
    { "name": "flow.machine", "value": "ellora", "inherited": true }, 
    { "name": "flow.machine.load", "value": "1.24", "inherited": true }, 
    { "name": "flow.memory", "value": "358 MB", "inherited": true }, 
    { "name": "flow.memory.resident", "value": "358 MB", "inherited": true }, 
    { "name": "flow.memory.resident.peak", "value": "402 MB", "inherited": true }, 
    { "name": "flow.realtime", "value": "178" }, 
    { "name": "flow.realtime.not_child", "value": "0" }, 
    { "name": "flow.realtime.total", "value": "178" }, 
    { "name": "flow.run_directory", "value": "/homes/mrhamid/bsv-designs/sim_syn/syn/pe32", "inherited": true }, 
    { "name": "flow.tool.name", "value": "Genus(TM) Synthesis Solution", "inherited": true }, 
    { "name": "flow.tool.name.short", "value": "genus", "inherited": true }, 
    { "name": "flow.tool.version", "value": "16.22-s033_1", "inherited": true }, 
    { "name": "flow.user", "value": "mrhamid", "inherited": true }, 
    { "name": "messages", "value": "{count 245 id message:LBR/LBR-162 severity Info short {Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed.}} {count 40 id message:LBR/LBR-9 severity Warning short {Library cell has no output pins defined.}} {count 1 id message:LBR/LBR-41 severity Info short {An output library pin lacks a function attribute.}} {count 1 id message:LBR/LBR-415 severity Info short {Found unusable library cells.}} {count 989 id message:LBR/LBR-436 severity Info short {Could not find an attribute in the library.}} {count 1 id message:LBR/LBR-518 severity Info short {Missing a function attribute in the output pin definition.}} {count 1 id message:LBR/LBR-40 severity Info short {An unsupported construct was detected in this library.}} {count 1 id message:LBR/LBR-412 severity Info short {Created nominal operating condition.}} {count 4 id message:LBR/LBR-101 severity Warning short {Unusable clock gating integrated cell.}} {count 31 id message:PA/PA-7 severity Info short {Resetting power analysis results.}} {count 1 id message:ELAB/ELAB-1 severity Info short {Elaborating Design.}} {count 1 id message:ELAB/ELAB-3 severity Info short {Done Elaborating Design.}} {count 341 id message:CWD/CWD-19 severity Info short {An implementation was inferred.}} {count 319 id message:CWD/CWD-36 severity Info short {Sorted the set of valid implementations for synthetic operator.}} {count 1 id message:CDFG/CDFG-303 severity Info short {Processing HDL design.}} {count 2 id message:CDFG/CDFG-372 severity Info short {Bitwidth mismatch in assignment.}} {count 4 id message:CDFG/CDFG-500 severity Info short {Unused module input port.}} {count 2 id message:CDFG/CDFG-738 severity Info short {Common subexpression eliminated.}} {count 2 id message:CDFG/CDFG-739 severity Info short {Common subexpression kept.}} {count 1 id message:CDFG/CDFG-742 severity Info short {Common subexpression elimination.}} {count 1 id message:CDFG2G/CDFG2G-110 severity Info short {Finished processing module.}} {count 306 id message:TUI/TUI-92 severity Warning short {Cannot set probability or toggle rate on a constant net.}} {count 1 id message:GLO/GLO-34 severity Info short {Deleting instances not driving any primary outputs.}} {count 2 id message:PHYS/PHYS-752 severity Info short {Partition Based Synthesis execution skipped.}} {count 1 id message:POPT/POPT-12 severity Info short {Could not find any user created clock-gating module.}} {count 2 id message:POPT/POPT-96 severity Info short {One or more cost groups were automatically created for clock gate enable paths.}} {count 2 id message:GB/GB-6 severity Info short {A datapath component has been ungrouped.}} {count 1 id message:RTLOPT/RTLOPT-1 severity Info short {Optimizing RTL.}} {count 1 id message:RTLOPT/RTLOPT-2 severity Info short {Done optimizing RTL.}} {count 7 id message:RTLOPT/RTLOPT-19 severity Info short {Grouping carry-save logic.}} {count 2 id message:RTLOPT/RTLOPT-20 severity Info short {Accepted carry-save configuration.}} {count 6 id message:RTLOPT/RTLOPT-21 severity Info short {Rejected carry-save configuration.}} {count 7 id message:RTLOPT/RTLOPT-23 severity Info short {Done grouping carry-save logic.}} {count 2 id message:RTLOPT/RTLOPT-30 severity Info short {Accepted resource sharing opportunity.}} {count 1 id message:SYNTH/SYNTH-13 severity Info short {Gating clocks.}} {count 1 id message:SYNTH/SYNTH-2 severity Info short {Done synthesizing.}} {count 1 id message:SYNTH/SYNTH-1 severity Info short Synthesizing.} {count 7 id message:GLO/GLO-51 severity Info short {Hierarchical instance automatically ungrouped.}} {count 1 id message:SYNTH/SYNTH-5 severity Info short {Done mapping.}} {count 1 id message:SYNTH/SYNTH-4 severity Info short Mapping.}", "inherited": true }, 
    { "name": "name", "value": "syn_map", "inherited": true }, 
    { "name": "timing.analysis_views.all", "value": " default_emulate_view", "inherited": true }, 
    { "name": "timing.analysis_views.all.number", "value": "1", "inherited": true }, 
    { "name": "timing.setup.analysis_views.active", "value": " default_emulate_view", "inherited": true }, 
    { "name": "timing.setup.analysis_views.active.number", "value": "1", "inherited": true }, 
    { "name": "timing.setup.analysis_views.enabled", "value": " default_emulate_view", "inherited": true }, 
    { "name": "timing.setup.analysis_views.enabled.number", "value": "1", "inherited": true }, 
    { "name": "timing.setup.feps", "value": "0", "inherited": true }, 
    { "name": "timing.setup.tns", "value": "-0.0 ps", "inherited": true }, 
    { "name": "timing.setup.tns.cost_group:mkPE32/cg_enable_group_clk", "value": "-0.0 ps", "inherited": true }, 
    { "name": "timing.setup.tns.cost_group:mkPE32/clk", "value": "-0.0 ps", "inherited": true }, 
    { "name": "timing.setup.tns.cost_group:mkPE32/default", "value": "-0.0 ps", "inherited": true }, 
    { "name": "timing.setup.wns", "value": "313.2 ps", "inherited": true }, 
    { "name": "timing.setup.wns.cg_enable_group_clk", "value": "9334.3 ps", "inherited": true }, 
    { "name": "timing.setup.wns.clk", "value": "313.2 ps", "inherited": true }, 
    { "name": "timing.setup.wns.default", "value": "no_value ps", "inherited": true }
  ],
  "total_cpu": 221, "total_cpu_user": 221, "total_real": 178
}