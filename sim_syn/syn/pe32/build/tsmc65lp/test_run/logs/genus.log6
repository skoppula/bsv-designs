Cadence Genus(TM) Synthesis Solution.
Copyright 2016 Cadence Design Systems, Inc. All rights reserved worldwide.
Cadence and the Cadence logo are registered trademarks and Genus is a trademark
of Cadence Design Systems, Inc. in the United States and other countries.

Version: 16.22-s033_1, built Wed Apr 05 2017
Options: -files setup_design.tcl 
Date:    Mon Dec 11 21:01:33 2017
Host:    ellora (x86_64 w/Linux 3.10.0-693.5.2.el7.x86_64) (4cores*16cpus*Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz 10240KB) (32866740KB)
OS:      Red Hat Enterprise Linux Server release 7.4 (Maipo)

Checking out license: Genus_Synthesis

Loading tool scripts...
Finished loading tool scripts (7 seconds elapsed).

Sourcing setup_design.tcl...
  Setting attribute of root '/': 'source_verbose_info' = false
  Setting attribute of root '/': 'source_verbose' = true
set design mkPE32
set design_folder pe32
set rtl_top_inst dut
set libname tsmc65lp
set do_power_opt true
set do_clock_gating true
set do_adv_opt false
set save false
set basename_prefix "100M_32"
set backup_input false
set project_base /homes/mrhamid/bsv-designs/sim_syn
set use_tcf false
set use_vcd false
set use_saif true
set activity_filename $project_base/bsv/$design_folder/${design_folder}.saif
set rtl_path [ list \
    ${project_base}/bsv/$design_folder/vlog \
    $::env(BLUESPECDIR)/Verilog \
]
set rtl_files [ list \
    mkPE32.v \
    FIFOL1.v \
]
set sdc_file constraints_${libname}.sdc
set_db script_search_path [ concat . ${project_base}/syn/common ]
  Setting attribute of root '/': 'script_search_path' = . /homes/mrhamid/bsv-designs/sim_syn/syn/common
include run_rc.tcl
Sourcing '/homes/mrhamid/bsv-designs/sim_syn/syn/common/run_rc.tcl' (Mon Dec 11 21:01:40 -0500 2017)...
set DATE [clock format [clock seconds] -format "%b%d_%H%M"]
if {!$save} {
  set BASE_PATH build/${libname}/test_run
  file delete -force $BASE_PATH
} else {
  if {$basename_prefix != ""} {
    set BASE_PATH build/${libname}/${basename_prefix}_${DATE}
  } else {
    set BASE_PATH build/${libname}/${DATE}
  }
}
if {$backup_input} {
  set INPUTS_PATH ${BASE_PATH}/in
  file mkdir ${INPUTS_PATH}
}
set OUTPUTS_PATH ${BASE_PATH}/out
set REPORTS_PATH ${BASE_PATH}/rpt
set LOG_PATH ${BASE_PATH}/logs
set VERIFICATION_PATH ${BASE_PATH}/fv
file mkdir ${OUTPUTS_PATH}
file mkdir ${REPORTS_PATH}
file mkdir ${LOG_PATH}
file mkdir ${VERIFICATION_PATH}
file delete current
file link -symbolic current $BASE_PATH
set_db hdl_error_on_blackbox true
  Setting attribute of root '/': 'hdl_error_on_blackbox' = true
set_db information_level 9
  Setting attribute of root '/': 'information_level' = 9
set_db syn_generic_effort high
  Setting attribute of root '/': 'syn_generic_effort' = high
set_db syn_map_effort high
  Setting attribute of root '/': 'syn_map_effort' = high
if {$do_power_opt} {
  if {$do_clock_gating} {
    set_db lp_insert_clock_gating true
  }
  # set_db lp_insert_operand_isolation true
  set_db lp_power_analysis_effort high
  # set_db hdl_track_filename_row_col true
}
  Setting attribute of root '/': 'lp_insert_clock_gating' = true
Info    : Resetting power analysis results. [PA-7]
        : Power analysis effort level changed from 'medium' to 'high'.
        : All computed switching activities are removed.
  Setting attribute of root '/': 'lp_power_analysis_effort' = high
set_db init_hdl_search_path [ concat $rtl_path ]
  Setting attribute of root '/': 'init_hdl_search_path' = /homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog /u/anantha/workspace3/share/programs/Bluespec/2016.07.beta1/lib/Verilog
read_hdl -sv $rtl_files
            Reading Verilog file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'
            Reading Verilog file '/u/anantha/workspace3/share/programs/Bluespec/2016.07.beta1/lib/Verilog/FIFOL1.v'
include technology.tcl
Sourcing '/homes/mrhamid/bsv-designs/sim_syn/syn/common/technology.tcl' (Mon Dec 11 21:01:40 -0500 2017)...
if {$libname == "tsmc40lp"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CRN40LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn40lpbwp tcbn40lpbwphvt ]
    set stdcell_ver 200a
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
} elseif {$libname == "tsmc45gs"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CLN45GS/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn45gsbwp12t tcbn45gsbwp12thvt ]
    set stdcell_ver 120c
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
} elseif {$libname == "tsmc65lp"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn65lp ]
    set stdcell_ver 200a
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
}
  Setting attribute of root '/': 'lib_search_path' = /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a
            Reading file '/u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib'
    Loading library tcbn65lpwc.lib
Info    : An unsupported construct was detected in this library. [LBR-40]
        : Unknown Liberty attribute 'library_features' encountered. Ignoring (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib, Line 69)
        : Check to see if this construct is really needed for synthesis. Many liberty constructs are not actually required.
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AO211D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AO211D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Missing a function attribute in the output pin definition. [LBR-518]
        : Functionality is missing at pin 'Z' for the cell 'BHD'. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib, Line 272424)

  Message Summary for Library tcbn65lpwc.lib:
  *******************************************
  Could not find an attribute in the library. [LBR-436]: 989
  Missing a function attribute in the output pin definition. [LBR-518]: 1
  An unsupported construct was detected in this library. [LBR-40]: 1
  *******************************************
 
Info    : Created nominal operating condition. [LBR-412]
        : Operating condition '_nominal_' was created for the PVT values (1.000000, 1.080000, 125.000000) in library 'tcbn65lpwc.lib'.
        : The nominal operating condition represents either the nominal PVT values if specified in the library source, or the default PVT values (1.0, 1.0, 1.0).
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'ANTENNA' must have an output pin.
        : Add the missing output pin(s), then reload the library. Otherwise, the library cell will be marked as unusable and as timing model.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'ANTENNA' must have an output pin.
Info    : An output library pin lacks a function attribute. [LBR-41]
        : Output pin 'BHD/Z' has no function.
        : If the remainder of this library cell's semantic checks are successful, it will be considered as a timing-model (because one of its outputs does not have a valid function.
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLHQD20'
        : To use the cell in clock gating, Set cell attribute 'dont_use' false in the library.
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLHQD24'
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLNQD20'
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLNQD24'
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP16' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP16' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP32' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP32' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP4' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP4' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP64' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP64' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP8' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP8' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP10' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP10' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP2' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP2' must have an output pin.
  Setting attribute of root '/': 'library' = tcbn65lpwc.lib
elaborate $design
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD1'.
        : Setting the 'timing_sense' to non_unate.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D0'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'A2' and 'Z' in libcell 'CKXOR2D0'.
  Library has 441 usable logic and 280 usable sequential lib-cells.
Info    : Found unusable library cells. [LBR-415]
        : Library: 'tcbn65lpwc.lib', Total cells: 816, Unusable cells: 77.
	List of unusable cells: 'ANTENNA BHD BUFFD20 BUFFD24 BUFTD20 BUFTD24 CKBD20 CKBD24 CKLHQD20 CKLHQD24 CKLNQD20 CKLNQD24 CKND20 CKND24 DCAP DCAP16 DCAP32 DCAP4 DCAP64 DCAP8 GAN2D1 GAN2D2 GAOI21D1 GAOI21D2 GAOI22D1 GBUFFD1 GBUFFD2 GBUFFD3 GBUFFD4 GBUFFD8 GDCAP GDCAP10 GDCAP2 GDCAP3 GDCAP4 GDFCNQD1 GDFQD1 GFILL GFILL10 GFILL2 GFILL3 GFILL4 GINVD1 GINVD2 GINVD3 GINVD4 GINVD8 GMUX2D1 GMUX2D2 GMUX2ND1 GMUX2ND2 GND2D1 GND2D2 GND2D3 GND2D4 GND3D1 GND3D2 GNR2D1 GNR2D2 GNR3D1 GNR3D2 GOAI21D1 GOAI21D2 GOR2D1 GOR2D2 GSDFCNQD1 GTIEH GTIEL GXNR2D1 GXNR2D2 GXOR2D1 GXOR2D2 INVD20 INVD24 OD25DCAP16 OD25DCAP32 OD25DCAP64 .'
        : For more information, refer to 'Cells Identified as Unusable' in the 'User Guide'. The reason why a cell is considered unusable is stored in the 'unusable_reason' libcell attribute.
Info    : Elaborating Design. [ELAB-1]
        : Elaborating top-level block 'mkPE32' from file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Bitwidth mismatch in assignment. [CDFG-372]
        : Width of left hand side 'IF_SEXT_multiply_constants_neg_constant_BITS_7_ETC___d118' [64] doesn't match the width of right hand side [32] in assignment in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' on line 533.
Info    : Bitwidth mismatch in assignment. [CDFG-372]
        : Width of left hand side 'IF_SEXT_multiply_constants_pos_constant_BITS_7_ETC___d74' [64] doesn't match the width of right hand side [32] in assignment in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' on line 537.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_get_pos_partial_sum' is not used in module 'mkPE32' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' on line 137.
        : The value of the input port is not used within the design.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_get_neg_partial_sum' is not used in module 'mkPE32' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' on line 142.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_read_weights' is not used in module 'mkPE32' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' on line 147.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_is_ready' is not used in module 'mkPE32' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' on line 152.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/equal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=1 B=1 Z=1) at line 643 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=1 B=1 Z=1) at line 643 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/equal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 556 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 556 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/mult_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=32 B=32 Z=64) at line 533 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=32 B=32 Z=64) at line 533 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/mult_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/mult_unsigned/medium' (priority 1), 'hdl_implementation:GB/mult_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=64 Z=64) at line 585 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=64 Z=64) at line 585 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=16 Z=48) at line 535 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=16 Z=48) at line 535 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 400 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 400 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 405 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 405 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 559 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 559 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/mult_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=32 B=32 Z=64) at line 537 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=32 B=32 Z=64) at line 537 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/mult_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/mult_unsigned/medium' (priority 1), 'hdl_implementation:GB/mult_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=64 Z=64) at line 576 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=64 Z=64) at line 576 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=16 Z=48) at line 539 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=16 Z=48) at line 539 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 422 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 422 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 427 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=16 B=1 Z=1) at line 427 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 434 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 434 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 436 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) at line 436 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=4 B=1 Z=4) at line 437 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=4 B=1 Z=4) at line 437 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 336 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 336 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 340 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 340 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 350 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 350 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 354 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=14 B=1 Z=1) at line 354 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/equal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=4 B=4 Z=1) at line 376 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=4 B=4 Z=1) at line 376 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/equal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 587 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 587 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 590 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 590 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 578 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 578 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 581 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 581 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe32/vlog/mkPE32.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : Done Elaborating Design. [ELAB-3]
        : Done elaborating 'mkPE32'.
Info: Checking for source rtl...
Info: Check completed for source rtl...
        Applying wireload models.
        Computing net loads.
UM:  flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:            12             13                                      elaborate
check_design -unresolved
  Checking the design.

 	 Check Design Report
	 -------------------- 

  Unresolved References & Empty Modules
  ------------------------------------- 
No unresolved references in design 'mkPE32'

No empty modules in design 'mkPE32'

  Done Checking the design.
set_db current_design .verification_directory $VERIFICATION_PATH
  Setting attribute of design 'mkPE32': 'verification_directory' = build/tsmc65lp/test_run/fv
if {$do_adv_opt} {
  set_db current_design .retime true
}
if {[info exists wireload_model]} {
    set_db current_design .force_wireload $wireload_model
}
if {$do_power_opt && $do_clock_gating} {
  set_db current_design .lp_clock_gating_extract_common_enable true
}
  Setting attribute of design 'mkPE32': 'lp_clock_gating_extract_common_enable' = true
read_sdc $sdc_file
            Reading file '/homes/mrhamid/bsv-designs/sim_syn/syn/pe32/constraints_tsmc65lp.sdc'
Statistics for commands executed by read_sdc:
 "all_inputs"               - successful      3 , failed      0 (runtime  0.00)
 "all_outputs"              - successful      2 , failed      0 (runtime  0.00)
 "create_clock"             - successful      1 , failed      0 (runtime  0.00)
 "current_design"           - successful      1 , failed      0 (runtime  0.00)
 "get_clocks"               - successful      3 , failed      0 (runtime  0.00)
 "get_ports"                - successful      1 , failed      0 (runtime  0.00)
 "remove_from_collection"   - successful      1 , failed      0 (runtime  0.00)
 "set_clock_latency"        - successful      1 , failed      0 (runtime  0.00)
 "set_clock_transition"     - successful      1 , failed      0 (runtime  0.00)
 "set_clock_uncertainty"    - successful      1 , failed      0 (runtime  0.00)
 "set_driving_cell"         - successful      1 , failed      0 (runtime  1.00)
 "set_input_delay"          - successful      2 , failed      0 (runtime  0.00)
 "set_load"                 - successful      1 , failed      0 (runtime  0.00)
 "set_load_unit"            - successful      1 , failed      0 (runtime  0.00)
 "set_max_fanout"           - successful      2 , failed      0 (runtime  0.00)
 "set_max_transition"       - successful      1 , failed      0 (runtime  0.00)
 "set_output_delay"         - successful      2 , failed      0 (runtime  0.00)
 "set_time_unit"            - successful      1 , failed      0 (runtime  0.00)
Total runtime 0
report timing -lint
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
============================================================
  Generated by:           Genus(TM) Synthesis Solution 16.22-s033_1
  Generated on:           Dec 11 2017  09:01:46 pm
  Module:                 mkPE32
  Technology library:     tcbn65lpwc 200
  Operating conditions:   WCCOM (balanced_tree)
  Wireload mode:          segmented
  Area mode:              timing library
============================================================


Lint summary
 Unconnected/logic driven clocks                                  0
 Sequential data pins driven by a clock signal                    0
 Sequential clock pins without clock waveform                     0
 Sequential clock pins with multiple clock waveforms              0
 Generated clocks without clock waveform                          0
 Generated clocks with incompatible options                       0
 Generated clocks with multi-master clock                         0
 Paths constrained with different clocks                          0
 Loop-breaking cells for combinational feedback                   0
 Nets with multiple drivers                                       0
 Timing exceptions with no effect                                 0
 Suspicious multi_cycle exceptions                                0
 Pins/ports with conflicting case constants                       0
 Inputs without clocked external delays                           0
 Outputs without clocked external delays                          0
 Inputs without external driver/transition                        0
 Outputs without external load                                    0
 Exceptions with invalid timing start-/endpoints                  0

                                                  Total:          0
if {$do_power_opt} {
  #set_db max_leakage_power 0.0 "/designs/$design"
  #set_db lp_power_optimization_weight <value from 0 to 1> "/designs/$DESIGN"

  set_db current_design .max_dynamic_power 0.0

  if {$use_tcf} {
    read_tcf -tcf_instance $rtl_top_inst $activity_filename
  }

  if {$use_vcd} {
    read_vcd -static -vcd_scope $rtl_top_inst $activity_filename
  }

  if {$use_saif} {
    read_saif -instance $rtl_top_inst $activity_filename
  }
}
  Setting attribute of design 'mkPE32': 'max_dynamic_power' = 0.0
10.0 % done 
20.0 % done 
30.0 % done 
40.0 % done 
50.0 % done 
60.0 % done 
70.0 % done 
80.0 % done 
90.0 % done 
100.0 % done 
100.0 % done
Nets/ports asserted in SAIF file : 3793
Total Nets/ports in SAIF file    : 10819
-------------------------------------------------------
Asserted Primary inputs in design              : 57 (100.00%)
Total connected primary inputs in design       : 57 (100.00%)
-------------------------------------------------------
Asserted sequential outputs                    : 84 (100.00%)
Total connected sequential outputs             : 84 (100.00%)
-------------------------------------------------------
Total nets in design                 : 22579 (100.00%)
Nets asserted                        : 3893 (17.24%)
Clock nets                           : 0 (0.00%)
Constant nets                        : 238 (1.05%)
Nets with no assertions              : 18686 (82.76%)
-------------------------------------------------------
Time taken to read_saif: 2.00 cpu seconds
syn_generic
Info    : Deleting instances not driving any primary outputs. [GLO-34]
        : Deleting 11 hierarchical instances. 
Following instances are deleted as they do not drive any primary output:
'mux_m_neg_partial_sum_643_15', 'mux_m_pos_partial_sum_643_15', 
'mux_m_step_643_15', 'mux_m_weight_regs_0_643_15', 
'mux_m_weight_regs_1_643_15', 'mux_m_weight_regs_2_643_15', 
'mux_m_weight_regs_3_643_15', 'mux_m_weight_regs_4_643_15', 
'mux_m_weight_regs_5_643_15', 'mux_m_weight_regs_6_643_15', 
'mux_m_weight_regs_7_643_15'.
        : Optimizations such as constant propagation or redundancy removal could change the connections so a hierarchical instance does not drive any primary outputs anymore. To see the list of deleted hierarchical instances, set the 'information_level' attribute to 2 or above. If message is truncated set message attribute 'truncate' to false to see the complete list. To prevent this optimization, set the 'delete_unloaded_insts' root/subdesign attribute to 'false' or 'preserve' instance attribute to 'true'.
Info    : Synthesizing. [SYNTH-1]
        : Synthesizing 'mkPE32' to generic gates using 'high' effort.
        Applying wireload models.
        Computing net loads.
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed generic optimization to kick in.
Info    : Optimizing RTL. [RTLOPT-1]
        : Optimizing RTL in 'mkPE32' using 'high' effort.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=64 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=64 Z=64) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
      Timing sub_unsigned_3372...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : Accepted resource sharing opportunity. [RTLOPT-30]
        : Merged the following sets of instances in design 'mkPE32':
	  (minus_587_42, sub_556_25)

Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
      Timing add_unsigned_3427...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_3492...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_3526...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=64 AS=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=32 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : Accepted resource sharing opportunity. [RTLOPT-30]
        : Merged the following sets of instances in design 'mkPE32':
	  (add_559_25, add_539_23, add_434_25, add_436_25)

Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=32 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE32_csa_cluster' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=4 CI=1 Z=4).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=4 CI=1 Z=4) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 1 of 1 in module 'mkPE32_csa_cluster'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Used configuration 1, resulting in 1 carry-save group in module 'mkPE32_csa_cluster'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE32_csa_cluster_791' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
      Timing csa_tree_13066_13130...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
      Timing add_unsigned_carry_13132...
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 1 in module 'mkPE32_csa_cluster_791'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Rejected all carry-save configurations in module 'mkPE32_csa_cluster_791'.
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE32_csa_cluster_795' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=48 B=48 CI=1 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=48 B=48 CI=1 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=48 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=48 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 2 of 2 in module 'mkPE32_csa_cluster_795'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Rejected all carry-save configurations in module 'mkPE32_csa_cluster_795'.
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE32_csa_cluster_790' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=48 CI=1 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=48 CI=1 Z=48) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
      Timing increment_unsigned_13188_13189...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 2 in module 'mkPE32_csa_cluster_790'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=68 B=68 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=68 B=68 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=64 B=64 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=64 B=64 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=48 B=48 CI=1 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=48 B=48 CI=1 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=48 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=48 B=48 Z=48) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 2 of 2 in module 'mkPE32_csa_cluster_790'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Rejected all carry-save configurations in module 'mkPE32_csa_cluster_790'.
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE32_csa_cluster_799' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 1 in module 'mkPE32_csa_cluster_799'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Rejected all carry-save configurations in module 'mkPE32_csa_cluster_799'.
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE32_csa_cluster_798' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=66 B=66 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=64 B=64 CI=1 Z=64) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 1 in module 'mkPE32_csa_cluster_798'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Rejected all carry-save configurations in module 'mkPE32_csa_cluster_798'.
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE32_csa_cluster_797' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=48 CI=1 Z=48).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=48 CI=1 Z=48) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 1 of 1 in module 'mkPE32_csa_cluster_797'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Used configuration 1, resulting in 1 carry-save group in module 'mkPE32_csa_cluster_797'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
      Timing increment_unsigned_15649...
Info    : Done optimizing RTL. [RTLOPT-2]
        : Done optimizing RTL in 'mkPE32'.
      Removing temporary intermediate hierarchies under mkPE32
              Optimizing muxes in design 'mkPE32'.
Info    : Gating clocks. [SYNTH-13]
        : Gating clocks in 'mkPE32'.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
      Gating clocks in mkPE32
        Preparing the circuit
          Pruning unused logic
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'inc_add_437_45_1' of datapath component 'increment_unsigned_1'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_578_42' of datapath component 'sub_unsigned_1502'.
Inserting clock-gating logic .....
        
        New clock gate fanout statistics
        =================================================
        Fanout Size           Num CGs     Total FFs 
        -------------------------------------------------
        4 to 15                   1       4
        16 to 63                  3       80
        =================================================

Info    : Could not find any user created clock-gating module. [POPT-12]
        : Looking for Integrated clock-gating cell in library.
Clock Gating Status
===================
Category                                Number    Percentage
------------------------------------------------------------------
Gated flip-flops                        84		100%
Ungated flip-flops
  Cannot map to requested logic         0		  0%
  Enable signal is constant             0		  0%
  Excluded from clock-gating            0		  0%
  User preserved                        0		  0%
  Libcell unusable                      0		  0%
  Timing exception in enable logic      0		  0%
  Register bank width too small         0		  0%
Total flip-flops                        84		100%
Total CG Modules                        4
Info    : One or more cost groups were automatically created for clock gate enable paths. [POPT-96]
        : This feature can be disabled by setting the attribute lp_clock_gating_auto_cost_grouping false.
    Automatically cost grouped 4 clock gate paths.
  Setting attribute of root '/': 'pbs_stage_start_elapsed_time' = 37
  Setting attribute of root '/': 'pbs_stage_start_st_time' = 37
Info    : Done synthesizing. [SYNTH-2]
        : Done synthesizing 'mkPE32' to generic gates.
        Applying wireload models.
        Computing net loads.
     flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:            25             25                                      syn_generic
syn_map
Info    : Mapping. [SYNTH-4]
        : Mapping 'mkPE32' using 'high' effort.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
        Applying wireload models.
        Computing net loads.
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed mapping optimization to kick in.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
      Mapping 'mkPE32'...
        Preparing the circuit
          Pruning unused logic
Multi-threaded constant propagation [1|0] ...
        Rebuilding component 'mult_unsigned_839' based on context...
          Analyzing hierarchical boundaries
          Propagating constants
        Done preparing the circuit
          Structuring (delay-based) mkPE32...
          Done structuring (delay-based) mkPE32
Multi-threaded Virtual Mapping    (8 threads per ST process, 8 of 16 CPUs usable)
          Structuring (delay-based) sub_unsigned_1502_837...
            Starting partial collapsing (xors only) sub_unsigned_1502_837
            Finished partial collapsing.
            Starting partial collapsing  sub_unsigned_1502_837
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) sub_unsigned_1502_837
        Mapping component sub_unsigned_1502_837...
          Structuring (delay-based) sub_unsigned_1502_838...
            Starting partial collapsing (xors only) sub_unsigned_1502_838
            Finished partial collapsing.
            Starting partial collapsing  sub_unsigned_1502_838
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) sub_unsigned_1502_838
        Mapping component sub_unsigned_1502_838...
          Structuring (delay-based) logic partition in mkPE32...
            Starting partial collapsing (xors only) cb_part_1240
            Finished partial collapsing.
            Starting partial collapsing  cb_part_1240
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE32
        Mapping logic partition in mkPE32...
          Structuring (delay-based) logic partition in mkPE32...
            Starting partial collapsing  cb_part_1238
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE32
        Mapping logic partition in mkPE32...
        Rebalancing component 'mul_537_16'...
          Structuring (delay-based) mult_unsigned_839...
            Starting partial collapsing (xors only) mult_unsigned_839
            Finished partial collapsing.
            Starting partial collapsing  mult_unsigned_839
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) mult_unsigned_839
        Mapping component mult_unsigned_839...
          Structuring (delay-based) sub_unsigned...
            Starting partial collapsing (xors only) sub_unsigned
            Finished partial collapsing.
            Starting partial collapsing  sub_unsigned
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) sub_unsigned
        Mapping component sub_unsigned...
          Structuring (delay-based) logic partition in mkPE32...
            Starting partial collapsing  cb_part
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE32
        Mapping logic partition in mkPE32...
        Rebalancing component 'mul_533_16'...
          Structuring (delay-based) mult_unsigned...
            Starting partial collapsing (xors only) mult_unsigned
            Finished partial collapsing.
            Starting partial collapsing  mult_unsigned
            Finished partial collapsing.
          Done structuring (delay-based) mult_unsigned
        Mapping component mult_unsigned...
          Structuring (delay-based) sub_unsigned_961_840...
            Starting partial collapsing (xors only) sub_unsigned_961_840
            Finished partial collapsing.
            Starting partial collapsing  sub_unsigned_961_840
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) sub_unsigned_961_840
        Mapping component sub_unsigned_961_840...
          Structuring (delay-based) sub_unsigned_961...
            Starting partial collapsing (xors only) sub_unsigned_961
            Finished partial collapsing.
            Starting partial collapsing  sub_unsigned_961
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) sub_unsigned_961
        Mapping component sub_unsigned_961...
          Structuring (delay-based) cb_part_1241...
            Starting partial collapsing  cb_part_1241
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) cb_part_1241
        Mapping component cb_part_1241...
          Structuring (delay-based) add_unsigned_3427...
            Starting partial collapsing (xors only) add_unsigned_3427
            Finished partial collapsing.
            Starting partial collapsing  add_unsigned_3427
            Finished partial collapsing.
          Done structuring (delay-based) add_unsigned_3427
        Mapping component add_unsigned_3427...
          Structuring (delay-based) increment_unsigned_13188_13189...
            Starting partial collapsing (xors only) increment_unsigned_13188_13189
            Finished partial collapsing.
            Starting partial collapsing  increment_unsigned_13188_13189
            Finished partial collapsing.
          Done structuring (delay-based) increment_unsigned_13188_13189
        Mapping component increment_unsigned_13188_13189...
          Structuring (delay-based) cb_seq...
            Starting partial collapsing (xors only) cb_seq
            Finished partial collapsing.
            Starting partial collapsing  cb_seq
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) cb_seq
        Mapping component cb_seq...
 
Global mapping target info
==========================
Cost Group 'clk' target slack:   294 ps
Target path end-point (Pin: m_pos_partial_sum_reg[31]/d)

             Pin                          Type          Fanout Load Arrival   
                                                               (fF)   (ps)    
------------------------------------------------------------------------------
(clock clk)                     <<<  launch                               0 R 
                                     latency                                  
cb_seqi
  m_pos_partial_sum_reg[0]/clk                                                
  m_pos_partial_sum_reg[0]/q    (u)  unmapped_d_flop        14 32.2           
cb_seqi/minus_581_31_B[0] 
minus_581_31/B[0] 
  g516/in_1                                                                   
  g516/z                        (u)  unmapped_or2            3  6.9           
  g528/in_0                                                                   
  g528/z                        (u)  unmapped_or2            3  6.9           
  g652/in_0                                                                   
  g652/z                        (u)  unmapped_or2            3  6.9           
  g534/in_0                                                                   
  g534/z                        (u)  unmapped_or2            3  6.9           
  g667/in_0                                                                   
  g667/z                        (u)  unmapped_or2            3  6.9           
  g649/in_0                                                                   
  g649/z                        (u)  unmapped_or2            3  6.9           
  g651/in_0                                                                   
  g651/z                        (u)  unmapped_or2            3  6.9           
  g540/in_0                                                                   
  g540/z                        (u)  unmapped_or2            3  6.9           
  g665/in_0                                                                   
  g665/z                        (u)  unmapped_or2            3  6.9           
  g645/in_0                                                                   
  g645/z                        (u)  unmapped_or2            3  6.9           
  g749/in_0                                                                   
  g749/z                        (u)  unmapped_complex2       1  2.3           
  g750/in_1                                                                   
  g750/z                        (u)  unmapped_nand2          1  2.3           
minus_581_31/Z[11] 
cb_parti5548/minus_581_31_Z[10] 
  g5878/in_0                                                                  
  g5878/z                       (u)  unmapped_nand2          1  2.3           
  g5834/in_1                                                                  
  g5834/z                       (u)  unmapped_nand2         23 11.5           
cb_parti5548/mul_537_16_B[10] 
mul_537_16/B[11] 
  g14855/in_0                                                                 
  g14855/z                      (u)  unmapped_complex2       1  2.3           
  g14856/in_1                                                                 
  g14856/z                      (u)  unmapped_nand2          1  2.3           
  g14775/in_1                                                                 
  g14775/z                      (u)  unmapped_complex2      10 23.0           
  g14582/in_1                                                                 
  g14582/z                      (u)  unmapped_complex2       1  2.3           
  g14447/in_0                                                                 
  g14447/z                      (u)  unmapped_nand2         35 13.8           
  g14360/in_0                                                                 
  g14360/z                      (u)  unmapped_nand2          1  2.3           
  g14361/in_1                                                                 
  g14361/z                      (u)  unmapped_nand2          3  6.9           
  g14008/in_1                                                                 
  g14008/z                      (u)  unmapped_complex2       1  2.3           
  g14009/in_1                                                                 
  g14009/z                      (u)  unmapped_nand2          2  4.6           
  g13821/in_0                                                                 
  g13821/z                      (u)  unmapped_complex2       1  2.3           
  g13822/in_1                                                                 
  g13822/z                      (u)  unmapped_nand2          3  6.9           
  g13718/in_0                                                                 
  g13718/z                      (u)  unmapped_complex2       1  2.3           
  g13719/in_1                                                                 
  g13719/z                      (u)  unmapped_nand2          2  4.6           
  g13357/in_0                                                                 
  g13357/z                      (u)  unmapped_complex2       1  2.3           
  g13358/in_1                                                                 
  g13358/z                      (u)  unmapped_nand2          3  6.9           
  g13060/in_1                                                                 
  g13060/z                      (u)  unmapped_complex2       1  2.3           
  g13061/in_1                                                                 
  g13061/z                      (u)  unmapped_nand2          2  4.6           
  g9266/in_0                                                                  
  g9266/z                       (u)  unmapped_or2            2  4.6           
  g11018/in_1                                                                 
  g11018/z                      (u)  unmapped_nand2          2  4.6           
  g11855/in_1                                                                 
  g11855/z                      (u)  unmapped_or2            1  2.3           
  g11856/in_1                                                                 
  g11856/z                      (u)  unmapped_nand2          4  9.2           
mul_537_16/Z[20] 
minus_576_9/B[20] 
  g1703/in_0                                                                  
  g1703/z                       (u)  unmapped_complex2       1  2.3           
  g1704/in_1                                                                  
  g1704/z                       (u)  unmapped_nand2          1  2.3           
minus_576_9/Z[20] 
cb_parti5549/minus_576_9_Z[5] 
  g7314/in_1                                                                  
  g7314/z                       (u)  unmapped_complex2       1  2.3           
  g7234/in_1                                                                  
  g7234/z                       (u)  unmapped_nand2          1  2.3           
  g7178/in_1                                                                  
  g7178/z                       (u)  unmapped_complex2       3  6.9           
cb_parti5549/add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25_A[4] 
add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25/A[4] 
  g1603/in_0                                                                  
  g1603/z                       (u)  unmapped_or2            1  2.3           
  g2162/in_0                                                                  
  g2162/z                       (u)  unmapped_nand2          1  2.3           
  g2158/in_0                                                                  
  g2158/z                       (u)  unmapped_nand2          3  6.9           
  g2157/in_1                                                                  
  g2157/z                       (u)  unmapped_nand2          1  2.3           
  g2153/in_0                                                                  
  g2153/z                       (u)  unmapped_nand2          3  6.9           
  g2149/in_1                                                                  
  g2149/z                       (u)  unmapped_nand2          1  2.3           
  g2148/in_0                                                                  
  g2148/z                       (u)  unmapped_nand2          3  6.9           
  g2147/in_1                                                                  
  g2147/z                       (u)  unmapped_nand2          1  2.3           
  g2143/in_0                                                                  
  g2143/z                       (u)  unmapped_nand2          3  6.9           
  g2142/in_1                                                                  
  g2142/z                       (u)  unmapped_nand2          1  2.3           
  g2138/in_1                                                                  
  g2138/z                       (u)  unmapped_nand2          3  6.9           
  g2137/in_0                                                                  
  g2137/z                       (u)  unmapped_nand2          1  2.3           
  g2133/in_0                                                                  
  g2133/z                       (u)  unmapped_nand2          3  6.9           
  g2129/in_1                                                                  
  g2129/z                       (u)  unmapped_nand2          1  2.3           
  g2128/in_0                                                                  
  g2128/z                       (u)  unmapped_nand2          3  6.9           
  g2124/in_1                                                                  
  g2124/z                       (u)  unmapped_nand2          1  2.3           
  g2123/in_1                                                                  
  g2123/z                       (u)  unmapped_nand2          3  6.9           
  g2122/in_1                                                                  
  g2122/z                       (u)  unmapped_nand2          1  2.3           
  g2118/in_1                                                                  
  g2118/z                       (u)  unmapped_nand2          3  6.9           
  g2117/in_0                                                                  
  g2117/z                       (u)  unmapped_nand2          1  2.3           
  g2113/in_0                                                                  
  g2113/z                       (u)  unmapped_nand2          3  6.9           
  g2112/in_1                                                                  
  g2112/z                       (u)  unmapped_nand2          1  2.3           
  g2108/in_0                                                                  
  g2108/z                       (u)  unmapped_nand2          3  6.9           
  g2107/in_1                                                                  
  g2107/z                       (u)  unmapped_nand2          1  2.3           
  g2103/in_0                                                                  
  g2103/z                       (u)  unmapped_nand2          3  6.9           
  g2099/in_1                                                                  
  g2099/z                       (u)  unmapped_nand2          2  4.6           
  g2097/in_1                                                                  
  g2097/z                       (u)  unmapped_complex2       1  2.3           
  g2096/in_1                                                                  
  g2096/z                       (u)  unmapped_complex2       3  6.9           
  g2089/in_1                                                                  
  g2089/z                       (u)  unmapped_nand2          1  2.3           
  g2088/in_1                                                                  
  g2088/z                       (u)  unmapped_nand2          3  6.9           
  g2087/in_0                                                                  
  g2087/z                       (u)  unmapped_nand2          1  2.3           
  g2083/in_0                                                                  
  g2083/z                       (u)  unmapped_nand2          3  6.9           
  g2079/in_1                                                                  
  g2079/z                       (u)  unmapped_nand2          1  2.3           
  g2078/in_1                                                                  
  g2078/z                       (u)  unmapped_nand2          3  6.9           
  g2074/in_0                                                                  
  g2074/z                       (u)  unmapped_nand2          1  2.3           
  g2073/in_0                                                                  
  g2073/z                       (u)  unmapped_nand2          3  6.9           
  g2072/in_1                                                                  
  g2072/z                       (u)  unmapped_nand2          1  2.3           
  g2068/in_0                                                                  
  g2068/z                       (u)  unmapped_nand2          3  6.9           
  g2067/in_1                                                                  
  g2067/z                       (u)  unmapped_nand2          1  2.3           
  g2063/in_1                                                                  
  g2063/z                       (u)  unmapped_nand2          3  6.9           
  g2059/in_1                                                                  
  g2059/z                       (u)  unmapped_nand2          2  4.6           
  g2057/in_1                                                                  
  g2057/z                       (u)  unmapped_complex2       1  2.3           
  g2056/in_1                                                                  
  g2056/z                       (u)  unmapped_complex2       3  6.9           
  g2049/in_1                                                                  
  g2049/z                       (u)  unmapped_nand2          1  2.3           
  g2048/in_1                                                                  
  g2048/z                       (u)  unmapped_nand2          3  6.9           
  g2047/in_0                                                                  
  g2047/z                       (u)  unmapped_nand2          1  2.3           
  g2043/in_0                                                                  
  g2043/z                       (u)  unmapped_nand2          3  6.9           
  g2042/in_1                                                                  
  g2042/z                       (u)  unmapped_nand2          2  4.6           
  g2038/in_1                                                                  
  g2038/z                       (u)  unmapped_complex2       1  2.3           
  g2036/in_1                                                                  
  g2036/z                       (u)  unmapped_complex2       3  6.9           
  g2032/in_1                                                                  
  g2032/z                       (u)  unmapped_nand2          1  2.3           
  g2028/in_1                                                                  
  g2028/z                       (u)  unmapped_nand2          3  6.9           
  g2024/in_0                                                                  
  g2024/z                       (u)  unmapped_nand2          1  2.3           
  g2023/in_0                                                                  
  g2023/z                       (u)  unmapped_nand2          3  6.9           
  g549/in_0                                                                   
  g549/z                        (u)  unmapped_nand2          3  6.9           
  g1194/in_0                                                                  
  g1194/z                       (u)  unmapped_complex2       3  6.9           
  g1125/in_0                                                                  
  g1125/z                       (u)  unmapped_complex2       3  6.9           
  g2010/in_0                                                                  
  g2010/z                       (u)  unmapped_complex2       3  6.9           
  g2009/in_0                                                                  
  g2009/z                       (u)  unmapped_complex2       3  6.9           
  g2002/in_0                                                                  
  g2002/z                       (u)  unmapped_complex2       3  6.9           
  g2001/in_0                                                                  
  g2001/z                       (u)  unmapped_complex2       3  6.9           
  g1997/in_0                                                                  
  g1997/z                       (u)  unmapped_complex2       3  6.9           
  g1990/in_0                                                                  
  g1990/z                       (u)  unmapped_complex2       3  6.9           
  g1193/in_0                                                                  
  g1193/z                       (u)  unmapped_complex2       3  6.9           
  g1118/in_0                                                                  
  g1118/z                       (u)  unmapped_complex2       3  6.9           
  g1980/in_0                                                                  
  g1980/z                       (u)  unmapped_complex2       3  6.9           
  g1979/in_0                                                                  
  g1979/z                       (u)  unmapped_complex2       3  6.9           
  g1192/in_0                                                                  
  g1192/z                       (u)  unmapped_complex2       3  6.9           
  g1972/in_0                                                                  
  g1972/z                       (u)  unmapped_complex2       2  4.6           
  g1967/in_0                                                                  
  g1967/z                       (u)  unmapped_nand2          1  2.3           
  g1968/in_1                                                                  
  g1968/z                       (u)  unmapped_nand2          3  6.9           
add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25/Z[47] 
cb_seqi/add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25_Z[47] 
  g7084/in_0                                                                  
  g7084/z                       (u)  unmapped_complex2       1  2.3           
  g7071/in_1                                                                  
  g7071/z                       (u)  unmapped_complex2       2  4.6           
  g7041/in_1                                                                  
  g7041/z                       (u)  unmapped_complex2       1  2.3           
  g7010/in_0                                                                  
  g7010/z                       (u)  unmapped_complex2       1  2.3           
  g6994/in_0                                                                  
  g6994/z                       (u)  unmapped_complex2       1  2.3           
  g6991/in_0                                                                  
  g6991/z                       (u)  unmapped_complex2       1  2.3           
  g6987/in_0                                                                  
  g6987/z                       (u)  unmapped_complex2       1  2.3           
  g6982/in_0                                                                  
  g6982/z                       (u)  unmapped_complex2       1  2.3           
  g6979/in_0                                                                  
  g6979/z                       (u)  unmapped_complex2       1  2.3           
  g6977/in_1                                                                  
  g6977/z                       (u)  unmapped_complex2       1  2.3           
  g6970/in_0                                                                  
  g6970/z                       (u)  unmapped_complex2       1  2.3           
  g6966/in_0                                                                  
  g6966/z                       (u)  unmapped_complex2       1  2.3           
  g6963/in_0                                                                  
  g6963/z                       (u)  unmapped_complex2       1  2.3           
  g6961/in_1                                                                  
  g6961/z                       (u)  unmapped_complex2       1  2.3           
  g6954/in_0                                                                  
  g6954/z                       (u)  unmapped_nand2          1  2.3           
  g6949/in_1                                                                  
  g6949/z                       (u)  unmapped_nand2          1  2.3           
  g6945/in_0                                                                  
  g6945/z                       (u)  unmapped_complex2       1  2.3           
  g6938/in_1                                                                  
  g6938/z                       (u)  unmapped_complex2      33 13.8           
  g6891/in_0                                                                  
  g6891/z                       (u)  unmapped_nand2          1  2.3           
  g6831/in_1                                                                  
  g6831/z                       (u)  unmapped_nand2          1  2.3           
  g7102/data1                                                                 
  g7102/z                       (u)  unmapped_bmux3          1  2.3           
  g7103/data0                                                                 
  g7103/z                       (u)  unmapped_bmux3          1  2.3           
  m_pos_partial_sum_reg[31]/d   <<<  unmapped_d_flop                          
  m_pos_partial_sum_reg[31]/clk      setup                                    
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                          capture                          10000 R 
                                     latency                                  
                                     uncertainty                              
------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Start-point  : cb_seqi/m_pos_partial_sum_reg[0]/clk
End-point    : cb_seqi/m_pos_partial_sum_reg[31]/d

(u) : Net has unmapped pin(s).

The global mapper estimates a slack for this path of 3921ps.
 
Cost Group 'cg_enable_group_clk' target slack:   290 ps
Target path end-point (Pin: RC_CG_HIER_INST0/RC_CGIC_INST/E (CKLNQD1/E))

               Pin                                Type          Fanout Load Arrival   
                                                                       (fF)   (ps)    
--------------------------------------------------------------------------------------
(clock clk)                           <<<    launch                               0 R 
                                             latency                                  
(constraints_tsmc65lp_line_44_85_1)          ext delay                                
EN_add_input                          (u)    in port                45 16.1           
cb_parti5549/EN_add_input 
  g1/in_1                                                                             
  g1/z                                (u)    unmapped_or2            4  9.2           
  g2/in_1                                                                             
  g2/z                                (u)    unmapped_or2            4  9.2           
  g7439/in_0                                                                          
  g7439/z                             (u)    unmapped_complex2       2  4.6           
  g7275/in_0                                                                          
  g7275/z                             (u)    unmapped_or2            2  4.6           
  g7247/in_0                                                                          
  g7247/z                             (u)    unmapped_complex2       1  0.9           
cb_parti5549/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                    <<< (P)  CKLNQD1                                  
  RC_CGIC_INST/CP                            setup                                    
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                                  capture                          10000 R 
                                             latency                                  
                                             uncertainty                              
--------------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Start-point  : EN_add_input
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved
(u) : Net has unmapped pin(s).

The global mapper estimates a slack for this path of 9077ps.
 
Multi-threaded Technology Mapping (8 threads per ST process, 8 of 16 CPUs usable)
          Restructuring (delay-based) cb_seq...
          Done restructuring (delay-based) cb_seq
        Optimizing component cb_seq...
          Restructuring (delay-based) add_unsigned_3427...
          Done restructuring (delay-based) add_unsigned_3427
        Optimizing component add_unsigned_3427...
        Early Area Reclamation for add_unsigned_3427 'very_fast' (slack=1498, area=434)...
                  			o_slack=327,  bc_slack=2669
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
        Early Area Reclamation for increment_unsigned_13188_13189 'timing_driven' (slack=1652, area=265)...
                  			o_slack=444,  bc_slack=2860
          Restructuring (delay-based) cb_part_1241...
          Done restructuring (delay-based) cb_part_1241
        Optimizing component cb_part_1241...
          Restructuring (delay-based) sub_unsigned_961...
          Done restructuring (delay-based) sub_unsigned_961
        Optimizing component sub_unsigned_961...
        Early Area Reclamation for sub_unsigned_961 'very_fast' (slack=380, area=308)...
                  			o_slack=337,  bc_slack=423
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
        Pre-mapped Exploration for mult_unsigned 'timing_driven' (slack=120, area=15007)...
                  			o_slack=-95,  bc_slack=336
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
        Early Area Reclamation for mult_unsigned 'timing_driven' (slack=120, area=15007)...
                  			o_slack=-95,  bc_slack=336
          Restructuring (delay-based) sub_unsigned_961_840...
          Done restructuring (delay-based) sub_unsigned_961_840
        Optimizing component sub_unsigned_961_840...
        Early Area Reclamation for sub_unsigned_961_840 'very_fast' (slack=276, area=284)...
                  			o_slack=247,  bc_slack=304
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) logic partition in mkPE32...
          Done restructuring (delay-based) logic partition in mkPE32
        Optimizing logic partition in mkPE32...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
        Pre-mapped Exploration for mult_unsigned_839 'timing_driven' (slack=113, area=6108)...
                  			o_slack=-61,  bc_slack=287
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) mult_unsigned...
          Done restructuring (delay-based) mult_unsigned
        Optimizing component mult_unsigned...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) cb_part_1238...
          Done restructuring (delay-based) cb_part_1238
        Optimizing component cb_part_1238...
          Restructuring (delay-based) cb_part_1240...
          Done restructuring (delay-based) cb_part_1240
        Optimizing component cb_part_1240...
          Restructuring (delay-based) sub_unsigned_1502_837...
          Done restructuring (delay-based) sub_unsigned_1502_837
        Optimizing component sub_unsigned_1502_837...
          Restructuring (delay-based) sub_unsigned_1502_838...
          Done restructuring (delay-based) sub_unsigned_1502_838
        Optimizing component sub_unsigned_1502_838...
 
Global mapping timing result
============================
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
                Pin                             Type       Fanout Load Slew Delay Arrival   
                                                                  (fF) (ps)  (ps)   (ps)    
--------------------------------------------------------------------------------------------
(clock clk)                                   launch                                    0 R 
                                              latency                        +200     200 R 
(constraints_tsmc65lp_line_44_118_1)          ext delay                      +100     300 R 
EN_reset_pe                                   in port           7  6.0   48   +22     322 R 
cb_parti5549/EN_reset_pe 
  g9999/A1                                                                     +0     322   
  g9999/ZN                                    NR2XD0            3  2.2   60   +52     373 F 
  g9996/I                                                                      +0     373   
  g9996/ZN                                    INVD1             2  2.1   41   +46     419 R 
  g9989/A1                                                                     +0     419   
  g9989/ZN                                    NR2XD1            5  3.4   51   +42     461 F 
  g9853/A2                                                                     +0     461   
  g9853/ZN                                    CKND2D0           2  2.0   91   +75     536 R 
  g9691/A2                                                                     +0     536   
  g9691/ZN                                    NR2XD0            2  1.4   47   +62     598 F 
  g9594/A2                                                                     +0     598   
  g9594/ZN                                    CKND2D0           1  0.9   58   +55     653 R 
cb_parti5549/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                          +0     653   
  RC_CGIC_INST/CP                             setup                     100  +138     791 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                                   capture                               10000 R 
                                              latency                        +200   10200 R 
                                              uncertainty                    -100   10100 R 
--------------------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Timing slack :    9309ps 
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

            Pin                      Type       Fanout Load Slew Delay Arrival   
                                                       (fF) (ps)  (ps)   (ps)    
---------------------------------------------------------------------------------
(clock clk)                        launch                                    0 R 
                                   latency                        +200     200 R 
cb_parti5546
  m_weight_regs_1_reg[1]/CP                                  100           200 R 
  m_weight_regs_1_reg[1]/Q         DFKCNQD1          2  6.9   75  +288     488 F 
  g6683/A2                                                          +0     488   
  g6683/ZN                         CKND2D2           1  1.5   35   +50     538 R 
  g6681/A1                                                          +0     538   
  g6681/ZN                         CKND2D2           1  1.4   27   +30     567 F 
  g6679/A1                                                          +0     567   
  g6679/ZN                         CKND2D2           1  2.2   39   +32     599 R 
  g6676/A2                                                          +0     599   
  g6676/ZN                         ND2D2             1  1.4   29   +37     637 F 
  g6675/A1                                                          +0     637   
  g6675/ZN                         CKND2D2           1  1.8   35   +31     667 R 
  g6673/A1                                                          +0     667   
  g6673/ZN                         ND2D2             1  2.6   39   +37     704 F 
  g6672/A1                                                          +0     704   
  g6672/ZN                         NR2XD2            2  4.7   49   +44     748 R 
  g6671/A1                                                          +0     748   
  g6671/ZN                         NR2XD3            5  7.2   42   +40     788 F 
  g6664/A1                                                          +0     788   
  g6664/ZN                         ND2D2             1  1.8   28   +31     819 R 
  g6657/A1                                                          +0     819   
  g6657/ZN                         ND2D2             2  3.3   47   +38     857 F 
cb_parti5546/minus_587_42_Y_sub_556_25_B[1] 
minus_587_42_Y_sub_556_25/B[11] 
  g4878/I                                                           +0     857   
  g4878/ZN                         CKND2             1  1.5   21   +29     886 R 
  g4860/A1                                                          +0     886   
  g4860/ZN                         CKND2D2           2  3.3   43   +35     920 F 
  g4827/A1                                                          +0     920   
  g4827/ZN                         CKND2D2           2  3.3   48   +42     963 R 
  g4815/I                                                           +0     963   
  g4815/ZN                         CKND2             1  1.4   19   +27     989 F 
  g4793/A1                                                          +0     989   
  g4793/ZN                         CKND2D2           1  2.5   41   +31    1020 R 
  g4788/A1                                                          +0    1020   
  g4788/ZN                         CKND2D3           2  3.6   36   +37    1057 F 
minus_587_42_Y_sub_556_25/Z[11] 
cb_parti/minus_587_42_Y_sub_556_25_Z[1] 
  g5771/A1                                                          +0    1057   
  g5771/ZN                         ND2D3             1  6.3   44   +39    1096 R 
  g5747/A1                                                          +0    1096   
  g5747/ZN                         CKND2D8          25 31.2   88   +69    1165 F 
cb_parti/mul_533_16_A[1] 
mul_533_16/A[11] 
  g51187/I                                                          +0    1165   
  g51187/ZN                        INVD6             9 11.1   40   +51    1216 R 
  g50523/A1                                                         +0    1216   
  g50523/ZN                        CKND2D2           1  1.6   30   +32    1248 F 
  g50096/A1                                                         +0    1248   
  g50096/ZN                        ND2D2             2  3.0   36   +31    1279 R 
  g48918/A1                                                         +0    1279   
  g48918/ZN                        CKND2D2           1  1.9   31   +32    1312 F 
  g48697/A2                                                         +0    1312   
  g48697/ZN                        CKND2D2           1  1.9   36   +37    1348 R 
  g47844/B                                                          +0    1348   
  g47844/S                         FA1D1             1  1.8   47  +235    1583 F 
  g47621/B                                                          +0    1583   
  g47621/S                         FA1D1             2  3.9   63  +252    1835 F 
  g47344/B                                                          +0    1835   
  g47344/S                         HA1D2             2  3.4   52  +146    1981 R 
  g47327/I                                                          +0    1981   
  g47327/ZN                        CKND2             1  1.8   21   +29    2010 F 
  g47305/A1                                                         +0    2010   
  g47305/ZN                        NR2D2             1  1.4   45   +37    2048 R 
  g47281/A1                                                         +0    2048   
  g47281/ZN                        NR2XD1            4  3.9   55   +46    2094 F 
  g47145/B2                                                         +0    2094   
  g47145/ZN                        MOAI22D1          2  1.9   65  +110    2203 F 
  g47108/A1                                                         +0    2203   
  g47108/ZN                        ND2D1             1  1.9   45   +49    2252 R 
  g47088/A2                                                         +0    2252   
  g47088/ZN                        CKND2D2           2  2.9   39   +45    2297 F 
  g47057/A1                                                         +0    2297   
  g47057/ZN                        NR2XD1            2  2.9   56   +48    2345 R 
  g46951/A2                                                         +0    2345   
  g46951/ZN                        OAI21D2           3  2.6   53   +52    2398 F 
  g46948/A1                                                         +0    2398   
  g46948/ZN                        ND2D1             1  1.5   40   +42    2440 R 
  g46945/A1                                                         +0    2440   
  g46945/ZN                        CKND2D2           1  1.9   31   +33    2473 F 
  g46944/CI                                                         +0    2473   
  g46944/CO                        FA1D1             1  1.9   51  +104    2577 F 
  g46943/CI                                                         +0    2577   
  g46943/CO                        FA1D1             1  1.9   51  +110    2687 F 
  g46942/CI                                                         +0    2687   
  g46942/CO                        FA1D1             1  1.9   51  +110    2797 F 
  g46941/CI                                                         +0    2797   
  g46941/CO                        FA1D1             1  1.9   51  +110    2908 F 
  g46940/CI                                                         +0    2908   
  g46940/CO                        FA1D1             1  1.9   51  +110    3018 F 
  g46939/CI                                                         +0    3018   
  g46939/CO                        FA1D1             1  1.9   51  +110    3128 F 
  g46938/CI                                                         +0    3128   
  g46938/CO                        FA1D1             1  1.9   51  +110    3238 F 
  g46937/CI                                                         +0    3238   
  g46937/CO                        FA1D1             1  1.9   51  +110    3348 F 
  g46936/CI                                                         +0    3348   
  g46936/CO                        FA1D1             1  1.9   51  +110    3459 F 
  g46935/CI                                                         +0    3459   
  g46935/CO                        FA1D1             1  1.9   51  +110    3569 F 
  g46934/CI                                                         +0    3569   
  g46934/CO                        FA1D1             1  1.9   51  +110    3679 F 
  g46933/CI                                                         +0    3679   
  g46933/CO                        FA1D1             1  1.9   51  +110    3789 F 
  g46932/CI                                                         +0    3789   
  g46932/CO                        FA1D1             1  1.9   51  +110    3899 F 
  g46931/CI                                                         +0    3899   
  g46931/CO                        FA1D1             1  1.9   51  +110    4010 F 
  g46930/CI                                                         +0    4010   
  g46930/CO                        FA1D1             1  1.9   51  +110    4120 F 
  g46929/CI                                                         +0    4120   
  g46929/CO                        FA1D1             1  1.9   51  +110    4230 F 
  g46928/CI                                                         +0    4230   
  g46928/CO                        FA1D1             1  1.9   51  +110    4340 F 
  g46927/CI                                                         +0    4340   
  g46927/CO                        FA1D1             1  1.9   51  +110    4451 F 
  g46926/CI                                                         +0    4451   
  g46926/CO                        FA1D1             1  1.9   51  +110    4561 F 
  g46925/CI                                                         +0    4561   
  g46925/CO                        FA1D1             1  1.9   51  +110    4671 F 
  g46924/CI                                                         +0    4671   
  g46924/CO                        FA1D1             1  1.9   51  +110    4782 F 
  g46923/CI                                                         +0    4782   
  g46923/CO                        FA1D1             1  1.9   51  +110    4892 F 
  g46922/CI                                                         +0    4892   
  g46922/S                         FA1D1             4  3.7   75  +170    5062 R 
mul_533_16/Z[42] 
minus_585_9/B[42] 
  g2190/B2                                                          +0    5062   
  g2190/ZN                         MOAI22D1          1  0.7   59  +101    5163 R 
minus_585_9/Z[42] 
cb_parti5549/minus_585_9_Z[27] 
  g9623/A1                                                          +0    5163   
  g9623/Z                          AO22D0            3  2.2   83  +136    5299 R 
cb_parti5549/inc_add_535_23_3_A[26] 
inc_add_535_23_3/A[26] 
  g661/B1                                                           +0    5299   
  g661/ZN                          IND2D0            3  2.1   96   +86    5385 F 
  g659/A1                                                           +0    5385   
  g659/ZN                          IND2D0            3  2.1   96  +136    5522 F 
  g657/A1                                                           +0    5522   
  g657/ZN                          IND2D0            3  2.1   96  +136    5658 F 
  g655/A1                                                           +0    5658   
  g655/ZN                          IND2D0            3  2.1   96  +136    5794 F 
  g653/A1                                                           +0    5794   
  g653/ZN                          IND2D0            2  2.2   99  +138    5933 F 
  g651/A1                                                           +0    5933   
  g651/ZN                          IND2D0            3  2.1   96  +138    6070 F 
  g649/A1                                                           +0    6070   
  g649/ZN                          IND2D1            3  2.6   67  +124    6195 F 
  g647/A1                                                           +0    6195   
  g647/ZN                          IND2D1            3  2.6   68  +115    6309 F 
  g645/A1                                                           +0    6309   
  g645/ZN                          IND2D1            3  2.6   68  +115    6424 F 
  g643/A1                                                           +0    6424   
  g643/ZN                          IND2D1            3  2.6   68  +115    6539 F 
  g641/A1                                                           +0    6539   
  g641/ZN                          IND2D1            3  2.6   68  +115    6654 F 
  g639/A1                                                           +0    6654   
  g639/ZN                          IND2D1            3  2.6   68  +115    6769 F 
  g637/A1                                                           +0    6769   
  g637/ZN                          IND2D1            3  2.6   68  +115    6884 F 
  g635/A1                                                           +0    6884   
  g635/ZN                          IND2D1            3  2.6   68  +115    6999 F 
  g633/A1                                                           +0    6999   
  g633/ZN                          IND2D1            3  2.6   68  +115    7114 F 
  g631/A1                                                           +0    7114   
  g631/ZN                          IND2D1            3  2.6   68  +115    7229 F 
  g629/A1                                                           +0    7229   
  g629/ZN                          IND2D1            3  2.6   68  +115    7344 F 
  g627/A1                                                           +0    7344   
  g627/ZN                          IND2D1            3  2.6   68  +115    7459 F 
  g625/A1                                                           +0    7459   
  g625/ZN                          IND2D1            3  2.6   68  +115    7574 F 
  g623/A1                                                           +0    7574   
  g623/ZN                          IND2D1            3  2.6   68  +115    7689 F 
  g621/A1                                                           +0    7689   
  g621/ZN                          IND2D0            2  1.9   90  +124    7813 F 
  g619/B1                                                           +0    7813   
  g619/ZN                          MOAI22D1          2  1.3   55  +111    7924 F 
inc_add_535_23_3/Z[47] 
cb_seqi/inc_add_535_23_3_Z[47] 
  g8953/A1                                                          +0    7924   
  g8953/Z                          AO21D0            2  1.3   55  +127    8051 F 
  g8934/A4                                                          +0    8051   
  g8934/Z                          OR4D0             1  0.7   76  +215    8266 F 
  g8927/A4                                                          +0    8266   
  g8927/Z                          OR4D0             1  0.7   76  +220    8486 F 
  g8919/A4                                                          +0    8486   
  g8919/Z                          OR4D0             1  0.7   76  +220    8706 F 
  g8916/A4                                                          +0    8706   
  g8916/Z                          OR4D0             1  1.1   84  +229    8935 F 
  g8910/A1                                                          +0    8935   
  g8910/ZN                         NR4D1             1  0.8   71   +61    8996 R 
  g8907/A1                                                          +0    8996   
  g8907/ZN                         NR2XD0            2  1.5   48   +52    9048 F 
  g8905/A2                                                          +0    9048   
  g8905/ZN                         NR2XD0            1  1.9   74   +68    9117 R 
  g8901/A1                                                          +0    9117   
  g8901/Z                          AN2D4            32 26.5   99  +133    9250 R 
  g8888/A2                                                          +0    9250   
  g8888/ZN                         CKND2D0           1  1.0   60   +72    9321 F 
  g8827/C                                                           +0    9321   
  g8827/ZN                         OAI211D1          1  0.9   75   +55    9377 R 
  m_neg_partial_sum_reg[1]/D  <<<  DFKCNQD4                         +0    9377   
  m_neg_partial_sum_reg[1]/CP      setup                     100  +171    9547 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                        capture                               10000 R 
                                   latency                        +200   10200 R 
                                   uncertainty                    -100   10100 R 
---------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Timing slack :     553ps 
Start-point  : cb_parti5546/m_weight_regs_1_reg[1]/CP
End-point    : cb_seqi/m_neg_partial_sum_reg[1]/D

 
 
Global mapping status
=====================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_map                24955        0 

             Cost Group            Target    Slack    Diff.    Clock
--------------------------------------------------------------------
    cg_enable_group_clk               290     9309             10000 
                    clk               294      553             10000 

 
Global incremental target info
==============================
Cost Group 'clk' target slack:   192 ps
Target path end-point (Pin: m_pos_partial_sum_reg[6]/D (DFKCNQD4/D))

               Pin                         Type       Fanout Load Arrival   
                                                             (fF)   (ps)    
----------------------------------------------------------------------------
(clock clk)                         <<<  launch                         0 R 
                                         latency                            
(constraints_tsmc65lp_line_44_93_1)      ext delay                          
multiply_constants_pos_constant[0]       in port           5  5.2           
cb_parti5548/multiply_constants_pos_constant[0] 
  g6348/A1                                                                  
  g6348/ZN                               NR2XD0            2  2.0           
  g6300/B1                                                                  
  g6300/ZN                               IND2D1            2  1.4           
  g6269/A1                                                                  
  g6269/ZN                               NR2XD0            2  1.8           
  g6264/B1                                                                  
  g6264/ZN                               IND2D1            2  1.4           
  g6261/A2                                                                  
  g6261/ZN                               CKND2D0           1  1.5           
  g6257/A1                                                                  
  g6257/ZN                               XNR2D1            3  4.1           
cb_parti5548/mul_537_16_A[4] 
mul_537_16/A[15] 
  g28039/I                                                                  
  g28039/ZN                              INVD2             1  1.0           
  g27670/B2                                                                 
  g27670/ZN                              AOI22D1           2  1.6           
  g27403/B2                                                                 
  g27403/Z                               OA22D0            3  2.9           
  g27043/B2                                                                 
  g27043/ZN                              MOAI22D1          1  1.9           
  g26832/B                                                                  
  g26832/S                               FA1D1             1  1.8           
  g26668/B                                                                  
  g26668/CO                              FA1D1             1  1.9           
  g26632/CI                                                                 
  g26632/CO                              FA1D1             1  1.9           
  g26602/CI                                                                 
  g26602/CO                              FA1D1             1  1.9           
  g26576/CI                                                                 
  g26576/CO                              FA1D1             1  1.9           
  g26560/CI                                                                 
  g26560/CO                              FA1D1             1  1.9           
  g26544/CI                                                                 
  g26544/CO                              FA1D1             1  1.9           
  g26538/CI                                                                 
  g26538/CO                              FA1D1             1  1.9           
  g26528/CI                                                                 
  g26528/CO                              FA1D1             1  1.9           
  g26527/CI                                                                 
  g26527/CO                              FA1D1             1  1.9           
  g26526/CI                                                                 
  g26526/CO                              FA1D1             1  1.9           
  g26525/CI                                                                 
  g26525/CO                              FA1D1             1  1.9           
  g26524/CI                                                                 
  g26524/CO                              FA1D1             1  1.9           
  g26523/CI                                                                 
  g26523/CO                              FA1D1             1  1.9           
  g26522/CI                                                                 
  g26522/CO                              FA1D1             1  1.9           
  g26521/CI                                                                 
  g26521/CO                              FA1D1             1  1.9           
  g26520/CI                                                                 
  g26520/CO                              FA1D1             1  1.9           
  g26519/CI                                                                 
  g26519/CO                              FA1D1             1  1.9           
  g26518/CI                                                                 
  g26518/CO                              FA1D1             1  1.9           
  g26517/CI                                                                 
  g26517/S                               FA1D1             4  3.7           
mul_537_16/Z[33] 
minus_576_9/B[33] 
  g1092/B1                                                                  
  g1092/ZN                               MOAI22D1          1  0.9           
minus_576_9/Z[33] 
cb_parti5549/minus_576_9_Z[18] 
  g9646/A1                                                                  
  g9646/ZN                               CKND2D1           1  0.9           
  g9522/A1                                                                  
  g9522/ZN                               ND2D1             1  1.0           
cb_parti5549/add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25_A[17] 
add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25/A[17] 
  g3181/A                                                                   
  g3181/CO                               FA1D0             1  1.0           
  g3180/CI                                                                  
  g3180/CO                               FA1D0             1  1.0           
  g3179/CI                                                                  
  g3179/CO                               FA1D0             1  1.0           
  g3178/CI                                                                  
  g3178/CO                               FA1D0             1  1.0           
  g3177/CI                                                                  
  g3177/CO                               FA1D0             1  1.0           
  g3176/CI                                                                  
  g3176/CO                               FA1D0             1  1.0           
  g3175/CI                                                                  
  g3175/CO                               FA1D0             1  1.0           
  g3174/CI                                                                  
  g3174/CO                               FA1D0             1  1.0           
  g3173/CI                                                                  
  g3173/CO                               FA1D0             1  1.0           
  g3172/CI                                                                  
  g3172/CO                               FA1D0             1  1.0           
  g3171/CI                                                                  
  g3171/CO                               FA1D0             1  1.0           
  g3170/CI                                                                  
  g3170/CO                               FA1D0             1  1.0           
  g3169/CI                                                                  
  g3169/CO                               FA1D0             1  1.0           
  g3168/CI                                                                  
  g3168/CO                               FA1D0             1  1.9           
  g3167/CI                                                                  
  g3167/CO                               FA1D1             2  1.3           
  g3166/A2                                                                  
  g3166/ZN                               CKND2D0           2  1.3           
  g3164/A1                                                                  
  g3164/ZN                               IND2D1            3  2.6           
  g3162/A1                                                                  
  g3162/ZN                               IND2D1            3  2.6           
  g3160/A1                                                                  
  g3160/ZN                               IND2D1            3  2.6           
  g3158/A1                                                                  
  g3158/ZN                               IND2D1            3  2.6           
  g3156/A1                                                                  
  g3156/ZN                               IND2D1            3  2.6           
  g3154/A1                                                                  
  g3154/ZN                               IND2D1            3  2.6           
  g3152/A1                                                                  
  g3152/ZN                               IND2D1            3  2.6           
  g3150/A1                                                                  
  g3150/ZN                               IND2D1            3  2.6           
  g3148/A1                                                                  
  g3148/ZN                               IND2D1            3  2.6           
  g3146/A1                                                                  
  g3146/ZN                               IND2D1            3  2.6           
  g3144/A1                                                                  
  g3144/ZN                               IND2D1            3  2.6           
  g3142/A1                                                                  
  g3142/ZN                               IND2D1            3  2.6           
  g3140/A1                                                                  
  g3140/ZN                               IND2D1            3  2.6           
  g3138/A1                                                                  
  g3138/ZN                               IND2D0            2  1.9           
  g3136/B1                                                                  
  g3136/ZN                               MOAI22D1          3  2.5           
add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25/Z[47] 
cb_seqi/add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25_Z[47] 
  g8952/A1                                                                  
  g8952/Z                                AO21D0            2  1.3           
  g8932/A4                                                                  
  g8932/Z                                OR4D0             1  0.7           
  g8925/A4                                                                  
  g8925/Z                                OR4D0             1  0.7           
  g8918/A4                                                                  
  g8918/Z                                OR4D0             1  0.7           
  g8914/A4                                                                  
  g8914/Z                                OR4D0             1  1.1           
  g8912/A1                                                                  
  g8912/ZN                               NR4D1             1  1.0           
  g8909/B                                                                   
  g8909/ZN                               AOI21D1           2  1.7           
  g8906/B                                                                   
  g8906/ZN                               AOI21D1           1  0.9           
  g8896/A1                                                                  
  g8896/ZN                               AOI22D1           1  0.8           
  g8890/A1                                                                  
  g8890/Z                                CKAN2D2           6  8.1           
  g8884/I                                                                   
  g8884/ZN                               CKND2            16 11.2           
  g8801/A1                                                                  
  g8801/ZN                               AOI21D0           1  0.7           
  g8747/A1                                                                  
  g8747/ZN                               MOAI22D0          1  0.9           
  m_pos_partial_sum_reg[6]/D        <<<  DFKCNQD4                           
  m_pos_partial_sum_reg[6]/CP            setup                              
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                              capture                    10000 R 
                                         latency                            
                                         uncertainty                        
----------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Start-point  : multiply_constants_pos_constant[0]
End-point    : cb_seqi/m_pos_partial_sum_reg[6]/D

The global mapper estimates a slack for this path of 316ps.
 
Cost Group 'cg_enable_group_clk' target slack:   193 ps
Target path end-point (Pin: RC_CG_HIER_INST0/RC_CGIC_INST/E (CKLNQD1/E))

                Pin                             Type       Fanout Load Arrival   
                                                                  (fF)   (ps)    
---------------------------------------------------------------------------------
(clock clk)                            <<<    launch                         0 R 
                                              latency                            
(constraints_tsmc65lp_line_44_118_1)          ext delay                          
EN_reset_pe                                   in port           7  6.0           
cb_parti5549/EN_reset_pe 
  g9999/A1                                                                       
  g9999/ZN                                    NR2XD0            3  2.2           
  g9996/I                                                                        
  g9996/ZN                                    INVD1             2  2.1           
  g9989/A1                                                                       
  g9989/ZN                                    NR2XD1            5  3.4           
  g9853/A2                                                                       
  g9853/ZN                                    CKND2D0           2  2.0           
  g9691/A2                                                                       
  g9691/ZN                                    NR2XD0            2  1.4           
  g9594/A2                                                                       
  g9594/ZN                                    CKND2D0           1  0.9           
cb_parti5549/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                            
  RC_CGIC_INST/CP                             setup                              
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                                   capture                    10000 R 
                                              latency                            
                                              uncertainty                        
---------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

The global mapper estimates a slack for this path of 9202ps.
 
 
Global incremental timing result
================================
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
                Pin                             Type       Fanout Load Slew Delay Arrival   
                                                                  (fF) (ps)  (ps)   (ps)    
--------------------------------------------------------------------------------------------
(clock clk)                                   launch                                    0 R 
                                              latency                        +200     200 R 
(constraints_tsmc65lp_line_44_118_1)          ext delay                      +100     300 R 
EN_reset_pe                                   in port           7  5.4   44   +20     320 R 
cb_parti5549/EN_reset_pe 
  g9999/A1                                                                     +0     320   
  g9999/ZN                                    NR2XD0            3  2.1   58   +49     369 F 
  g9996/I                                                                      +0     369   
  g9996/ZN                                    CKND1             2  2.1   40   +45     414 R 
  g9989/A1                                                                     +0     414   
  g9989/ZN                                    NR2XD1            5  3.8   54   +44     458 F 
  g9853/A2                                                                     +0     458   
  g9853/ZN                                    CKND2D0           2  1.9   88   +74     532 R 
  g9691/A2                                                                     +0     532   
  g9691/ZN                                    NR2XD0            2  1.4   47   +61     593 F 
  g9594/A2                                                                     +0     593   
  g9594/ZN                                    CKND2D0           1  0.9   58   +54     648 R 
cb_parti5549/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                          +0     648   
  RC_CGIC_INST/CP                             setup                     100  +138     786 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                                   capture                               10000 R 
                                              latency                        +200   10200 R 
                                              uncertainty                    -100   10100 R 
--------------------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Timing slack :    9314ps 
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

            Pin                      Type       Fanout Load Slew Delay Arrival   
                                                       (fF) (ps)  (ps)   (ps)    
---------------------------------------------------------------------------------
(clock clk)                        launch                                    0 R 
                                   latency                        +200     200 R 
cb_parti5546
  m_weight_regs_2_reg[1]/CP                                  100           200 R 
  m_weight_regs_2_reg[1]/Q         DFKCNQD1          2  5.7   66  +282     482 F 
  g2/A1                                                             +0     482   
  g2/ZN                            INR2XD0           1  1.6   54  +102     584 F 
  g6678/A2                                                          +0     584   
  g6678/ZN                         OAI21D2           1  3.1   79   +74     658 R 
  g6674/A1                                                          +0     658   
  g6674/ZN                         AOI21D4           1  2.7   40   +47     705 F 
  g6672/A2                                                          +0     705   
  g6672/ZN                         NR2XD2            2  4.7   49   +55     760 R 
  g6671/A1                                                          +0     760   
  g6671/ZN                         NR2XD3            8  8.0   46   +41     801 F 
  g6668/A1                                                          +0     801   
  g6668/ZN                         CKND2D2           1  1.0   28   +33     833 R 
  g6663/A1                                                          +0     833   
  g6663/ZN                         ND2D1             2  3.1   75   +58     891 F 
cb_parti5546/minus_587_42_Y_sub_556_25_B[2] 
minus_587_42_Y_sub_556_25/B[12] 
  g4922/B1                                                          +0     891   
  g4922/ZN                         IND2D2            3  3.9   45   +54     945 R 
  g4821/A2                                                          +0     945   
  g4821/ZN                         ND2D1             2  2.0   56   +55    1000 F 
  g4783/B2                                                          +0    1000   
  g4783/ZN                         MOAI22D1          2  2.1   68  +112    1112 F 
minus_587_42_Y_sub_556_25/Z[12] 
cb_parti/minus_587_42_Y_sub_556_25_Z[2] 
  g5770/A1                                                          +0    1112   
  g5770/ZN                         CKND2D2           1  1.9   36   +44    1156 R 
  g2/B                                                              +0    1156   
  g2/ZN                            IOA21D2           6  5.1   62   +49    1205 F 
cb_parti/mul_533_16_A[2] 
mul_533_16/A[12] 
  g51160/I                                                          +0    1205   
  g51160/ZN                        INVD1             4  3.1   53   +54    1259 R 
  g50513/A1                                                         +0    1259   
  g50513/ZN                        ND2D1             1  0.9   40   +43    1302 F 
  g50093/A1                                                         +0    1302   
  g50093/ZN                        ND2D1             2  2.0   46   +41    1343 R 
  g49230/A1                                                         +0    1343   
  g49230/ZN                        ND2D1             1  1.4   48   +46    1388 F 
  g48973/A1                                                         +0    1388   
  g48973/ZN                        CKND2D2           4  4.0   54   +47    1436 R 
  g48881/I                                                          +0    1436   
  g48881/ZN                        CKND1             1  1.4   28   +36    1472 F 
  g48151/A1                                                         +0    1472   
  g48151/ZN                        CKND2D2           1  1.5   38   +29    1501 R 
  g48080/A1                                                         +0    1501   
  g48080/ZN                        CKND2D2           2  3.5   44   +40    1541 F 
  g48000/I                                                          +0    1541   
  g48000/ZN                        CKND2             1  1.7   21   +29    1570 R 
  g47718/A1                                                         +0    1570   
  g47718/ZN                        OAI22D2           1  1.7   49   +38    1608 F 
  drc_bufs52024/I                                                   +0    1608   
  drc_bufs52024/ZN                 CKND2             3  2.8   27   +34    1642 R 
  drc_bufs52023/I                                                   +0    1642   
  drc_bufs52023/ZN                 CKND1             2  2.0   33   +31    1673 F 
  g47366/B2                                                         +0    1673   
  g47366/ZN                        MOAI22D1          2  2.0   66  +103    1777 F 
  g47290/B2                                                         +0    1777   
  g47290/ZN                        MOAI22D1          1  1.8   63  +112    1889 F 
  g46985/B                                                          +0    1889   
  g46985/CO                        FA1D1             3  3.8   67  +230    2119 F 
  g46980/A1                                                         +0    2119   
  g46980/ZN                        AOI21D2           2  2.9   83   +69    2188 R 
  g46973/I                                                          +0    2188   
  g46973/ZN                        CKND1             2  2.0   39   +50    2238 F 
  g46970/B2                                                         +0    2238   
  g46970/ZN                        MOAI22D1          1  1.7   62  +102    2340 F 
mul_533_16/Z[14] 
minus_585_9/B[14] 
  g2269/A3                                                          +0    2340   
  g2269/ZN                         NR3D1             2  2.0   80   +90    2430 R 
  g2268/A1                                                          +0    2430   
  g2268/ZN                         INR2XD1           3  3.0   60  +104    2534 R 
  g2331/A1                                                          +0    2534   
  g2331/ZN                         INR2D2            3  3.1   66  +102    2636 R 
  g2330/A1                                                          +0    2636   
  g2330/ZN                         INR2D2            3  3.0   64  +103    2739 R 
  g2259/B1                                                          +0    2739   
  g2259/ZN                         MOAI22D1          1  0.7   58   +93    2833 R 
minus_585_9/Z[18] 
cb_parti5549/minus_585_9_Z[3] 
  g9663/A1                                                          +0    2833   
  g9663/Z                          AO22D0            3  2.4   87  +138    2971 R 
cb_parti5549/inc_add_535_23_3_A[2] 
inc_add_535_23_3/A[2] 
  g722/B1                                                           +0    2971   
  g722/ZN                          IND2D1            3  2.4   64   +66    3037 F 
  g720/I                                                            +0    3037   
  g720/ZN                          CKND1             1  1.9   39   +45    3082 R 
  g719/A2                                                           +0    3082   
  g719/ZN                          CKND2D2           3  2.5   38   +41    3123 F 
  g753/A1                                                           +0    3123   
  g753/ZN                          IND2D2            3  2.2   42   +79    3202 F 
  g752/A1                                                           +0    3202   
  g752/ZN                          IND2D1            3  2.2   61  +102    3305 F 
  g751/A1                                                           +0    3305   
  g751/ZN                          IND2D1            3  2.2   61  +109    3414 F 
  g708/A1                                                           +0    3414   
  g708/ZN                          IND2D1            3  2.7   69  +114    3527 F 
  g750/A1                                                           +0    3527   
  g750/ZN                          IND2D1            3  2.7   69  +116    3643 F 
  g749/A1                                                           +0    3643   
  g749/ZN                          IND2D1            3  2.7   69  +116    3759 F 
  g748/A1                                                           +0    3759   
  g748/ZN                          IND2D1            3  2.7   69  +116    3876 F 
  g747/A1                                                           +0    3876   
  g747/ZN                          IND2D1            3  2.7   70  +116    3992 F 
  g694/A1                                                           +0    3992   
  g694/ZN                          IND2D1            3  2.7   70  +117    4108 F 
  g692/A1                                                           +0    4108   
  g692/ZN                          IND2D1            3  2.2   62  +112    4220 F 
  g690/A1                                                           +0    4220   
  g690/ZN                          IND2D1            3  2.7   69  +114    4334 F 
  g688/A1                                                           +0    4334   
  g688/ZN                          IND2D1            3  2.7   70  +116    4450 F 
  g686/A1                                                           +0    4450   
  g686/ZN                          IND2D1            3  2.7   70  +117    4567 F 
  g684/A1                                                           +0    4567   
  g684/ZN                          IND2D1            3  2.7   70  +117    4684 F 
  g682/A1                                                           +0    4684   
  g682/ZN                          IND2D1            3  2.7   70  +117    4800 F 
  g746/A1                                                           +0    4800   
  g746/ZN                          IND2D1            3  2.7   70  +117    4917 F 
  g677/A1                                                           +0    4917   
  g677/ZN                          IND2D1            3  2.8   71  +118    5034 F 
  g675/I                                                            +0    5034   
  g675/ZN                          CKND1             1  0.9   30   +40    5074 R 
  g674/A1                                                           +0    5074   
  g674/ZN                          CKND2D1           3  2.8   68   +53    5127 F 
  g672/I                                                            +0    5127   
  g672/ZN                          CKND1             1  0.9   29   +39    5166 R 
  g671/A1                                                           +0    5166   
  g671/ZN                          CKND2D1           3  2.8   68   +53    5219 F 
  g669/I                                                            +0    5219   
  g669/ZN                          CKND1             1  0.9   29   +39    5258 R 
  g668/A1                                                           +0    5258   
  g668/ZN                          CKND2D1           3  2.1   57   +46    5304 F 
  g2/A1                                                             +0    5304   
  g2/ZN                            IND2D1            3  2.1   59  +106    5410 F 
  g663/A1                                                           +0    5410   
  g663/ZN                          IND2D1            3  2.6   67  +112    5522 F 
  g661/A1                                                           +0    5522   
  g661/ZN                          IND2D0            3  2.1   96  +127    5649 F 
  g659/A1                                                           +0    5649   
  g659/ZN                          IND2D0            3  2.1   96  +136    5786 F 
  g657/A1                                                           +0    5786   
  g657/ZN                          IND2D0            3  2.1   96  +136    5922 F 
  g655/A1                                                           +0    5922   
  g655/ZN                          IND2D0            3  2.1   96  +136    6059 F 
  g653/A1                                                           +0    6059   
  g653/ZN                          IND2D0            2  2.2   99  +138    6197 F 
  g651/A1                                                           +0    6197   
  g651/ZN                          IND2D0            3  2.1   96  +138    6334 F 
  g649/A1                                                           +0    6334   
  g649/ZN                          IND2D1            3  2.6   67  +124    6459 F 
  g647/A1                                                           +0    6459   
  g647/ZN                          IND2D1            3  2.6   68  +115    6574 F 
  g645/A1                                                           +0    6574   
  g645/ZN                          IND2D1            3  2.6   68  +115    6689 F 
  g643/A1                                                           +0    6689   
  g643/ZN                          IND2D1            3  2.6   68  +115    6804 F 
  g641/A1                                                           +0    6804   
  g641/ZN                          IND2D1            3  2.6   68  +115    6919 F 
  g639/A1                                                           +0    6919   
  g639/ZN                          IND2D1            3  2.6   68  +115    7034 F 
  g637/A1                                                           +0    7034   
  g637/ZN                          IND2D1            3  2.6   68  +115    7149 F 
  g635/A1                                                           +0    7149   
  g635/ZN                          IND2D1            3  2.6   68  +115    7264 F 
  g633/A1                                                           +0    7264   
  g633/ZN                          IND2D1            3  2.6   68  +115    7379 F 
  g631/A1                                                           +0    7379   
  g631/ZN                          IND2D1            3  2.6   68  +115    7494 F 
  g629/A1                                                           +0    7494   
  g629/ZN                          IND2D1            3  2.6   68  +115    7609 F 
  g627/A1                                                           +0    7609   
  g627/ZN                          IND2D1            3  2.6   68  +115    7724 F 
  g625/A1                                                           +0    7724   
  g625/ZN                          IND2D1            3  2.6   68  +115    7839 F 
  g623/A1                                                           +0    7839   
  g623/ZN                          IND2D1            3  2.6   68  +115    7954 F 
  g621/A1                                                           +0    7954   
  g621/ZN                          IND2D0            2  1.9   90  +124    8077 F 
  g619/B1                                                           +0    8077   
  g619/ZN                          MOAI22D1          2  1.3   55  +111    8188 F 
inc_add_535_23_3/Z[47] 
cb_seqi/inc_add_535_23_3_Z[47] 
  g8953/A1                                                          +0    8188   
  g8953/Z                          AO21D0            2  1.3   55  +127    8315 F 
  g8934/A4                                                          +0    8315   
  g8934/Z                          OR4D0             1  0.7   76  +215    8530 F 
  g8927/A4                                                          +0    8530   
  g8927/Z                          OR4D0             1  0.7   76  +220    8750 F 
  g8919/A4                                                          +0    8750   
  g8919/Z                          OR4D0             1  0.7   76  +220    8970 F 
  g8916/A4                                                          +0    8970   
  g8916/Z                          OR4D0             1  1.1   84  +229    9199 F 
  g8910/A1                                                          +0    9199   
  g8910/ZN                         NR4D1             1  0.9   74   +62    9261 R 
  g9077/B1                                                          +0    9261   
  g9077/ZN                         INR2D1            2  1.5   34   +40    9302 F 
  g8905/A2                                                          +0    9302   
  g8905/ZN                         NR2XD0            1  1.0   52   +51    9352 R 
  g2/A1                                                             +0    9352   
  g2/ZN                            ND2D1             2  3.4   80   +67    9419 F 
  drc_bufs9074/I                                                    +0    9419   
  drc_bufs9074/ZN                  CKND2            16 13.4   94   +82    9502 R 
  g8888/A2                                                          +0    9502   
  g8888/ZN                         CKND2D0           1  1.0   60   +70    9572 F 
  g8827/C                                                           +0    9572   
  g8827/ZN                         OAI211D1          1  0.9   75   +55    9627 R 
  m_neg_partial_sum_reg[1]/D  <<<  DFKCNQD2                         +0    9627   
  m_neg_partial_sum_reg[1]/CP      setup                     100  +164    9792 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                        capture                               10000 R 
                                   latency                        +200   10200 R 
                                   uncertainty                    -100   10100 R 
---------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Timing slack :     308ps 
Start-point  : cb_parti5546/m_weight_regs_2_reg[1]/CP
End-point    : cb_seqi/m_neg_partial_sum_reg[1]/D

 
 
Global incremental optimization status
======================================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_incr               19629        0 

             Cost Group            Target    Slack    Diff.    Clock
--------------------------------------------------------------------
    cg_enable_group_clk               193     9314             10000 
                    clk               192      308             10000 


Scan mapping status report
==========================
    Scan mapping: converting flip-flops that pass TDRC.
    Scan mapping: bypassed.  You have to either 1) set attribute 'dft_scan_map_mode' to 'tdrc_pass' and run 'check_dft_rules' or 2) set attribute 'dft_scan_map_mode' to 'force_all'.

    Scan mapping bypassed because no TDRC data is available: either command 'check_dft_rules' has not been run or TDRC data has been subsequently invalidated.
          Performing post-mapping optimization ...

Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'minus_587_42_Y_sub_556_25' in module 'mkPE32' would be automatically ungrouped.
        : Hierarchical instances can be automatically ungrouped to allow for better area or timing optimization. You can control auto ungrouping using the root-level attribute 'auto_ungroup'. You can skip individual instances or modules using the attribute 'ungroup_ok'.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'minus_576_9' in module 'mkPE32' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'minus_590_31' in module 'mkPE32' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'add_559_25_Y_add_539_23_Y_add_434_25_Y_add_436_25' in module 'mkPE32' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'minus_585_9' in module 'mkPE32' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'minus_581_31' in module 'mkPE32' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'inc_add_535_23_3' in module 'mkPE32' would be automatically ungrouped.
          There are 7 hierarchical instances automatically ungrouped.
        Applying wireload models.
        Computing net loads.
 Doing ConstProp on design:mkPE32 ... 

Info    : One or more cost groups were automatically created for clock gate enable paths. [POPT-96]
    Automatically cost grouped 4 clock gate paths.
  Decloning clock-gating logic from design:mkPE32
Clock-gating declone status
===========================
Total number of clock-gating instances before: 4
Total number of clock-gating instances after : 4
 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - - - DRC Totals - - - -
                           Total  Weighted      Neg      Max       Max     Max  
Operation                   Area   Slacks      Slack    Trans      Cap   Fanout 
-------------------------------------------------------------------------------
 init_delay                19613        0         0      2953        0        4

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
       crit_upsz         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00

 
Local TNS optimization status
=============================
                                   Group   
                                  Tot Wrst     Total - - - - DRC Totals - - - -
                           Total  Weighted      Neg      Max       Max     Max  
Operation                   Area   Slacks      Slack    Trans      Cap   Fanout 
-------------------------------------------------------------------------------
 init_tns                  19613        0         0      2953        0        4

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00

##>======== Cadence Confidential (Mapping-Logical) ========
##>Main Thread Summary:
##>--------------------------------------------------------
##>STEP               Elapsed     Insts      Area    Memory
##>--------------------------------------------------------
##>M:Initial                0     13479     45034       406
##>M:Launch ST              0         -         -         -
##>M:Distributed            0         -         -         -
##>M:Cleanup                0      6612     19612       497
##>M:MBCI                   0      6612     19612       497
##>M:Misc                 139
##>--------------------------------------------------------
##>Total Elapsed          139
##>========================================================
  Setting attribute of root '/': 'pbs_stage_start_elapsed_time' = 177
  Setting attribute of root '/': 'pbs_stage_start_st_time' = 177
Info    : Done mapping. [SYNTH-5]
        : Done mapping 'mkPE32'.
        Applying wireload models.
        Computing net loads.
     flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:           184            140           -0.0 ps          313.2 ps  syn_map
report area > $REPORTS_PATH/area.rpt
report timing > $REPORTS_PATH/timing.rpt
report power > $REPORTS_PATH/power.rpt
Warning : Clock period mismatch between synthesis(SDC) and simulation(VCD/TCF/SAIF) values. [RPT-13]
        : Clock(clock:mkPE32/clk) period mismatch between SDC(10.0 ns) and asserted(9.642876084220878 ns) values.
        : Synthesis clock period (derived from SDC) does not match with asserted data from VCD/TCF/SAIF. User can scale simulation frequency using -scale option of read_vcd/read_tcf/read_saif commands.
Info    : Time taken to report power. [RPT-7]
        : 1.00 cpu seconds
report clock_gating > $REPORTS_PATH/clockgating.rpt
report gates > $REPORTS_PATH/gates.rpt
report gates -power > $REPORTS_PATH/gates_power.rpt
report datapath > $REPORTS_PATH/datapath.rpt
Beginning report datapath command
Warning : The filename, column and line number information will not be available in the report. [RPT_DP-100]
        : The attribute for getting HDL filename and line number is not set.
        : You must set the 'hdl_track_filename_row_col' attribute to 'true' (before elaborate) to enable filename, column, and line number tracking in the datapath report.
report messages > $REPORTS_PATH/messages.rpt
report qor > $REPORTS_PATH/qor.rpt
write_design -basename ${OUTPUTS_PATH}/${design}_syn
Exporting design data for 'mkPE32' to build/tsmc65lp/test_run/out/mkPE32_syn...
Info    : Generating design database. [PHYS-90]
        : Writing netlist: build/tsmc65lp/test_run/out/mkPE32_syn.v
        : The database contains all the files required to restore the design in the specified application.
Info    : Generating design database. [PHYS-90]
        : Writing Metrics file: build/tsmc65lp/test_run/out/mkPE32_syn.metrics.json
Info    : Generating design database. [PHYS-90]
        : Writing write_script: build/tsmc65lp/test_run/out/mkPE32_syn.g
Info    : Generating design database. [PHYS-90]
        : Writing TCF: build/tsmc65lp/test_run/out/mkPE32_syn.tcf
Info    : Generating design database. [PHYS-90]
        : Writing multi-mode multi-corner file: build/tsmc65lp/test_run/out/mkPE32_syn.mmmc.tcl
Finished SDC export (command execution time mm:ss (real) = 00:00).
Info: file build/tsmc65lp/test_run/out//mkPE32_syn.default_emulate_constraint_mode.sdc has been written
File build/tsmc65lp/test_run/out//mkPE32_syn.mmmc.tcl has been written.
Info    : Design has no library or power domains. [INVS_MSV-301]
        : No power domains will be created for Innovus.
Info    : Generating design database. [PHYS-90]
        : Writing INIT setup file for Genus: build/tsmc65lp/test_run/out/mkPE32_syn.genus_init.tcl
Info    : Generating design database. [PHYS-90]
        : Writing Genus(TM) Synthesis Solution setup file: build/tsmc65lp/test_run/out/mkPE32_syn.genus_setup.tcl
** To load the database source build/tsmc65lp/test_run/out/mkPE32_syn.genus_setup.tcl in an Genus(TM) Synthesis Solution session.
Finished exporting design data for 'mkPE32' (command execution time mm:ss cpu = 00:01, real = 00:01).
.
write_hdl  > ${OUTPUTS_PATH}/${design}_syn.v
write_sdc > ${OUTPUTS_PATH}/${design}_syn.sdc
Finished SDC export (command execution time mm:ss (real) = 00:00).
write_sdf -edges check_edge > ${OUTPUTS_PATH}/${design}_syn.sdf
Warning : Default value for an option has changed in this release. [WSDF-104]
        : Default value for -setuphold has changed from split to merge_always. Specify '-setuphold split' to preserve the behavior of the previous release.
        : Specify the option explicitly.
Warning : Default value for an option has changed in this release. [WSDF-104]
        : Default value for -recrem has changed from split to merge_always. Specify '-recrem split' to preserve the behavior of the previous release.
write_db ${design} -to_file ${OUTPUTS_PATH}/${design}_syn.db
Finished exporting design database to file 'build/tsmc65lp/test_run/out/mkPE32_syn.db' for 'mkPE32' (command execution time mm:ss cpu = 00:00, real = 00:01).
file copy [get_db stdout_log] ${LOG_PATH}/
