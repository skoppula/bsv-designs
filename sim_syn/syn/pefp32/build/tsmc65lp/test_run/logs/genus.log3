Cadence Genus(TM) Synthesis Solution.
Copyright 2016 Cadence Design Systems, Inc. All rights reserved worldwide.
Cadence and the Cadence logo are registered trademarks and Genus is a trademark
of Cadence Design Systems, Inc. in the United States and other countries.

Version: 16.22-s033_1, built Wed Apr 05 2017
Options: -files setup_design.tcl 
Date:    Mon Dec 11 16:40:30 2017
Host:    ellora (x86_64 w/Linux 3.10.0-693.5.2.el7.x86_64) (4cores*16cpus*Intel(R) Xeon(R) CPU E5-2623 v3 @ 3.00GHz 10240KB) (32866740KB)
OS:      Red Hat Enterprise Linux Server release 7.4 (Maipo)

Checking out license: Genus_Synthesis

Loading tool scripts...
Finished loading tool scripts (7 seconds elapsed).

Sourcing setup_design.tcl...
  Setting attribute of root '/': 'source_verbose_info' = false
  Setting attribute of root '/': 'source_verbose' = true
set design mkPE16
set design_folder pe16
set rtl_top_inst dut
set libname tsmc65lp
set do_power_opt true
set do_clock_gating true
set do_adv_opt false
set save false
set basename_prefix "100M_32"
set backup_input false
set project_base /homes/mrhamid/bsv-designs/sim_syn
set use_tcf false
set use_vcd false
set use_saif true
set activity_filename $project_base/bsv/$design_folder/${design_folder}.saif
set rtl_path [ list \
    ${project_base}/bsv/$design_folder/vlog \
    $::env(BLUESPECDIR)/Verilog \
]
set rtl_files [ list \
    mkPE16.v \
    FIFOL1.v \
]
set sdc_file constraints_${libname}.sdc
set_db script_search_path [ concat . ${project_base}/syn/common ]
  Setting attribute of root '/': 'script_search_path' = . /homes/mrhamid/bsv-designs/sim_syn/syn/common
include run_rc.tcl
Sourcing '/homes/mrhamid/bsv-designs/sim_syn/syn/common/run_rc.tcl' (Mon Dec 11 16:40:37 -0500 2017)...
set DATE [clock format [clock seconds] -format "%b%d_%H%M"]
if {!$save} {
  set BASE_PATH build/${libname}/test_run
  file delete -force $BASE_PATH
} else {
  if {$basename_prefix != ""} {
    set BASE_PATH build/${libname}/${basename_prefix}_${DATE}
  } else {
    set BASE_PATH build/${libname}/${DATE}
  }
}
if {$backup_input} {
  set INPUTS_PATH ${BASE_PATH}/in
  file mkdir ${INPUTS_PATH}
}
set OUTPUTS_PATH ${BASE_PATH}/out
set REPORTS_PATH ${BASE_PATH}/rpt
set LOG_PATH ${BASE_PATH}/logs
set VERIFICATION_PATH ${BASE_PATH}/fv
file mkdir ${OUTPUTS_PATH}
file mkdir ${REPORTS_PATH}
file mkdir ${LOG_PATH}
file mkdir ${VERIFICATION_PATH}
file delete current
file link -symbolic current $BASE_PATH
set_db hdl_error_on_blackbox true
  Setting attribute of root '/': 'hdl_error_on_blackbox' = true
set_db information_level 9
  Setting attribute of root '/': 'information_level' = 9
set_db syn_generic_effort high
  Setting attribute of root '/': 'syn_generic_effort' = high
set_db syn_map_effort high
  Setting attribute of root '/': 'syn_map_effort' = high
if {$do_power_opt} {
  if {$do_clock_gating} {
    set_db lp_insert_clock_gating true
  }
  # set_db lp_insert_operand_isolation true
  set_db lp_power_analysis_effort high
  # set_db hdl_track_filename_row_col true
}
  Setting attribute of root '/': 'lp_insert_clock_gating' = true
Info    : Resetting power analysis results. [PA-7]
        : Power analysis effort level changed from 'medium' to 'high'.
        : All computed switching activities are removed.
  Setting attribute of root '/': 'lp_power_analysis_effort' = high
set_db init_hdl_search_path [ concat $rtl_path ]
  Setting attribute of root '/': 'init_hdl_search_path' = /homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog /u/anantha/workspace3/share/programs/Bluespec/2016.07.beta1/lib/Verilog
read_hdl -sv $rtl_files
            Reading Verilog file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'
            Reading Verilog file '/u/anantha/workspace3/share/programs/Bluespec/2016.07.beta1/lib/Verilog/FIFOL1.v'
include technology.tcl
Sourcing '/homes/mrhamid/bsv-designs/sim_syn/syn/common/technology.tcl' (Mon Dec 11 16:40:37 -0500 2017)...
if {$libname == "tsmc40lp"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CRN40LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn40lpbwp tcbn40lpbwphvt ]
    set stdcell_ver 200a
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
} elseif {$libname == "tsmc45gs"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CLN45GS/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn45gsbwp12t tcbn45gsbwp12thvt ]
    set stdcell_ver 120c
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
} elseif {$libname == "tsmc65lp"} {
    #######################################################
    ## Standard Cells
    #######################################################

    set lib_base /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM
    set stdcell_list [ list tcbn65lp ]
    set stdcell_ver 200a
    set stdcell_path ""
    foreach lib $stdcell_list {
        set stdcell_path [concat $stdcell_path $lib_base/${lib}_${stdcell_ver}]
    }

    set fast_corner bc
    set leak_corner mlg
    set slow_corner wc
    set typical_corner tc

    if {[info exists corner]} {
        set pvt [set ${corner}_corner]
    } else {
        set pvt $slow_corner
    }

    #build list of .lib file names
    set target_library  ""
    foreach lib $stdcell_list {
        set target_library [concat $target_library ${lib}${pvt}.lib]
    }

    #######################################################
    ## SRAM
    #######################################################

    set_db lib_search_path $stdcell_path
    set_db library $target_library
}
  Setting attribute of root '/': 'lib_search_path' = /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a
            Reading file '/u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib'
    Loading library tcbn65lpwc.lib
Info    : An unsupported construct was detected in this library. [LBR-40]
        : Unknown Liberty attribute 'library_features' encountered. Ignoring (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib, Line 69)
        : Check to see if this construct is really needed for synthesis. Many liberty constructs are not actually required.
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN2XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN3XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D2' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D4' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4D8' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AN4XD1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AO211D0' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Could not find an attribute in the library. [LBR-436]
        : Attribute 'max_fanout' on 'output/inout' pin 'Z' of cell 'AO211D1' is not defined in the library. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib)
Info    : Missing a function attribute in the output pin definition. [LBR-518]
        : Functionality is missing at pin 'Z' for the cell 'BHD'. (File /u/tsmc/CRN65LP/TSMCHOME/digital/Front_End/timing_power_noise/NLDM/tcbn65lp_200a/tcbn65lpwc.lib, Line 272424)

  Message Summary for Library tcbn65lpwc.lib:
  *******************************************
  Could not find an attribute in the library. [LBR-436]: 989
  Missing a function attribute in the output pin definition. [LBR-518]: 1
  An unsupported construct was detected in this library. [LBR-40]: 1
  *******************************************
 
Info    : Created nominal operating condition. [LBR-412]
        : Operating condition '_nominal_' was created for the PVT values (1.000000, 1.080000, 125.000000) in library 'tcbn65lpwc.lib'.
        : The nominal operating condition represents either the nominal PVT values if specified in the library source, or the default PVT values (1.0, 1.0, 1.0).
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'ANTENNA' must have an output pin.
        : Add the missing output pin(s), then reload the library. Otherwise, the library cell will be marked as unusable and as timing model.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'ANTENNA' must have an output pin.
Info    : An output library pin lacks a function attribute. [LBR-41]
        : Output pin 'BHD/Z' has no function.
        : If the remainder of this library cell's semantic checks are successful, it will be considered as a timing-model (because one of its outputs does not have a valid function.
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLHQD20'
        : To use the cell in clock gating, Set cell attribute 'dont_use' false in the library.
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLHQD24'
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLNQD20'
Warning : Unusable clock gating integrated cell. [LBR-101]
        : Clock gating integrated cell name: 'CKLNQD24'
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP16' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP16' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP32' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP32' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP4' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP4' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP64' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP64' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP8' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'DCAP8' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP10' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP10' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP2' must have an output pin.
Warning : Library cell has no output pins defined. [LBR-9]
        : Library cell 'GDCAP2' must have an output pin.
  Setting attribute of root '/': 'library' = tcbn65lpwc.lib
elaborate $design
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD1'.
        : Setting the 'timing_sense' to non_unate.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'X2' in libcell 'BENCD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'X2' in libcell 'BENCD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'X2' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M1' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'M0' and 'PP' in libcell 'BMLD4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D0'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D1'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D2'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'S' and 'Z' in libcell 'CKMUX2D4'.
Info    : Both 'pos_unate' and 'neg_unate' timing_sense arcs have been processed. [LBR-162]
        : Non_unate 'timing_sense' inferred between pin 'A2' and 'Z' in libcell 'CKXOR2D0'.
  Library has 441 usable logic and 280 usable sequential lib-cells.
Info    : Found unusable library cells. [LBR-415]
        : Library: 'tcbn65lpwc.lib', Total cells: 816, Unusable cells: 77.
	List of unusable cells: 'ANTENNA BHD BUFFD20 BUFFD24 BUFTD20 BUFTD24 CKBD20 CKBD24 CKLHQD20 CKLHQD24 CKLNQD20 CKLNQD24 CKND20 CKND24 DCAP DCAP16 DCAP32 DCAP4 DCAP64 DCAP8 GAN2D1 GAN2D2 GAOI21D1 GAOI21D2 GAOI22D1 GBUFFD1 GBUFFD2 GBUFFD3 GBUFFD4 GBUFFD8 GDCAP GDCAP10 GDCAP2 GDCAP3 GDCAP4 GDFCNQD1 GDFQD1 GFILL GFILL10 GFILL2 GFILL3 GFILL4 GINVD1 GINVD2 GINVD3 GINVD4 GINVD8 GMUX2D1 GMUX2D2 GMUX2ND1 GMUX2ND2 GND2D1 GND2D2 GND2D3 GND2D4 GND3D1 GND3D2 GNR2D1 GNR2D2 GNR3D1 GNR3D2 GOAI21D1 GOAI21D2 GOR2D1 GOR2D2 GSDFCNQD1 GTIEH GTIEL GXNR2D1 GXNR2D2 GXOR2D1 GXOR2D2 INVD20 INVD24 OD25DCAP16 OD25DCAP32 OD25DCAP64 .'
        : For more information, refer to 'Cells Identified as Unusable' in the 'User Guide'. The reason why a cell is considered unusable is stored in the 'unusable_reason' libcell attribute.
Info    : Elaborating Design. [ELAB-1]
        : Elaborating top-level block 'mkPE16' from file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Bitwidth mismatch in assignment. [CDFG-372]
        : Width of left hand side 'IF_SEXT_multiply_constants_neg_constant_BITS_7_ETC___d118' [32] doesn't match the width of right hand side [16] in assignment in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 535.
Info    : Bitwidth mismatch in assignment. [CDFG-372]
        : Width of left hand side 'IF_SEXT_multiply_constants_pos_constant_BITS_7_ETC___d74' [32] doesn't match the width of right hand side [16] in assignment in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 539.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_get_pos_partial_sum' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 137.
        : The value of the input port is not used within the design.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_get_neg_partial_sum' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 142.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_read_weights' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 147.
Info    : Unused module input port. [CDFG-500]
        : Input port 'EN_is_ready' is not used in module 'mkPE16' in file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' on line 152.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/equal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=1 B=1 Z=1) at line 645 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=1 B=1 Z=1) at line 645 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/equal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 558 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 558 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/mult_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 535 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 535 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/mult_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/mult_unsigned/medium' (priority 1), 'hdl_implementation:GB/mult_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 587 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 587 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 537 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 537 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 400 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 400 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 405 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 405 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 561 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 561 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/mult_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 539 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'MULT_UNS_OP' (pin widths: A=16 B=16 Z=32) at line 539 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/mult_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/mult_unsigned/medium' (priority 1), 'hdl_implementation:GB/mult_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 578 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=32 Z=32) at line 578 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 541 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=8 Z=24) at line 541 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 422 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 422 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 427 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=8 B=1 Z=1) at line 427 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 434 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 434 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 436 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) at line 436 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=4 B=1 Z=4) at line 437 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=4 B=1 Z=4) at line 437 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 336 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 336 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 340 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 340 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 350 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 350 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/nequal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 354 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'NE_UNS_OP' (pin widths: A=6 B=1 Z=1) at line 354 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/nequal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/equal_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=4 B=4 Z=1) at line 376 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'EQ_UNS_OP' (pin widths: A=4 B=4 Z=1) at line 376 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/equal_unsigned/very_fast' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 589 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 589 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 592 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 592 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 580 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 580 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 583 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v'.
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=1 B=16 Z=16) at line 583 in the file '/homes/mrhamid/bsv-designs/sim_syn/bsv/pe16/vlog/mkPE16.v' will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : Done Elaborating Design. [ELAB-3]
        : Done elaborating 'mkPE16'.
Info: Checking for source rtl...
Info: Check completed for source rtl...
        Applying wireload models.
        Computing net loads.
UM:  flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:            12             13                                      elaborate
check_design -unresolved
  Checking the design.

 	 Check Design Report
	 -------------------- 

  Unresolved References & Empty Modules
  ------------------------------------- 
No unresolved references in design 'mkPE16'

No empty modules in design 'mkPE16'

  Done Checking the design.
set_db current_design .verification_directory $VERIFICATION_PATH
  Setting attribute of design 'mkPE16': 'verification_directory' = build/tsmc65lp/test_run/fv
if {$do_adv_opt} {
  set_db current_design .retime true
}
if {[info exists wireload_model]} {
    set_db current_design .force_wireload $wireload_model
}
if {$do_power_opt && $do_clock_gating} {
  set_db current_design .lp_clock_gating_extract_common_enable true
}
  Setting attribute of design 'mkPE16': 'lp_clock_gating_extract_common_enable' = true
read_sdc $sdc_file
            Reading file '/homes/mrhamid/bsv-designs/sim_syn/syn/pe16/constraints_tsmc65lp.sdc'
Statistics for commands executed by read_sdc:
 "all_inputs"               - successful      3 , failed      0 (runtime  0.00)
 "all_outputs"              - successful      2 , failed      0 (runtime  0.00)
 "create_clock"             - successful      1 , failed      0 (runtime  0.00)
 "current_design"           - successful      1 , failed      0 (runtime  0.00)
 "get_clocks"               - successful      3 , failed      0 (runtime  0.00)
 "get_ports"                - successful      1 , failed      0 (runtime  0.00)
 "remove_from_collection"   - successful      1 , failed      0 (runtime  0.00)
 "set_clock_latency"        - successful      1 , failed      0 (runtime  0.00)
 "set_clock_transition"     - successful      1 , failed      0 (runtime  0.00)
 "set_clock_uncertainty"    - successful      1 , failed      0 (runtime  0.00)
 "set_driving_cell"         - successful      1 , failed      0 (runtime  0.00)
 "set_input_delay"          - successful      2 , failed      0 (runtime  0.00)
 "set_load"                 - successful      1 , failed      0 (runtime  0.00)
 "set_load_unit"            - successful      1 , failed      0 (runtime  0.00)
 "set_max_fanout"           - successful      2 , failed      0 (runtime  0.00)
 "set_max_transition"       - successful      1 , failed      0 (runtime  0.00)
 "set_output_delay"         - successful      2 , failed      0 (runtime  0.00)
 "set_time_unit"            - successful      1 , failed      0 (runtime  0.00)
Total runtime 0
report timing -lint
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
============================================================
  Generated by:           Genus(TM) Synthesis Solution 16.22-s033_1
  Generated on:           Dec 11 2017  04:40:42 pm
  Module:                 mkPE16
  Technology library:     tcbn65lpwc 200
  Operating conditions:   WCCOM (balanced_tree)
  Wireload mode:          segmented
  Area mode:              timing library
============================================================


Lint summary
 Unconnected/logic driven clocks                                  0
 Sequential data pins driven by a clock signal                    0
 Sequential clock pins without clock waveform                     0
 Sequential clock pins with multiple clock waveforms              0
 Generated clocks without clock waveform                          0
 Generated clocks with incompatible options                       0
 Generated clocks with multi-master clock                         0
 Paths constrained with different clocks                          0
 Loop-breaking cells for combinational feedback                   0
 Nets with multiple drivers                                       0
 Timing exceptions with no effect                                 0
 Suspicious multi_cycle exceptions                                0
 Pins/ports with conflicting case constants                       0
 Inputs without clocked external delays                           0
 Outputs without clocked external delays                          0
 Inputs without external driver/transition                        0
 Outputs without external load                                    0
 Exceptions with invalid timing start-/endpoints                  0

                                                  Total:          0
if {$do_power_opt} {
  #set_db max_leakage_power 0.0 "/designs/$design"
  #set_db lp_power_optimization_weight <value from 0 to 1> "/designs/$DESIGN"

  set_db current_design .max_dynamic_power 0.0

  if {$use_tcf} {
    read_tcf -tcf_instance $rtl_top_inst $activity_filename
  }

  if {$use_vcd} {
    read_vcd -static -vcd_scope $rtl_top_inst $activity_filename
  }

  if {$use_saif} {
    read_saif -instance $rtl_top_inst $activity_filename
  }
}
  Setting attribute of design 'mkPE16': 'max_dynamic_power' = 0.0
10.0 % done 
20.0 % done 
30.0 % done 
40.0 % done 
50.0 % done 
60.0 % done 
70.0 % done 
80.0 % done 
90.0 % done 
100.0 % done 
100.0 % done
Nets/ports asserted in SAIF file : 2065
Total Nets/ports in SAIF file    : 8755
-------------------------------------------------------
Asserted Primary inputs in design              : 57 (100.00%)
Total connected primary inputs in design       : 57 (100.00%)
-------------------------------------------------------
Asserted sequential outputs                    : 52 (100.00%)
Total connected sequential outputs             : 52 (100.00%)
-------------------------------------------------------
Total nets in design                 : 8403 (100.00%)
Nets asserted                        : 2049 (24.38%)
Clock nets                           : 0 (0.00%)
Constant nets                        : 126 (1.50%)
Nets with no assertions              : 6354 (75.62%)
-------------------------------------------------------
Time taken to read_saif: 2.00 cpu seconds
syn_generic
Info    : Deleting instances not driving any primary outputs. [GLO-34]
        : Deleting 11 hierarchical instances. 
Following instances are deleted as they do not drive any primary output:
'mux_m_neg_partial_sum_645_15', 'mux_m_pos_partial_sum_645_15', 
'mux_m_step_645_15', 'mux_m_weight_regs_0_645_15', 
'mux_m_weight_regs_1_645_15', 'mux_m_weight_regs_2_645_15', 
'mux_m_weight_regs_3_645_15', 'mux_m_weight_regs_4_645_15', 
'mux_m_weight_regs_5_645_15', 'mux_m_weight_regs_6_645_15', 
'mux_m_weight_regs_7_645_15'.
        : Optimizations such as constant propagation or redundancy removal could change the connections so a hierarchical instance does not drive any primary outputs anymore. To see the list of deleted hierarchical instances, set the 'information_level' attribute to 2 or above. If message is truncated set message attribute 'truncate' to false to see the complete list. To prevent this optimization, set the 'delete_unloaded_insts' root/subdesign attribute to 'false' or 'preserve' instance attribute to 'true'.
Info    : Synthesizing. [SYNTH-1]
        : Synthesizing 'mkPE16' to generic gates using 'high' effort.
        Applying wireload models.
        Computing net loads.
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed generic optimization to kick in.
Info    : Optimizing RTL. [RTLOPT-1]
        : Optimizing RTL in 'mkPE16' using 'high' effort.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
      Timing sub_unsigned_974...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/sub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'SUB_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/sub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/sub_unsigned/medium' (priority 1), 'hdl_implementation:GB/sub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=24 B=16 AS=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=24 B=16 AS=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_1027...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
      Timing add_unsigned_1030...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_1064...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
      Timing addsub_unsigned_1082...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=24 B=16 Z=24) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=32 AS=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/addsub_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADDSUB_UNS_OP' (pin widths: A=16 B=16 AS=1 Z=16) will be considered in the following order: {'hdl_implementation:GB/addsub_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/addsub_unsigned/medium' (priority 1), 'hdl_implementation:GB/addsub_unsigned/slow' (priority 1)}
Info    : Accepted resource sharing opportunity. [RTLOPT-30]
        : Merged the following sets of instances in design 'mkPE16':
	  (add_561_25, add_434_25, add_436_25)

Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=16 B=16 Z=16) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE16_csa_cluster' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=4 CI=1 Z=4).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=4 CI=1 Z=4) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 1 of 1 in module 'mkPE16_csa_cluster'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Used configuration 1, resulting in 1 carry-save group in module 'mkPE16_csa_cluster'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE16_csa_cluster_443' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
      Timing csa_tree_6032_6064...
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
      Timing add_unsigned_carry...
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 1 of 2 in module 'mkPE16_csa_cluster_443'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=36 B=36 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=36 B=36 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 2 of 2 in module 'mkPE16_csa_cluster_443'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Used configuration 2, resulting in 3 carry-save groups in module 'mkPE16_csa_cluster_443'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Grouping carry-save logic. [RTLOPT-19]
        : Grouping carry-save logic in 'mkPE16_csa_cluster_442' using 'medium' effort and 'generic' timing models.
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned_carry/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_CI_OP' (pin widths: A=32 B=32 CI=1 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned_carry/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/medium' (priority 1), 'hdl_implementation:GB/add_unsigned_carry/slow' (priority 1)}
Info    : Rejected carry-save configuration. [RTLOPT-21]
        : Rejected configuration 1 of 2 in module 'mkPE16_csa_cluster_442'.
                  Configuration number:      1
                  Effort level:              medium
                  Allow CSA over Muxes:      No
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=34 B=34 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=36 B=36 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=36 B=36 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/add_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'ADD_UNS_OP' (pin widths: A=32 B=32 Z=32) will be considered in the following order: {'hdl_implementation:GB/add_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/add_unsigned/medium' (priority 1), 'hdl_implementation:GB/add_unsigned/slow' (priority 1)}
Info    : An implementation was inferred. [CWD-19]
        : The implementation 'hdl_implementation:GB/increment_unsigned/very_fast' was inferred through the binding 'b1' for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24).
Info    : Sorted the set of valid implementations for synthetic operator. [CWD-36]
        : The implementations for the call to synthetic operator 'INCREMENT_UNS_CI_OP' (pin widths: A=24 CI=1 Z=24) will be considered in the following order: {'hdl_implementation:GB/increment_unsigned/very_fast' (priority 1), 'hdl_implementation:GB/increment_unsigned/medium' (priority 1), 'hdl_implementation:GB/increment_unsigned/slow' (priority 1)}
Info    : Accepted carry-save configuration. [RTLOPT-20]
        : Accepted configuration 2 of 2 in module 'mkPE16_csa_cluster_442'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
Info    : Done grouping carry-save logic. [RTLOPT-23]
        : Used configuration 2, resulting in 3 carry-save groups in module 'mkPE16_csa_cluster_442'.
                  Configuration number:      2
                  Effort level:              medium
                  Allow CSA over Muxes:      Yes
                  Allow CSA over Inverter:   No
                  Allow Complex CSA:         No
                  Allow CSA over Truncation: No
                  Bridge size threshold:     6
                  Connection size threshold: 4
      Timing increment_unsigned_6651...
      Timing sub_unsigned_6652...
      Timing sub_unsigned_6653...
Info    : Done optimizing RTL. [RTLOPT-2]
        : Done optimizing RTL in 'mkPE16'.
      Removing temporary intermediate hierarchies under mkPE16
              Optimizing muxes in design 'mkPE16'.
Info    : Gating clocks. [SYNTH-13]
        : Gating clocks in 'mkPE16'.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
      Gating clocks in mkPE16
        Preparing the circuit
          Pruning unused logic
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'inc_add_437_45_1' of datapath component 'increment_unsigned_1'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'csa_tree_minus_578_1301' of datapath component 'csa_tree_357_393'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'csa_tree_minus_587_1300' of datapath component 'csa_tree_357_393'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_583_31' of datapath component 'sub_unsigned_382_481'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_592_31' of datapath component 'sub_unsigned_382_481'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_589_41' of datapath component 'sub_unsigned_382'.
Info    : A datapath component has been ungrouped. [GB-6]
        : The instance 'minus_580_41' of datapath component 'sub_unsigned_382'.
Inserting clock-gating logic .....
        
        New clock gate fanout statistics
        =================================================
        Fanout Size           Num CGs     Total FFs 
        -------------------------------------------------
        4 to 15                   1       4
        16 to 63                  3       48
        =================================================

Info    : Could not find any user created clock-gating module. [POPT-12]
        : Looking for Integrated clock-gating cell in library.
Clock Gating Status
===================
Category                                Number    Percentage
------------------------------------------------------------------
Gated flip-flops                        52		100%
Ungated flip-flops
  Cannot map to requested logic         0		  0%
  Enable signal is constant             0		  0%
  Excluded from clock-gating            0		  0%
  User preserved                        0		  0%
  Libcell unusable                      0		  0%
  Timing exception in enable logic      0		  0%
  Register bank width too small         0		  0%
Total flip-flops                        52		100%
Total CG Modules                        4
Info    : One or more cost groups were automatically created for clock gate enable paths. [POPT-96]
        : This feature can be disabled by setting the attribute lp_clock_gating_auto_cost_grouping false.
    Automatically cost grouped 4 clock gate paths.
  Setting attribute of root '/': 'pbs_stage_start_elapsed_time' = 23
  Setting attribute of root '/': 'pbs_stage_start_st_time' = 21
Info    : Done synthesizing. [SYNTH-2]
        : Done synthesizing 'mkPE16' to generic gates.
        Applying wireload models.
        Computing net loads.
     flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:             9             10                                      syn_generic
syn_map
Info    : Mapping. [SYNTH-4]
        : Mapping 'mkPE16' using 'high' effort.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
        Applying wireload models.
        Computing net loads.
Info    : Partition Based Synthesis execution skipped. [PHYS-752]
        : Design size is less than the partition size '100000' for distributed mapping optimization to kick in.
Mapper: Libraries have:
	domain _default_: 441 combo usable cells and 280 sequential usable cells
      Mapping 'mkPE16'...
        Preparing the circuit
          Pruning unused logic
Multi-threaded constant propagation [1|0] ...
          Analyzing hierarchical boundaries
          Propagating constants
        Done preparing the circuit
          Structuring (delay-based) mkPE16...
          Done structuring (delay-based) mkPE16
Multi-threaded Virtual Mapping    (8 threads per ST process, 8 of 16 CPUs usable)
          Structuring (delay-based) cb_oseq...
            Starting partial collapsing (xors only) cb_oseq
            Finished partial collapsing.
            Starting partial collapsing  cb_oseq
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) cb_oseq
        Mapping component cb_oseq...
          Structuring (delay-based) csa_tree_224...
            Starting partial collapsing (xors only) csa_tree_224
            Finished partial collapsing.
            Starting partial collapsing  csa_tree_224
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) csa_tree_224
        Mapping component csa_tree_224...
          Structuring (delay-based) csa_tree_224_475...
            Starting partial collapsing (xors only) csa_tree_224_475
            Finished partial collapsing.
            Starting partial collapsing  csa_tree_224_475
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) csa_tree_224_475
        Mapping component csa_tree_224_475...
          Structuring (delay-based) add_unsigned_229...
            Starting partial collapsing (xors only) add_unsigned_229
            Finished partial collapsing.
            Starting partial collapsing  add_unsigned_229
            Finished partial collapsing.
          Done structuring (delay-based) add_unsigned_229
        Mapping component add_unsigned_229...
          Structuring (delay-based) sub_unsigned...
            Starting partial collapsing (xors only) sub_unsigned
            Finished partial collapsing.
            Starting partial collapsing  sub_unsigned
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) sub_unsigned
        Mapping component sub_unsigned...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_5x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_5x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_15x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_15x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_4x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_4x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_17x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_17x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_19x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_19x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_6x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_6x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_3x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_3x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_13x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_13x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_12x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_12x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_11x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_11x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_33x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_33x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_35x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_35x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_14x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_14x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_39x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_39x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_16x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_16x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_43x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_43x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_18x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_18x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_47x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_47x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_20x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_20x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_21x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_21x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_22x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_22x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_10x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_10x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_27x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_27x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_9x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_9x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_8x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_8x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_25x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_25x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_28x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_28x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_29x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_29x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_30x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_30x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_7x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_7x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_32x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_32x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_24x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_24x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_34x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_34x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_55x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_55x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_36x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_36x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_37x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_37x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_38x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_38x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_23x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_23x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_40x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_40x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_41x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_41x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_42x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_42x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_26x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_26x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_44x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_44x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_45x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_45x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_46x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_46x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_48x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_48x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_49x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_49x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_50x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_50x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_51x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_51x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_52x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_52x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_53x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_53x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_54x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_54x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_59x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_59x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_56x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_56x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_57x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_57x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) logic partition in mkPE16...
            Starting partial collapsing (xors only) mux_ctl_58x
            Finished partial collapsing.
            Starting partial collapsing  mux_ctl_58x
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) logic partition in mkPE16
        Mapping logic partition in mkPE16...
          Structuring (delay-based) bmux_509_2...
            Starting partial collapsing  bmux_509_2
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) bmux_509_2
        Mapping component bmux_509_2...
          Structuring (delay-based) bmux_509_3...
            Starting partial collapsing  bmux_509_3
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) bmux_509_3
        Mapping component bmux_509_3...
          Structuring (delay-based) bmux_509_1...
            Starting partial collapsing  bmux_509_1
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) bmux_509_1
        Mapping component bmux_509_1...
          Structuring (delay-based) bmux_509...
            Starting partial collapsing  bmux_509
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) bmux_509
        Mapping component bmux_509...
          Structuring (delay-based) add_unsigned_470_484...
          Done structuring (delay-based) add_unsigned_470_484
        Mapping component add_unsigned_470_484...
          Structuring (delay-based) add_unsigned_470...
          Done structuring (delay-based) add_unsigned_470
        Mapping component add_unsigned_470...
          Structuring (delay-based) increment_unsigned_507_508...
          Done structuring (delay-based) increment_unsigned_507_508
        Mapping component increment_unsigned_507_508...
          Structuring (delay-based) increment_unsigned_507_508_480...
          Done structuring (delay-based) increment_unsigned_507_508_480
        Mapping component increment_unsigned_507_508_480...
          Structuring (delay-based) cb_seq...
            Starting partial collapsing  cb_seq
            Finished partial collapsing.
            Starting redundancy-removal...
            Finished redundancy-removal...
            Starting redundancy-removal...
            Finished redundancy-removal...
          Done structuring (delay-based) cb_seq
        Mapping component cb_seq...
 
Global mapping target info
==========================
Cost Group 'clk' target slack:   107 ps
Target path end-point (Pin: m_neg_partial_sum_reg[13]/d)

             Pin                          Type          Fanout Load Arrival   
                                                               (fF)   (ps)    
------------------------------------------------------------------------------
(clock clk)                     <<<  launch                               0 R 
                                     latency                                  
cb_seqi
  m_neg_partial_sum_reg[1]/clk                                                
  m_neg_partial_sum_reg[1]/q    (u)  unmapped_d_flop         5 11.5           
cb_seqi/g3553_in_1 
cb_oseqi/cb_seqi_g3553_in_1 
  g6155/in_1                                                                  
  g6155/z                       (u)  unmapped_or2            2  4.6           
  g6120/in_0                                                                  
  g6120/z                       (u)  unmapped_or2            2  4.6           
  g6060/in_0                                                                  
  g6060/z                       (u)  unmapped_or2            2  4.6           
  g6046/in_0                                                                  
  g6046/z                       (u)  unmapped_or2            2  4.6           
  g6025/in_0                                                                  
  g6025/z                       (u)  unmapped_or2            2  4.6           
  g5973/in_0                                                                  
  g5973/z                       (u)  unmapped_or2            2  4.6           
  g5364/in_0                                                                  
  g5364/z                       (u)  unmapped_or2            3  6.9           
  g4214/in_1                                                                  
  g4214/z                       (u)  unmapped_or2            2  4.6           
  g4632/in_0                                                                  
  g4632/z                       (u)  unmapped_or2            2  4.6           
  g5539/in_0                                                                  
  g5539/z                       (u)  unmapped_or2            1  2.3           
  g5542/in_0                                                                  
  g5542/z                       (u)  unmapped_nand2          2  4.6           
  g5819/in_0                                                                  
  g5819/z                       (u)  unmapped_or2            1  2.3           
  g5820/in_1                                                                  
  g5820/z                       (u)  unmapped_nand2         24 11.5           
cb_oseqi/csa_tree_mul_535_1298_in_1[10] 
csa_tree_mul_535_1298/in_1[11] 
  g4336/in_0                                                                  
  g4336/z                       (u)  unmapped_complex2       1  2.3           
  g4337/in_1                                                                  
  g4337/z                       (u)  unmapped_nand2          1  2.3           
  g4239/in_0                                                                  
  g4239/z                       (u)  unmapped_complex2       9 20.7           
  g4736/in_0                                                                  
  g4736/z                       (u)  unmapped_complex2       1  2.3           
  g3995/in_1                                                                  
  g3995/z                       (u)  unmapped_nand2          4  9.2           
  g4792/in_0                                                                  
  g4792/z                       (u)  unmapped_complex2       1  2.3           
  g3759/in_0                                                                  
  g3759/z                       (u)  unmapped_nand2          1  2.3           
  g3612/in_0                                                                  
  g3612/z                       (u)  unmapped_nand2          3  6.9           
  g3465/in_0                                                                  
  g3465/z                       (u)  unmapped_complex2       1  2.3           
  g3466/in_1                                                                  
  g3466/z                       (u)  unmapped_nand2          2  4.6           
  g3386/in_0                                                                  
  g3386/z                       (u)  unmapped_complex2       1  2.3           
  g3387/in_1                                                                  
  g3387/z                       (u)  unmapped_nand2          4  9.2           
  g4902/in_1                                                                  
  g4902/z                       (u)  unmapped_complex2       1  2.3           
  g3330/in_1                                                                  
  g3330/z                       (u)  unmapped_nand2          2  4.6           
  g4924/in_1                                                                  
  g4924/z                       (u)  unmapped_complex2       1  2.3           
  g3183/in_1                                                                  
  g3183/z                       (u)  unmapped_nand2          3  6.9           
  g4940/in_0                                                                  
  g4940/z                       (u)  unmapped_complex2       1  2.3           
  g3153/in_1                                                                  
  g3153/z                       (u)  unmapped_nand2          2  4.6           
  g3139/in_0                                                                  
  g3139/z                       (u)  unmapped_complex2       1  2.3           
  g3140/in_1                                                                  
  g3140/z                       (u)  unmapped_nand2          4  9.2           
csa_tree_mul_535_1298/out_1[19] 
mux_ctl_48xi/csa_tree_mul_535_1298_out_1 
  g4274/in_1                                                                  
  g4274/z                       (u)  unmapped_complex2       1  2.3           
  g4275/in_1                                                                  
  g4275/z                       (u)  unmapped_nand2          1  2.3           
mux_ctl_48xi/csa_mux_b_mux_585_52_in_1 
csa_mux_b_mux_585_52/in_1[19] 
  g205/in_1                                                                   
  g205/z                        (u)  unmapped_nand2          1  2.3           
  g171/in_1                                                                   
  g171/z                        (u)  unmapped_nand2          2  4.6           
csa_mux_b_mux_585_52/z[19] 
final_adder_mux_585_52/B[19] 
  g882/in_1                                                                   
  g882/z                        (u)  unmapped_or2            3  6.9           
  g853/in_1                                                                   
  g853/z                        (u)  unmapped_nand2          2  4.6           
  g786/in_0                                                                   
  g786/z                        (u)  unmapped_complex2       1  2.3           
  g759/in_1                                                                   
  g759/z                        (u)  unmapped_complex2       5 11.5           
  g741/in_1                                                                   
  g741/z                        (u)  unmapped_complex2       1  2.3           
  g727/in_0                                                                   
  g727/z                        (u)  unmapped_complex2       8 18.4           
  g718/in_1                                                                   
  g718/z                        (u)  unmapped_nand2          1  2.3           
  g707/in_1                                                                   
  g707/z                        (u)  unmapped_nand2          1  2.3           
  g646/in_0                                                                   
  g646/z                        (u)  unmapped_complex2       2  4.6           
  g637/in_0                                                                   
  g637/z                        (u)  unmapped_or2            1  2.3           
  g638/in_1                                                                   
  g638/z                        (u)  unmapped_nand2          3  6.9           
final_adder_mux_585_52/Z[25] 
inc_add_537_22_5/A[17] 
  g11/in_1                                                                    
  g11/z                         (u)  unmapped_nand2          2  4.6           
  g248/in_0                                                                   
  g248/z                        (u)  unmapped_complex2       2  4.6           
  g245/in_1                                                                   
  g245/z                        (u)  unmapped_complex2       4  9.2           
  g154/in_0                                                                   
  g154/z                        (u)  unmapped_complex2       1  2.3           
  g183/in_0                                                                   
  g183/z                        (u)  unmapped_or2            2  4.6           
  g180/in_1                                                                   
  g180/z                        (u)  unmapped_or2            1  2.3           
  g181/in_1                                                                   
  g181/z                        (u)  unmapped_nand2          2  4.6           
inc_add_537_22_5/Z[21] 
cb_seqi/inc_add_537_22_5_Z[21] 
  g5110/in_1                                                                  
  g5110/z                       (u)  unmapped_or2            1  2.3           
  g5027/in_1                                                                  
  g5027/z                       (u)  unmapped_or2            1  2.3           
  g5019/in_0                                                                  
  g5019/z                       (u)  unmapped_complex2       1  2.3           
  g5010/in_1                                                                  
  g5010/z                       (u)  unmapped_complex2       9 20.7           
  g4593/in_1                                                                  
  g4593/z                       (u)  unmapped_or2            7 16.1           
  g4919/in_1                                                                  
  g4919/z                       (u)  unmapped_or2            1  2.3           
  g5133/data0                                                                 
  g5133/z                       (u)  unmapped_bmux3          1  2.3           
  m_neg_partial_sum_reg[13]/d   <<<  unmapped_d_flop                          
  m_neg_partial_sum_reg[13]/clk      setup                                    
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                          capture                           3800 R 
                                     latency                                  
                                     uncertainty                              
------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Start-point  : cb_seqi/m_neg_partial_sum_reg[1]/clk
End-point    : cb_seqi/m_neg_partial_sum_reg[13]/d

(u) : Net has unmapped pin(s).

The global mapper estimates a slack for this path of 488ps.
 
Cost Group 'cg_enable_group_clk' target slack:   104 ps
Target path end-point (Pin: RC_CG_HIER_INST0/RC_CGIC_INST/E (CKLNQD1/E))

             Pin                              Type          Fanout Load Arrival   
                                                                   (fF)   (ps)    
----------------------------------------------------------------------------------
(clock clk)                       <<<    launch                               0 R 
                                         latency                                  
cb_seqi
  m_pos_partial_sum_reg[15]/clk                                                   
  m_pos_partial_sum_reg[15]/q     (u)    unmapped_d_flop        26 16.5           
cb_seqi/get_pos_partial_sum 
cb_oseqi/cb_seqi_get_pos_partial_sum 
  g6048/in_1                                                                      
  g6048/z                         (u)    unmapped_or2            2  4.6           
  g6016/in_0                                                                      
  g6016/z                         (u)    unmapped_complex2       1  0.9           
cb_oseqi/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                <<< (P)  CKLNQD1                                  
  RC_CGIC_INST/CP                        setup                                    
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                              capture                           3800 R 
                                         latency                                  
                                         uncertainty                              
----------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Start-point  : cb_seqi/m_pos_partial_sum_reg[15]/clk
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved
(u) : Net has unmapped pin(s).

The global mapper estimates a slack for this path of 2838ps.
 
Multi-threaded Technology Mapping (8 threads per ST process, 8 of 16 CPUs usable)
          Restructuring (delay-based) cb_seq...
          Done restructuring (delay-based) cb_seq
        Optimizing component cb_seq...
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
        Early Area Reclamation for increment_unsigned_507_508_480 'timing_driven' (slack=-10, area=210)...
                  			o_slack=-8,  bc_slack=-12
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
          Restructuring (delay-based) increment_unsigned...
          Done restructuring (delay-based) increment_unsigned
        Optimizing component increment_unsigned...
          Restructuring (delay-based) add_unsigned_470_484...
          Done restructuring (delay-based) add_unsigned_470_484
        Optimizing component add_unsigned_470_484...
          Restructuring (delay-based) add_unsigned_470...
          Done restructuring (delay-based) add_unsigned_470
        Optimizing component add_unsigned_470...
          Restructuring (delay-based) bmux_509_1...
          Done restructuring (delay-based) bmux_509_1
        Optimizing component bmux_509_1...
          Restructuring (delay-based) bmux_509_3...
          Done restructuring (delay-based) bmux_509_3
        Optimizing component bmux_509_3...
          Restructuring (delay-based) bmux_509_2...
          Done restructuring (delay-based) bmux_509_2
        Optimizing component bmux_509_2...
          Restructuring (delay-based) bmux_509...
          Done restructuring (delay-based) bmux_509
        Optimizing component bmux_509...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) logic partition in mkPE16...
          Done restructuring (delay-based) logic partition in mkPE16
        Optimizing logic partition in mkPE16...
          Restructuring (delay-based) csa_tree_224_475...
          Done restructuring (delay-based) csa_tree_224_475
        Optimizing component csa_tree_224_475...
          Restructuring (delay-based) csa_tree_224...
          Done restructuring (delay-based) csa_tree_224
        Optimizing component csa_tree_224...
          Restructuring (delay-based) add_unsigned_229...
          Done restructuring (delay-based) add_unsigned_229
        Optimizing component add_unsigned_229...
        Early Area Reclamation for add_unsigned_229 'very_fast' (slack=458, area=163)...
                  			o_slack=105,  bc_slack=812
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) add_unsigned...
          Done restructuring (delay-based) add_unsigned
        Optimizing component add_unsigned...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
        Early Area Reclamation for sub_unsigned 'very_fast' (slack=995, area=152)...
                  			o_slack=645,  bc_slack=1345
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) sub_unsigned...
          Done restructuring (delay-based) sub_unsigned
        Optimizing component sub_unsigned...
          Restructuring (delay-based) cb_oseq...
          Done restructuring (delay-based) cb_oseq
        Optimizing component cb_oseq...
 
Global mapping timing result
============================
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
                Pin                             Type       Fanout Load Slew Delay Arrival   
                                                                  (fF) (ps)  (ps)   (ps)    
--------------------------------------------------------------------------------------------
(clock clk)                                   launch                                    0 R 
                                              latency                        +200     200 R 
(constraints_tsmc65lp_line_44_118_1)          ext delay                      +100     300 F 
EN_reset_pe                                   in port           7  5.3   31   +13     313 F 
cb_oseqi/EN_reset_pe 
  g9017/A1                                                                     +0     313   
  g9017/ZN                                    NR2XD0            2  1.6   66   +54     367 R 
  g8996/I                                                                      +0     367   
  g8996/ZN                                    CKND1             2  2.1   37   +45     412 F 
  g8962/A1                                                                     +0     412   
  g8962/ZN                                    NR2XD1            5  5.2   85   +64     476 R 
  g8908/A2                                                                     +0     476   
  g8908/ZN                                    CKND2D0           2  1.7   81   +81     557 F 
  g8893/I                                                                      +0     557   
  g8893/ZN                                    INVD1             2  1.7   39   +50     607 R 
  g8821/A2                                                                     +0     607   
  g8821/ZN                                    ND3D1             1  0.9   69   +65     672 F 
cb_oseqi/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                          +0     672   
  RC_CGIC_INST/CP                             setup                     100   +91     764 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                                   capture                                3800 R 
                                              latency                        +200    4000 R 
                                              uncertainty                    -100    3900 R 
--------------------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Timing slack :    3136ps 
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

                Pin                         Type       Fanout Load Slew Delay Arrival   
                                                              (fF) (ps)  (ps)   (ps)    
----------------------------------------------------------------------------------------
(clock clk)                               launch                                    0 R 
                                          latency                        +200     200 R 
(constraints_tsmc65lp_line_44_101_1)      ext delay                      +100     300 F 
multiply_constants_neg_constant[0]        in port          10 13.5   67   +33     333 F 
cb_oseqi/multiply_constants_neg_constant[0] 
  g9013/A1                                                                 +0     333   
  g9013/ZN                                NR2XD0            2  2.0   76   +70     403 R 
  g8950/B1                                                                 +0     403   
  g8950/ZN                                IND2D1            2  1.4   48   +53     456 F 
  g8905/A1                                                                 +0     456   
  g8905/ZN                                NR2XD0            2  2.0   76   +64     520 R 
  g8869/B1                                                                 +0     520   
  g8869/ZN                                IND2D1            2  1.7   52   +56     576 F 
  g8825/A1                                                                 +0     576   
  g8825/ZN                                NR2XD0            2  2.1   79   +67     643 R 
  g8811/I                                                                  +0     643   
  g8811/ZN                                INVD1             1  0.9   28   +36     680 F 
  g8788/A1                                                                 +0     680   
  g8788/ZN                                ND2D1             2  1.8   44   +36     715 R 
  g8705/B1                                                                 +0     715   
  g8705/ZN                                IOA22D2           8 12.9   84  +200     916 F 
cb_oseqi/csa_tree_mul_535_1298_in_0[5] 
csa_tree_mul_535_1298/in_0[8] 
  g9437/I                                                                  +0     916   
  g9437/ZN                                INVD2            10 12.8   92   +83     999 R 
  g9214/B2                                                                 +0     999   
  g9214/ZN                                MAOI22D1          2  1.9   94  +132    1130 R 
  g9098/B1                                                                 +0    1130   
  g9098/Z                                 OA22D1            3  3.7   69  +143    1273 R 
  g8819/A2                                                                 +0    1273   
  g8819/ZN                                NR2XD1            1  1.8   38   +50    1323 F 
  g8684/B                                                                  +0    1323   
  g8684/CO                                FA1D1             1  1.8   50  +206    1529 F 
  g8650/A                                                                  +0    1529   
  g8650/CO                                FA1D2             4  5.6   80  +286    1815 F 
csa_tree_mul_535_1298/out_0[11] 
mux_ctl_40xi/csa_tree_mul_535_1298_out_0 
  g4299/A1                                                                 +0    1815   
  g4299/ZN                                IND2D1            1  1.9   56  +112    1928 F 
  g4297/A2                                                                 +0    1928   
  g4297/ZN                                CKND2D2           1  1.8   36   +45    1972 R 
mux_ctl_40xi/csa_mux_b_mux_585_52_in_1 
csa_mux_b_mux_585_52/in_1[11] 
  g554/A1                                                                  +0    1972   
  g554/ZN                                 ND2D2             1  2.6   39   +37    2009 F 
  g522/A1                                                                  +0    2009   
  g522/ZN                                 ND2D3             2  5.6   41   +38    2047 R 
csa_mux_b_mux_585_52/z[11] 
final_adder_mux_585_52/B[11] 
  g2844/A1                                                                 +0    2047   
  g2844/ZN                                NR2XD2            3  5.3   43   +38    2085 F 
  g2756/A1                                                                 +0    2085   
  g2756/ZN                                NR2XD1            1  2.5   51   +46    2131 R 
  g2617/A1                                                                 +0    2131   
  g2617/ZN                                CKND2D3           4  6.7   53   +49    2180 F 
  g2616/I                                                                  +0    2180   
  g2616/ZN                                CKND2             2  2.5   26   +34    2214 R 
  g2610/A2                                                                 +0    2214   
  g2610/ZN                                NR2XD1            2  2.7   45   +41    2256 F 
  g2594/A1                                                                 +0    2256   
  g2594/ZN                                NR2XD1            1  1.0   32   +35    2291 R 
  g2584/A1                                                                 +0    2291   
  g2584/ZN                                IND2D2            3  3.5   40   +66    2357 R 
final_adder_mux_585_52/Z[12] 
inc_add_537_22_5/A[4] 
  g364/A1                                                                  +0    2357   
  g364/ZN                                 CKND2D2           3  2.9   40   +38    2395 F 
  g362/A2                                                                  +0    2395   
  g362/ZN                                 NR2XD1            2  2.5   51   +56    2451 R 
  g359/A1                                                                  +0    2451   
  g359/ZN                                 CKND2D2           3  2.8   39   +40    2491 F 
  g357/A2                                                                  +0    2491   
  g357/ZN                                 NR2XD1            2  2.9   56   +58    2550 R 
  g354/A2                                                                  +0    2550   
  g354/ZN                                 CKND2D2           1  1.7   30   +42    2592 F 
  g352/I                                                                   +0    2592   
  g352/ZN                                 CKND2             2  2.5   24   +27    2619 R 
  g350/A1                                                                  +0    2619   
  g350/ZN                                 CKND2D2           3  3.2   42   +35    2654 F 
  g348/A1                                                                  +0    2654   
  g348/ZN                                 NR2XD1            2  2.5   51   +46    2700 R 
  g345/A1                                                                  +0    2700   
  g345/ZN                                 CKND2D2           3  3.2   42   +42    2742 F 
  g343/A1                                                                  +0    2742   
  g343/ZN                                 NR2XD1            2  2.5   51   +46    2788 R 
  g340/A1                                                                  +0    2788   
  g340/ZN                                 CKND2D2           3  3.2   42   +42    2830 F 
  g338/A1                                                                  +0    2830   
  g338/ZN                                 NR2XD1            2  2.5   51   +46    2876 R 
  g335/A1                                                                  +0    2876   
  g335/ZN                                 CKND2D2           3  3.2   42   +42    2918 F 
  g333/A1                                                                  +0    2918   
  g333/ZN                                 NR2XD1            2  2.5   51   +46    2964 R 
  g329/A1                                                                  +0    2964   
  g329/ZN                                 CKND2D2           3  3.2   42   +42    3006 F 
  g326/A1                                                                  +0    3006   
  g326/ZN                                 NR2XD1            2  2.5   51   +46    3052 R 
  g321/A1                                                                  +0    3052   
  g321/ZN                                 CKND2D2           2  2.3   35   +38    3090 F 
  g317/A1                                                                  +0    3090   
  g317/ZN                                 NR2XD1            2  2.5   51   +44    3134 R 
  g314/A1                                                                  +0    3134   
  g314/ZN                                 CKND2D2           3  3.8   47   +45    3179 F 
  g312/I                                                                   +0    3179   
  g312/ZN                                 INVD2             1  1.5   22   +30    3209 R 
  g311/A1                                                                  +0    3209   
  g311/ZN                                 CKND2D2           2  2.6   37   +32    3240 F 
  g308/A1                                                                  +0    3240   
  g308/ZN                                 ND2D2             1  2.3   34   +31    3272 R 
  g307/B1                                                                  +0    3272   
  g307/ZN                                 IND2D2            4  4.0   56   +50    3322 F 
inc_add_537_22_5/Z[23] 
cb_seqi/inc_add_537_22_5_Z[23] 
  g6030/A1                                                                 +0    3322   
  g6030/ZN                                INR2D2            1  3.9   37   +86    3408 F 
  g6025/A1                                                                 +0    3408   
  g6025/ZN                                NR2XD3           10 10.1   63   +52    3459 R 
  g6023/I                                                                  +0    3459   
  g6023/ZN                                INVD2             6  4.8   32   +39    3498 F 
  g6000/A2                                                                 +0    3498   
  g6000/ZN                                OAI211D1          1  0.9   75   +59    3558 R 
  m_neg_partial_sum_reg[0]/D         <<<  DFKCNQD4                         +0    3558   
  m_neg_partial_sum_reg[0]/CP             setup                     100  +171    3729 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                               capture                                3800 R 
                                          latency                        +200    4000 R 
                                          uncertainty                    -100    3900 R 
----------------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Timing slack :     171ps 
Start-point  : multiply_constants_neg_constant[0]
End-point    : cb_seqi/m_neg_partial_sum_reg[0]/D

 
 
Global mapping status
=====================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_map                11037        0 

             Cost Group            Target    Slack    Diff.    Clock
--------------------------------------------------------------------
    cg_enable_group_clk               104     3136              3800 
                    clk               107      171              3800 

 
Global incremental target info
==============================
Cost Group 'clk' target slack:    69 ps
Target path end-point (Pin: m_pos_partial_sum_reg[13]/D (DFKCNQD4/D))

               Pin                         Type       Fanout Load Arrival   
                                                             (fF)   (ps)    
----------------------------------------------------------------------------
(clock clk)                         <<<  launch                         0 R 
                                         latency                            
(constraints_tsmc65lp_line_44_92_1)      ext delay                          
multiply_constants_pos_constant[1]       in port           3  2.6           
cb_oseqi/multiply_constants_pos_constant[1] 
  g9008/A2                                                                  
  g9008/ZN                               NR2XD0            2  2.0           
  g8957/B1                                                                  
  g8957/ZN                               IND2D1            2  1.7           
  g8904/A1                                                                  
  g8904/ZN                               NR2XD0            2  2.0           
  g8868/B1                                                                  
  g8868/ZN                               IND2D1            2  1.7           
  g8828/A1                                                                  
  g8828/ZN                               NR2XD0            2  2.1           
  g8812/I                                                                   
  g8812/ZN                               INVD1             1  0.9           
  g8789/A1                                                                  
  g8789/ZN                               ND2D1             2  1.8           
  g8706/B1                                                                  
  g8706/ZN                               IOA22D2           9 11.9           
cb_oseqi/csa_tree_mul_539_1299_in_0[5] 
csa_tree_mul_539_1299/in_0[8] 
  g9529/I                                                                   
  g9529/ZN                               CKND2             9 11.1           
  g9417/A2                                                                  
  g9417/ZN                               CKND2D1           1  2.2           
  g9259/A2                                                                  
  g9259/ZN                               ND2D2             2  1.9           
  g9161/A1                                                                  
  g9161/ZN                               CKND2D1           1  1.4           
  g9126/A1                                                                  
  g9126/ZN                               CKND2D2           1  2.0           
  g8712/A                                                                   
  g8712/CO                               FA1D1             1  1.9           
  g8675/CI                                                                  
  g8675/S                                FA1D1             1  1.9           
  g8655/CI                                                                  
  g8655/S                                FA1D2             4  6.5           
csa_tree_mul_539_1299/out_1[10] 
mux_ctl_10xi/csa_tree_mul_539_1299_out_1 
  g4291/I                                                                   
  g4291/ZN                               CKND2             1  1.4           
  g4288/A1                                                                  
  g4288/ZN                               CKND2D2           1  1.5           
  g4287/A1                                                                  
  g4287/ZN                               CKND2D2           1  1.6           
mux_ctl_10xi/csa_mux_b_mux_576_52_in_1 
csa_mux_b_mux_576_52/in_1[10] 
  g555/A1                                                                   
  g555/ZN                                ND2D2             1  2.5           
  g516/A1                                                                   
  g516/ZN                                CKND2D3           2  5.0           
csa_mux_b_mux_576_52/z[10] 
final_adder_mux_576_52/B[10] 
  g4101/A1                                                                  
  g4101/ZN                               NR2D4             3  6.5           
  g4073/I                                                                   
  g4073/ZN                               CKND2             3  4.2           
  g3928/A2                                                                  
  g3928/ZN                               CKND2D1           1  1.8           
  g3859/A1                                                                  
  g3859/ZN                               ND3D2             2  1.9           
  g3836/A1                                                                  
  g3836/ZN                               MOAI22D1          1  1.1           
final_adder_mux_576_52/Z[11] 
inc_add_541_22_3/A[3] 
  g400/I                                                                    
  g400/ZN                                INVD1             2  2.2           
  g377/A1                                                                   
  g377/ZN                                NR2XD1            2  2.9           
  g374/A2                                                                   
  g374/ZN                                CKND2D2           3  3.4           
  g372/A2                                                                   
  g372/ZN                                NR2XD1            2  2.5           
  g369/A1                                                                   
  g369/ZN                                CKND2D2           3  3.3           
  g367/A2                                                                   
  g367/ZN                                NR2XD1            2  2.9           
  g364/A2                                                                   
  g364/ZN                                CKND2D2           3  2.9           
  g362/A2                                                                   
  g362/ZN                                NR2XD1            2  2.5           
  g359/A1                                                                   
  g359/ZN                                CKND2D2           3  3.2           
  g357/A1                                                                   
  g357/ZN                                NR2XD1            2  2.5           
  g354/A1                                                                   
  g354/ZN                                CKND2D2           3  3.2           
  g352/A1                                                                   
  g352/ZN                                NR2XD1            2  2.5           
  g349/A1                                                                   
  g349/ZN                                CKND2D2           2  2.2           
  g343/A1                                                                   
  g343/ZN                                NR2XD1            2  2.5           
  g340/A1                                                                   
  g340/ZN                                CKND2D2           2  2.2           
  g335/A1                                                                   
  g335/ZN                                NR2XD1            2  2.6           
  g331/A1                                                                   
  g331/ZN                                CKND2D2           2  2.2           
  g323/A1                                                                   
  g323/ZN                                NR2XD1            2  2.6           
  g318/A1                                                                   
  g318/ZN                                CKND2D2           3  3.2           
  g316/A1                                                                   
  g316/ZN                                NR2XD1            2  3.5           
  g314/I                                                                    
  g314/ZN                                INVD2             2  2.2           
  g312/A1                                                                   
  g312/ZN                                NR2XD1            1  1.0           
  g310/A1                                                                   
  g310/ZN                                IND2D2            2  2.9           
inc_add_541_22_3/Z[22] 
cb_seqi/inc_add_541_22_3_Z[22] 
  g6124/A2                                                                  
  g6124/ZN                               ND2D1             1  1.3           
  g6033/A1                                                                  
  g6033/ZN                               NR2XD1            2  3.5           
  g6026/B1                                                                  
  g6026/ZN                               INR2D2            1  2.6           
  g6021/A1                                                                  
  g6021/ZN                               NR2XD2            3  7.7           
  g6017/I                                                                   
  g6017/ZN                               INVD6            13 11.7           
  g5993/A1                                                                  
  g5993/ZN                               OAI21D1           1  1.0           
  g5936/A2                                                                  
  g5936/ZN                               OAI21D1           1  0.9           
  g5924/B1                                                                  
  g5924/ZN                               IND2D1            1  0.9           
  m_pos_partial_sum_reg[13]/D       <<<  DFKCNQD4                           
  m_pos_partial_sum_reg[13]/CP           setup                              
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                              capture                     3800 R 
                                         latency                            
                                         uncertainty                        
----------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Start-point  : multiply_constants_pos_constant[1]
End-point    : cb_seqi/m_pos_partial_sum_reg[13]/D

The global mapper estimates a slack for this path of 189ps.
 
Cost Group 'cg_enable_group_clk' target slack:    69 ps
Target path end-point (Pin: RC_CG_HIER_INST0/RC_CGIC_INST/E (CKLNQD1/E))

                Pin                             Type       Fanout Load Arrival   
                                                                  (fF)   (ps)    
---------------------------------------------------------------------------------
(clock clk)                            <<<    launch                         0 R 
                                              latency                            
(constraints_tsmc65lp_line_44_118_1)          ext delay                          
EN_reset_pe                                   in port           7  5.3           
cb_oseqi/EN_reset_pe 
  g9017/A1                                                                       
  g9017/ZN                                    NR2XD0            2  1.6           
  g8996/I                                                                        
  g8996/ZN                                    CKND1             2  2.1           
  g8962/A1                                                                       
  g8962/ZN                                    NR2XD1            5  5.2           
  g8908/A2                                                                       
  g8908/ZN                                    CKND2D0           2  1.7           
  g8893/I                                                                        
  g8893/ZN                                    INVD1             2  1.7           
  g8821/A2                                                                       
  g8821/ZN                                    ND3D1             1  0.9           
cb_oseqi/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                            
  RC_CGIC_INST/CP                             setup                              
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
(clock clk)                                   capture                     3800 R 
                                              latency                            
                                              uncertainty                        
---------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

The global mapper estimates a slack for this path of 3104ps.
 
 
Global incremental timing result
================================
        Tracing clock networks.
        Levelizing the circuit.
        Applying wireload models.
        Computing net loads.
        Computing delays.
        Computing arrivals and requireds.
                Pin                             Type       Fanout Load Slew Delay Arrival   
                                                                  (fF) (ps)  (ps)   (ps)    
--------------------------------------------------------------------------------------------
(clock clk)                                   launch                                    0 R 
                                              latency                        +200     200 R 
(constraints_tsmc65lp_line_44_118_1)          ext delay                      +100     300 R 
EN_reset_pe                                   in port           7  5.2   43   +19     319 R 
cb_oseqi/EN_reset_pe 
  g9017/A1                                                                     +0     319   
  g9017/ZN                                    NR2XD0            2  1.3   44   +41     360 F 
  g8996/I                                                                      +0     360   
  g8996/ZN                                    INVD0             2  2.4   75   +62     422 R 
  g8962/A1                                                                     +0     422   
  g8962/ZN                                    NR2XD1            5  5.5   69   +64     485 F 
  g8908/A2                                                                     +0     485   
  g8908/ZN                                    CKND2D0           2  1.7   82   +76     561 R 
  g8893/I                                                                      +0     561   
  g8893/ZN                                    CKND1             2  1.6   36   +46     608 F 
  g8821/A2                                                                     +0     608   
  g8821/ZN                                    ND3D1             1  0.9   42   +38     646 R 
cb_oseqi/RC_CG_HIER_INST0_enable 
RC_CG_HIER_INST0/enable 
  RC_CGIC_INST/E                     <<< (P)  CKLNQD1                          +0     646   
  RC_CGIC_INST/CP                             setup                     100  +133     780 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                                   capture                                3800 R 
                                              latency                        +200    4000 R 
                                              uncertainty                    -100    3900 R 
--------------------------------------------------------------------------------------------
Cost Group   : 'cg_enable_group_clk' (path_group 'cg_enable_group_clk')
Timing slack :    3120ps 
Start-point  : EN_reset_pe
End-point    : RC_CG_HIER_INST0/RC_CGIC_INST/E

(P) : Instance is preserved

                Pin                         Type       Fanout Load Slew Delay Arrival   
                                                              (fF) (ps)  (ps)   (ps)    
----------------------------------------------------------------------------------------
(clock clk)                               launch                                    0 R 
                                          latency                        +200     200 R 
(constraints_tsmc65lp_line_44_101_1)      ext delay                      +100     300 F 
multiply_constants_neg_constant[0]        in port          10 10.8   55   +27     327 F 
cb_oseqi/multiply_constants_neg_constant[0] 
  g9013/A1                                                                 +0     327   
  g9013/ZN                                NR2XD0            2  1.7   69   +62     389 R 
  g8950/B1                                                                 +0     389   
  g8950/ZN                                IND2D1            2  1.4   48   +51     440 F 
  g8905/A1                                                                 +0     440   
  g8905/ZN                                NR2XD0            2  1.7   69   +60     499 R 
  g8869/B1                                                                 +0     499   
  g8869/ZN                                IND2D1            2  1.6   51   +53     552 F 
  g8825/A1                                                                 +0     552   
  g8825/ZN                                NR2XD0            2  1.7   69   +61     613 R 
  g9117/A1                                                                 +0     613   
  g9117/ZN                                IND2D1            2  1.8   46   +87     699 R 
  g8705/B1                                                                 +0     699   
  g8705/ZN                                IOA22D2           2  2.9   44  +167     866 F 
cb_oseqi/csa_tree_mul_535_1298_in_0[5] 
csa_tree_mul_535_1298/in_0[8] 
  g9437/I                                                                  +0     866   
  g9437/ZN                                INVD2            10 10.3   76   +61     927 R 
  g9348/A2                                                                 +0     927   
  g9348/ZN                                NR2XD0            1  1.0   41   +53     981 F 
  g9188/A1                                                                 +0     981   
  g9188/ZN                                NR2D1             2  1.5   69   +58    1039 R 
  g9557/A1                                                                 +0    1039   
  g9557/ZN                                IND2D1            1  1.0   36   +81    1120 R 
  g8894/B                                                                  +0    1120   
  g8894/ZN                                IOA21D1           3  2.7   69   +54    1174 F 
  g9548/A1                                                                 +0    1174   
  g9548/ZN                                IND2D1            1  0.9   41   +98    1272 F 
  g8786/A1                                                                 +0    1272   
  g8786/ZN                                ND2D1             3  3.6   67   +53    1326 R 
  g8753/A1                                                                 +0    1326   
  g8753/ZN                                CKND2D2           1  1.4   32   +38    1363 F 
  g8739/A1                                                                 +0    1363   
  g8739/ZN                                CKND2D2           1  1.9   36   +32    1395 R 
  g8666/B                                                                  +0    1395   
  g8666/CO                                FA1D1             1  2.0   54  +212    1607 R 
  g8641/A                                                                  +0    1607   
  g8641/S                                 FA1D1             3  4.5   84  +245    1852 R 
csa_tree_mul_535_1298/out_1[13] 
mux_ctl_42xi/csa_tree_mul_535_1298_out_1 
  fopt4303/I                                                               +0    1852   
  fopt4303/ZN                             INVD2             2  2.1   28   +36    1888 F 
  g4298/A1                                                                 +0    1888   
  g4298/ZN                                CKND2D2           1  1.5   35   +29    1917 R 
  g4297/A1                                                                 +0    1917   
  g4297/ZN                                CKND2D2           1  1.6   29   +31    1948 F 
mux_ctl_42xi/csa_mux_b_mux_585_52_in_1 
csa_mux_b_mux_585_52/in_1[13] 
  g550/A1                                                                  +0    1948   
  g550/ZN                                 ND2D2             1  1.9   29   +27    1975 R 
  g512/B                                                                   +0    1975   
  g512/ZN                                 IOA21D2           2  2.7   44   +36    2011 F 
csa_mux_b_mux_585_52/z[13] 
final_adder_mux_585_52/B[13] 
  g2840/A1                                                                 +0    2011   
  g2840/ZN                                NR2D2             3  3.4   68   +58    2069 R 
  g2752/A1                                                                 +0    2069   
  g2752/ZN                                NR2D1             1  1.0   27   +35    2104 F 
  g2712/A1                                                                 +0    2104   
  g2712/ZN                                NR2D1             3  2.7   99   +73    2177 R 
  g2615/A1                                                                 +0    2177   
  g2615/ZN                                ND2D1             2  1.7   55   +64    2240 F 
  g2601/A2                                                                 +0    2240   
  g2601/ZN                                ND2D1             1  0.9   33   +41    2282 R 
  g2590/A1                                                                 +0    2282   
  g2590/ZN                                CKND2D1           1  3.9   86   +65    2346 F 
  g2572/A1                                                                 +0    2346   
  g2572/ZN                                NR2XD3           13 13.7   78   +74    2421 R 
  g2571/I                                                                  +0    2421   
  g2571/ZN                                INVD2             4  3.4   31   +40    2460 F 
  g2566/A1                                                                 +0    2460   
  g2566/ZN                                ND2D1             1  1.0   34   +31    2491 R 
  g2544/A1                                                                 +0    2491   
  g2544/ZN                                ND2D1             3  3.3   78   +61    2552 F 
final_adder_mux_585_52/Z[16] 
inc_add_537_22_5/A[8] 
  g354/A1                                                                  +0    2552   
  g354/ZN                                 CKND2D2           3  2.5   41   +50    2602 R 
  g352/I                                                                   +0    2602   
  g352/ZN                                 CKND1             1  1.4   27   +32    2635 F 
  g350/A1                                                                  +0    2635   
  g350/ZN                                 CKND2D2           3  3.4   49   +38    2672 R 
  g348/A1                                                                  +0    2672   
  g348/ZN                                 NR2XD1            2  2.3   41   +39    2712 F 
  g345/A1                                                                  +0    2712   
  g345/ZN                                 CKND2D2           3  3.4   50   +42    2754 R 
  g343/A1                                                                  +0    2754   
  g343/ZN                                 NR2XD1            2  2.3   41   +40    2793 F 
  g340/A1                                                                  +0    2793   
  g340/ZN                                 CKND2D2           3  3.4   50   +42    2835 R 
  g338/A1                                                                  +0    2835   
  g338/ZN                                 NR2XD1            2  2.3   41   +40    2875 F 
  g335/A1                                                                  +0    2875   
  g335/ZN                                 CKND2D2           3  3.4   50   +42    2917 R 
  g333/A1                                                                  +0    2917   
  g333/ZN                                 NR2XD1            2  2.3   41   +40    2956 F 
  g329/A1                                                                  +0    2956   
  g329/ZN                                 CKND2D2           3  3.4   49   +42    2998 R 
  g326/A1                                                                  +0    2998   
  g326/ZN                                 NR2XD1            3  3.1   48   +43    3042 F 
  g321/A1                                                                  +0    3042   
  g321/ZN                                 CKND2D2           2  2.4   42   +40    3082 R 
  g317/A1                                                                  +0    3082   
  g317/ZN                                 NR2XD1            2  2.3   41   +37    3118 F 
  g314/A1                                                                  +0    3118   
  g314/ZN                                 CKND2D2           3  3.0   47   +40    3159 R 
  g312/I                                                                   +0    3159   
  g312/ZN                                 CKND1             1  1.4   27   +34    3193 F 
  g311/A1                                                                  +0    3193   
  g311/ZN                                 CKND2D2           2  1.9   39   +30    3223 R 
  g309/A1                                                                  +0    3223   
  g309/ZN                                 NR2D1             1  0.7   25   +26    3249 F 
  g307/A1                                                                  +0    3249   
  g307/ZN                                 IND2D1            4  3.6   83  +111    3360 F 
inc_add_537_22_5/Z[23] 
cb_seqi/inc_add_537_22_5_Z[23] 
  g6030/A1                                                                 +0    3360   
  g6030/ZN                                INR2XD1           1  3.6   54  +108    3468 F 
  g6025/A1                                                                 +0    3468   
  g6025/ZN                                NR2D4            10  9.1   83   +70    3538 R 
  g6023/I                                                                  +0    3538   
  g6023/ZN                                CKND1             6  4.8   66   +68    3606 F 
  g6000/A2                                                                 +0    3606   
  g6000/ZN                                OAI211D1          1  0.9   75   +69    3674 R 
  m_neg_partial_sum_reg[0]/D         <<<  DFKCNQD2                         +0    3674   
  m_neg_partial_sum_reg[0]/CP             setup                     100  +164    3839 R 
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
(clock clk)                               capture                                3800 R 
                                          latency                        +200    4000 R 
                                          uncertainty                    -100    3900 R 
----------------------------------------------------------------------------------------
Cost Group   : 'clk' (path_group 'clk')
Timing slack :      61ps 
Start-point  : multiply_constants_neg_constant[0]
End-point    : cb_seqi/m_neg_partial_sum_reg[0]/D

 
 
Global incremental optimization status
======================================
                                   Group   
                                  Tot Wrst 
                           Total  Weighted 
Operation                   Area   Slacks  
-------------------------------------------------------------------------------
 global_incr                8488        0 

             Cost Group            Target    Slack    Diff.    Clock
--------------------------------------------------------------------
    cg_enable_group_clk                69     3120              3800 
                    clk                69       61              3800 


Scan mapping status report
==========================
    Scan mapping: converting flip-flops that pass TDRC.
    Scan mapping: bypassed.  You have to either 1) set attribute 'dft_scan_map_mode' to 'tdrc_pass' and run 'check_dft_rules' or 2) set attribute 'dft_scan_map_mode' to 'force_all'.

    Scan mapping bypassed because no TDRC data is available: either command 'check_dft_rules' has not been run or TDRC data has been subsequently invalidated.
          Performing post-mapping optimization ...

Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'final_adder_mux_585_52' in module 'mkPE16' would be automatically ungrouped.
        : Hierarchical instances can be automatically ungrouped to allow for better area or timing optimization. You can control auto ungrouping using the root-level attribute 'auto_ungroup'. You can skip individual instances or modules using the attribute 'ungroup_ok'.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'final_adder_mux_576_52' in module 'mkPE16' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'inc_add_541_22_3' in module 'mkPE16' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'inc_add_537_22_5' in module 'mkPE16' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'sub_558_25' in module 'mkPE16' would be automatically ungrouped.
Info    : Hierarchical instance automatically ungrouped. [GLO-51]
        : Instance 'add_561_25_Y_add_434_25_Y_add_436_25' in module 'mkPE16' would be automatically ungrouped.
          There are 6 hierarchical instances automatically ungrouped.
        Applying wireload models.
        Computing net loads.
 Doing ConstProp on design:mkPE16 ... 

Info    : One or more cost groups were automatically created for clock gate enable paths. [POPT-96]
    Automatically cost grouped 4 clock gate paths.
  Decloning clock-gating logic from design:mkPE16
Clock-gating declone status
===========================
Total number of clock-gating instances before: 4
Total number of clock-gating instances after : 4
 
Incremental optimization status
===============================
                                   Group   
                                  Tot Wrst     Total - - - - DRC Totals - - - -
                           Total  Weighted      Neg      Max       Max     Max  
Operation                   Area   Slacks      Slack    Trans      Cap   Fanout 
-------------------------------------------------------------------------------
 init_delay                 8455        0         0       671        0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
       crit_upsz         0  (        0 /        0 )  0.00
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
          plc_st         0  (        0 /        0 )  0.00
        plc_star         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00

 
Local TNS optimization status
=============================
                                   Group   
                                  Tot Wrst     Total - - - - DRC Totals - - - -
                           Total  Weighted      Neg      Max       Max     Max  
Operation                   Area   Slacks      Slack    Trans      Cap   Fanout 
-------------------------------------------------------------------------------
 init_tns                   8455        0         0       671        0        0

           Trick     Calls     Accepts   Attempts    Time(secs) 
-----------------------------------------------------------
    plc_bal_star         0  (        0 /        0 )  0.00
     drc_buftimb         0  (        0 /        0 )  0.00
     drc_buftims         0  (        0 /        0 )  0.00
       crit_upsz         0  (        0 /        0 )  0.00
       plc_lo_st         0  (        0 /        0 )  0.00
            fopt         0  (        0 /        0 )  0.00
       crit_dnsz         0  (        0 /        0 )  0.00
             dup         0  (        0 /        0 )  0.00
        setup_dn         0  (        0 /        0 )  0.00

##>======== Cadence Confidential (Mapping-Logical) ========
##>Main Thread Summary:
##>--------------------------------------------------------
##>STEP               Elapsed     Insts      Area    Memory
##>--------------------------------------------------------
##>M:Initial                0      4288     14573       390
##>M:Launch ST              0         -         -         -
##>M:Distributed            0         -         -         -
##>M:Cleanup                1      3536      8454       446
##>M:MBCI                   0      3536      8454       446
##>M:Misc                  25
##>--------------------------------------------------------
##>Total Elapsed           26
##>========================================================
  Setting attribute of root '/': 'pbs_stage_start_elapsed_time' = 49
  Setting attribute of root '/': 'pbs_stage_start_st_time' = 46
Info    : Done mapping. [SYNTH-5]
        : Done mapping 'mkPE16'.
        Applying wireload models.
        Computing net loads.
     flow.cputime  flow.realtime  timing.setup.tns  timing.setup.wns  snapshot
UM:            44             26           -0.0 ps           61.2 ps  syn_map
report area > $REPORTS_PATH/area.rpt
report timing > $REPORTS_PATH/timing.rpt
report power > $REPORTS_PATH/power.rpt
Warning : Clock period mismatch between synthesis(SDC) and simulation(VCD/TCF/SAIF) values. [RPT-13]
        : Clock(clock:mkPE16/clk) period mismatch between SDC(3.8 ns) and asserted(3.664285491811238 ns) values.
        : Synthesis clock period (derived from SDC) does not match with asserted data from VCD/TCF/SAIF. User can scale simulation frequency using -scale option of read_vcd/read_tcf/read_saif commands.
Info    : Time taken to report power. [RPT-7]
        : 1.00 cpu seconds
report clock_gating > $REPORTS_PATH/clockgating.rpt
report gates > $REPORTS_PATH/gates.rpt
report gates -power > $REPORTS_PATH/gates_power.rpt
report datapath > $REPORTS_PATH/datapath.rpt
Beginning report datapath command
Warning : The filename, column and line number information will not be available in the report. [RPT_DP-100]
        : The attribute for getting HDL filename and line number is not set.
        : You must set the 'hdl_track_filename_row_col' attribute to 'true' (before elaborate) to enable filename, column, and line number tracking in the datapath report.
report messages > $REPORTS_PATH/messages.rpt
report qor > $REPORTS_PATH/qor.rpt
write_design -basename ${OUTPUTS_PATH}/${design}_syn
Exporting design data for 'mkPE16' to build/tsmc65lp/test_run/out/mkPE16_syn...
Info    : Generating design database. [PHYS-90]
        : Writing netlist: build/tsmc65lp/test_run/out/mkPE16_syn.v
        : The database contains all the files required to restore the design in the specified application.
Info    : Generating design database. [PHYS-90]
        : Writing Metrics file: build/tsmc65lp/test_run/out/mkPE16_syn.metrics.json
Info    : Generating design database. [PHYS-90]
        : Writing write_script: build/tsmc65lp/test_run/out/mkPE16_syn.g
Info    : Generating design database. [PHYS-90]
        : Writing TCF: build/tsmc65lp/test_run/out/mkPE16_syn.tcf
Info    : Generating design database. [PHYS-90]
        : Writing multi-mode multi-corner file: build/tsmc65lp/test_run/out/mkPE16_syn.mmmc.tcl
Finished SDC export (command execution time mm:ss (real) = 00:01).
Info: file build/tsmc65lp/test_run/out//mkPE16_syn.default_emulate_constraint_mode.sdc has been written
File build/tsmc65lp/test_run/out//mkPE16_syn.mmmc.tcl has been written.
Info    : Design has no library or power domains. [INVS_MSV-301]
        : No power domains will be created for Innovus.
Info    : Generating design database. [PHYS-90]
        : Writing INIT setup file for Genus: build/tsmc65lp/test_run/out/mkPE16_syn.genus_init.tcl
Info    : Generating design database. [PHYS-90]
        : Writing Genus(TM) Synthesis Solution setup file: build/tsmc65lp/test_run/out/mkPE16_syn.genus_setup.tcl
** To load the database source build/tsmc65lp/test_run/out/mkPE16_syn.genus_setup.tcl in an Genus(TM) Synthesis Solution session.
Finished exporting design data for 'mkPE16' (command execution time mm:ss cpu = 00:00, real = 00:01).
.
write_hdl  > ${OUTPUTS_PATH}/${design}_syn.v
write_sdc > ${OUTPUTS_PATH}/${design}_syn.sdc
Finished SDC export (command execution time mm:ss (real) = 00:00).
write_sdf -edges check_edge > ${OUTPUTS_PATH}/${design}_syn.sdf
Warning : Default value for an option has changed in this release. [WSDF-104]
        : Default value for -setuphold has changed from split to merge_always. Specify '-setuphold split' to preserve the behavior of the previous release.
        : Specify the option explicitly.
Warning : Default value for an option has changed in this release. [WSDF-104]
        : Default value for -recrem has changed from split to merge_always. Specify '-recrem split' to preserve the behavior of the previous release.
write_db ${design} -to_file ${OUTPUTS_PATH}/${design}_syn.db
Finished exporting design database to file 'build/tsmc65lp/test_run/out/mkPE16_syn.db' for 'mkPE16' (command execution time mm:ss cpu = 00:00, real = 00:01).
file copy [get_db stdout_log] ${LOG_PATH}/
