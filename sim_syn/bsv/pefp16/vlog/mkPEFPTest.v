//
// Generated by Bluespec Compiler, version 2016.07.beta1 (build 34806, 2016-07-05)
//
// On Mon Dec 11 19:05:34 EST 2017
//
//
// Ports:
// Name                         I/O  size props
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkPEFPTest;


  // register cycle1
  reg [31 : 0] cycle1;
  wire [31 : 0] cycle1_D_IN;
  wire cycle1_EN;

  // register cycle2
  reg [31 : 0] cycle2;
  wire [31 : 0] cycle2_D_IN;
  wire cycle2_EN;

  // register cycle3
  reg [31 : 0] cycle3;
  wire [31 : 0] cycle3_D_IN;
  wire cycle3_EN;

  // register psum
  reg [7 : 0] psum;
  wire [7 : 0] psum_D_IN;
  wire psum_EN;

  // register psum2
  reg [7 : 0] psum2;
  wire [7 : 0] psum2_D_IN;
  wire psum2_EN;

  // ports of submodule clk
  wire clk_CLK_OUT;

  // ports of submodule pe1
  wire [127 : 0] pe1_load_weights_weights;
  wire [7 : 0] pe1_add_constant_constant,
	       pe1_add_input_inp,
	       pe1_get_partial_sum;
  wire pe1_EN_add_constant,
       pe1_EN_add_input,
       pe1_EN_get_partial_sum,
       pe1_EN_is_ready,
       pe1_EN_load_weights,
       pe1_EN_nonlinearity,
       pe1_EN_read_weights,
       pe1_EN_reset_pe;

  // ports of submodule pe2
  wire [127 : 0] pe2_load_weights_weights, pe2_read_weights;
  wire [7 : 0] pe2_add_constant_constant, pe2_add_input_inp;
  wire pe2_EN_add_constant,
       pe2_EN_add_input,
       pe2_EN_get_partial_sum,
       pe2_EN_is_ready,
       pe2_EN_load_weights,
       pe2_EN_nonlinearity,
       pe2_EN_read_weights,
       pe2_EN_reset_pe;

  // ports of submodule pe3
  wire [127 : 0] pe3_load_weights_weights;
  wire [7 : 0] pe3_add_constant_constant,
	       pe3_add_input_inp,
	       pe3_get_partial_sum;
  wire pe3_EN_add_constant,
       pe3_EN_add_input,
       pe3_EN_get_partial_sum,
       pe3_EN_is_ready,
       pe3_EN_load_weights,
       pe3_EN_nonlinearity,
       pe3_EN_read_weights,
       pe3_EN_reset_pe;

  // ports of submodule rstn
  wire rstn_OUT_RST;

  // rule scheduling signals
  wire CAN_FIRE_RL_test_dot_product,
       CAN_FIRE_RL_test_end,
       CAN_FIRE_RL_test_nonlinearity,
       CAN_FIRE_RL_test_rw_weights,
       WILL_FIRE_RL_test_dot_product,
       WILL_FIRE_RL_test_end,
       WILL_FIRE_RL_test_nonlinearity,
       WILL_FIRE_RL_test_rw_weights;

  // remaining internal signals
  reg [7 : 0] SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557,
	      SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556,
	      SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569,
	      tmp1_i__h3209;
  reg [5 : 0] CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31,
	      CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33,
	      fpart__h4886;
  reg [1 : 0] CASE_x526_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q30,
	      CASE_x864_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q32,
	      SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24;
  wire [81 : 0] _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d193,
		_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d196,
		_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d204,
		_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d213,
		_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d222,
		_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_ETC___d199,
		_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d208,
		_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d217,
		_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d226;
  wire [77 : 0] _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d260,
		_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d263,
		_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d271,
		_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d280,
		_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d289,
		_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d126,
		_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d129,
		_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d137,
		_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d146,
		_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d155,
		_0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d327,
		_0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d330,
		_0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d338,
		_0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d347,
		_0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d356,
		_0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d487,
		_0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d490,
		_0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d498,
		_0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d507,
		_0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d516,
		_0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d525,
		_0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d394,
		_0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d397,
		_0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d405,
		_0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d414,
		_0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d423,
		_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_ETC___d266,
		_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_ETC___d132,
		_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_get_parti_ETC___d333,
		_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_get_parti_ETC___d493,
		_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_PLUS_I_ETC___d400,
		_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d275,
		_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d141,
		_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_ge_ETC___d342,
		_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_ge_ETC___d502,
		_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_ETC___d409,
		_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d150,
		_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d284,
		_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d351,
		_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d418,
		_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d511,
		_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d159,
		_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d293,
		_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d360,
		_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d427,
		_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d520,
		_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0__ETC___d529;
  wire [40 : 0] digit__h5703,
		digit__h5761,
		digit__h5841,
		digit__h5921,
		digit__h6001,
		tx759_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_S_ETC__q5,
		tx839_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q6,
		tx919_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q7,
		tx999_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q8,
		tx__h5759,
		tx__h5839,
		tx__h5919,
		tx__h5999,
		y__h5889,
		y__h5969,
		y__h6049;
  wire [38 : 0] digit__h5092,
		digit__h5150,
		digit__h5230,
		digit__h5310,
		digit__h5390,
		digit__h6303,
		digit__h6361,
		digit__h6441,
		digit__h6521,
		digit__h6601,
		digit__h6903,
		digit__h6961,
		digit__h7041,
		digit__h7121,
		digit__h7201,
		digit__h7519,
		digit__h7577,
		digit__h7657,
		digit__h7737,
		digit__h7817,
		digit__h9316,
		digit__h9374,
		digit__h9454,
		digit__h9534,
		digit__h9614,
		digit__h9694,
		tx039_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q16,
		tx119_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q17,
		tx148_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_S_ETC__q1,
		tx199_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q18,
		tx228_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q2,
		tx308_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q3,
		tx359_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_I_ETC__q10,
		tx372_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q25,
		tx388_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q4,
		tx439_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q11,
		tx452_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q26,
		tx519_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q12,
		tx532_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q27,
		tx575_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q20,
		tx599_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q13,
		tx612_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q28,
		tx655_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q21,
		tx692_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_ETC__q29,
		tx735_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q22,
		tx815_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q23,
		tx959_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q15,
		tx__h5148,
		tx__h5228,
		tx__h5308,
		tx__h5388,
		tx__h6359,
		tx__h6439,
		tx__h6519,
		tx__h6599,
		tx__h6959,
		tx__h7039,
		tx__h7119,
		tx__h7199,
		tx__h7575,
		tx__h7655,
		tx__h7735,
		tx__h7815,
		tx__h9372,
		tx__h9452,
		tx__h9532,
		tx__h9612,
		tx__h9692,
		y__h5278,
		y__h5358,
		y__h5438,
		y__h6489,
		y__h6569,
		y__h6649,
		y__h7089,
		y__h7169,
		y__h7249,
		y__h7705,
		y__h7785,
		y__h7865,
		y__h9502,
		y__h9582,
		y__h9662,
		y__h9742;
  wire [31 : 0] IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d42,
		cycle2_39_MINUS_1___d555,
		x__h2526,
		x__h3191,
		x__h4898,
		x__h8864;
  wire [23 : 0] IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d56,
		x__h2929;
  wire [15 : 0] x__h3309, x__h3328;
  wire [8 : 0] SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS__ETC___d164;
  wire [7 : 0] tmp2_f__h3251,
	       tmp2_i__h3250,
	       x__h2662,
	       x__h2685,
	       x__h4789,
	       y_f__h3935;
  wire [5 : 0] x__h5113,
	       x__h6324,
	       x__h6924,
	       x__h7540,
	       x__h9337,
	       y_avValue_snd__h5056,
	       y_avValue_snd__h6267,
	       y_avValue_snd__h6867,
	       y_avValue_snd__h7483,
	       y_avValue_snd__h9280;
  wire [2 : 0] SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231,
	       SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97,
	       SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298,
	       SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462,
	       SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365;
  wire [1 : 0] pe1get_partial_sum_BITS_7_TO_6__q14,
	       pe3get_partial_sum_BITS_7_TO_6__q24,
	       x662_BITS_7_TO_6__q19,
	       x685_BITS_1_TO_0__q9;
  wire NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460,
       NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d104,
       NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d110,
       NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d118,
       NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d238,
       NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d244,
       NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d252,
       cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94,
       cycle1_ULT_10___d5,
       cycle2_39_ULE_8_43_AND_NOT_SEL_ARR_pe2_read_we_ETC___d575,
       cycle2_39_ULE_8___d543,
       cycle3_36_ULT_9___d439;

  // submodule clk
  ClockGen #(.v1Width(32'd5000),
	     .v2Width(32'd5000),
	     .initDelay(32'd0),
	     .initValue(32'd0),
	     .otherValue(32'd1)) clk(.CLK_OUT(clk_CLK_OUT));

  // submodule pe1
  mkPEFP16 pe1(.CLK(clk_CLK_OUT),
	       .RST_N(rstn_OUT_RST),
	       .add_constant_constant(pe1_add_constant_constant),
	       .add_input_inp(pe1_add_input_inp),
	       .load_weights_weights(pe1_load_weights_weights),
	       .EN_load_weights(pe1_EN_load_weights),
	       .EN_add_input(pe1_EN_add_input),
	       .EN_add_constant(pe1_EN_add_constant),
	       .EN_nonlinearity(pe1_EN_nonlinearity),
	       .EN_get_partial_sum(pe1_EN_get_partial_sum),
	       .EN_read_weights(pe1_EN_read_weights),
	       .EN_is_ready(pe1_EN_is_ready),
	       .EN_reset_pe(pe1_EN_reset_pe),
	       .RDY_load_weights(),
	       .RDY_add_input(),
	       .RDY_add_constant(),
	       .RDY_nonlinearity(),
	       .get_partial_sum(pe1_get_partial_sum),
	       .RDY_get_partial_sum(),
	       .read_weights(),
	       .RDY_read_weights(),
	       .is_ready(),
	       .RDY_is_ready(),
	       .RDY_reset_pe());

  // submodule pe2
  mkPEFP16 pe2(.CLK(clk_CLK_OUT),
	       .RST_N(rstn_OUT_RST),
	       .add_constant_constant(pe2_add_constant_constant),
	       .add_input_inp(pe2_add_input_inp),
	       .load_weights_weights(pe2_load_weights_weights),
	       .EN_load_weights(pe2_EN_load_weights),
	       .EN_add_input(pe2_EN_add_input),
	       .EN_add_constant(pe2_EN_add_constant),
	       .EN_nonlinearity(pe2_EN_nonlinearity),
	       .EN_get_partial_sum(pe2_EN_get_partial_sum),
	       .EN_read_weights(pe2_EN_read_weights),
	       .EN_is_ready(pe2_EN_is_ready),
	       .EN_reset_pe(pe2_EN_reset_pe),
	       .RDY_load_weights(),
	       .RDY_add_input(),
	       .RDY_add_constant(),
	       .RDY_nonlinearity(),
	       .get_partial_sum(),
	       .RDY_get_partial_sum(),
	       .read_weights(pe2_read_weights),
	       .RDY_read_weights(),
	       .is_ready(),
	       .RDY_is_ready(),
	       .RDY_reset_pe());

  // submodule pe3
  mkPEFP16 pe3(.CLK(clk_CLK_OUT),
	       .RST_N(rstn_OUT_RST),
	       .add_constant_constant(pe3_add_constant_constant),
	       .add_input_inp(pe3_add_input_inp),
	       .load_weights_weights(pe3_load_weights_weights),
	       .EN_load_weights(pe3_EN_load_weights),
	       .EN_add_input(pe3_EN_add_input),
	       .EN_add_constant(pe3_EN_add_constant),
	       .EN_nonlinearity(pe3_EN_nonlinearity),
	       .EN_get_partial_sum(pe3_EN_get_partial_sum),
	       .EN_read_weights(pe3_EN_read_weights),
	       .EN_is_ready(pe3_EN_is_ready),
	       .EN_reset_pe(pe3_EN_reset_pe),
	       .RDY_load_weights(),
	       .RDY_add_input(),
	       .RDY_add_constant(),
	       .RDY_nonlinearity(),
	       .get_partial_sum(pe3_get_partial_sum),
	       .RDY_get_partial_sum(),
	       .read_weights(),
	       .RDY_read_weights(),
	       .is_ready(),
	       .RDY_is_ready(),
	       .RDY_reset_pe());

  // submodule rstn
  InitialReset #(.RSTHOLD(32'd2)) rstn(.CLK(clk_CLK_OUT),
				       .OUT_RST(rstn_OUT_RST));

  // rule RL_test_end
  assign CAN_FIRE_RL_test_end =
	     cycle3 > 32'd10 && cycle1 > 32'd10 && !cycle2_39_ULE_8___d543 ;
  assign WILL_FIRE_RL_test_end = CAN_FIRE_RL_test_end ;

  // rule RL_test_dot_product
  assign CAN_FIRE_RL_test_dot_product = 1'd1 ;
  assign WILL_FIRE_RL_test_dot_product = 1'd1 ;

  // rule RL_test_nonlinearity
  assign CAN_FIRE_RL_test_nonlinearity = 1'd1 ;
  assign WILL_FIRE_RL_test_nonlinearity = 1'd1 ;

  // rule RL_test_rw_weights
  assign CAN_FIRE_RL_test_rw_weights = cycle2 < 32'd10 ;
  assign WILL_FIRE_RL_test_rw_weights = CAN_FIRE_RL_test_rw_weights ;

  // register cycle1
  assign cycle1_D_IN = cycle1 + 32'd1 ;
  assign cycle1_EN = 1'd1 ;

  // register cycle2
  assign cycle2_D_IN = cycle2 + 32'd1 ;
  assign cycle2_EN = CAN_FIRE_RL_test_rw_weights ;

  // register cycle3
  assign cycle3_D_IN = cycle3 + 32'd1 ;
  assign cycle3_EN = 1'd1 ;

  // register psum
  assign psum_D_IN = x__h2662 ;
  assign psum_EN = cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 ;

  // register psum2
  assign psum2_D_IN = 8'h0 ;
  assign psum2_EN = 1'b0 ;

  // submodule pe1
  assign pe1_add_constant_constant = 8'h0 ;
  assign pe1_add_input_inp =
	     { CASE_x526_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q30,
	       CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 } ;
  assign pe1_load_weights_weights = 128'h010000000200FF000000020001000100 ;
  assign pe1_EN_load_weights = cycle1 == 32'd0 ;
  assign pe1_EN_add_input =
	     cycle1 != 32'd0 &&
	     (cycle1 == 32'd1 || cycle1_ULT_10___d5 && cycle1 < 32'd9) ;
  assign pe1_EN_add_constant = 1'b0 ;
  assign pe1_EN_nonlinearity = 1'b0 ;
  assign pe1_EN_get_partial_sum =
	     cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 ;
  assign pe1_EN_read_weights = 1'b0 ;
  assign pe1_EN_is_ready = 1'b0 ;
  assign pe1_EN_reset_pe = 1'b0 ;

  // submodule pe2
  assign pe2_add_constant_constant = 8'h0 ;
  assign pe2_add_input_inp = 8'h0 ;
  assign pe2_load_weights_weights = 128'h010000000200FF000000020001000100 ;
  assign pe2_EN_load_weights =
	     WILL_FIRE_RL_test_rw_weights && cycle2 == 32'd0 ;
  assign pe2_EN_add_input = 1'b0 ;
  assign pe2_EN_add_constant = 1'b0 ;
  assign pe2_EN_nonlinearity = 1'b0 ;
  assign pe2_EN_get_partial_sum = 1'b0 ;
  assign pe2_EN_read_weights =
	     WILL_FIRE_RL_test_rw_weights && cycle2 != 32'd0 &&
	     cycle2_39_ULE_8___d543 ;
  assign pe2_EN_is_ready = 1'b0 ;
  assign pe2_EN_reset_pe = 1'b0 ;

  // submodule pe3
  assign pe3_add_constant_constant = 8'h0 ;
  assign pe3_add_input_inp =
	     { CASE_x864_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q32,
	       CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 } ;
  assign pe3_load_weights_weights = 128'h010000000200FF000000020001000100 ;
  assign pe3_EN_load_weights = cycle3 == 32'd0 ;
  assign pe3_EN_add_input = cycle3 != 32'd0 && cycle3_36_ULT_9___d439 ;
  assign pe3_EN_add_constant = 1'b0 ;
  assign pe3_EN_nonlinearity = !cycle3_36_ULT_9___d439 && cycle3 == 32'd9 ;
  assign pe3_EN_get_partial_sum =
	     cycle3 != 32'd0 && (cycle3_36_ULT_9___d439 || cycle3 != 32'd9) ;
  assign pe3_EN_read_weights = 1'b0 ;
  assign pe3_EN_is_ready = 1'b0 ;
  assign pe3_EN_reset_pe = 1'b0 ;

  // remaining internal signals
  assign IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d42 =
	     x__h3309 * x__h3328 ;
  assign IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d56 =
	     x__h3191[31:8] + { 16'd0, y_f__h3935 } ;
  assign NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460 =
	     !cycle3_36_ULT_9___d439 && cycle3 != 32'd9 &&
	     (pe3_get_partial_sum[7:6] != 2'd0 ||
	      pe3_get_partial_sum[5:0] != 6'd0) ;
  assign NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d104 =
	     (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	      x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	     fpart__h4886 != 6'd0 &&
	     SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97 == 3'd7 ;
  assign NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d110 =
	     (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	      x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	     SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97[2] &&
	     fpart__h4886 != 6'd0 &&
	     SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97 != 3'd7 ;
  assign NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d118 =
	     (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	      x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	     (!SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97[2] ||
	      fpart__h4886 == 6'd0) ;
  assign NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d238 =
	     (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	      x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	     x__h4789[7:2] != 6'd0 &&
	     SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231 ==
	     3'd7 ;
  assign NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d244 =
	     (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	      x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	     SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231[2] &&
	     x__h4789[7:2] != 6'd0 &&
	     SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231 !=
	     3'd7 ;
  assign NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d252 =
	     (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	      x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	     (!SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231[2] ||
	      x__h4789[7:2] == 6'd0) ;
  assign SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231 =
	     { x685_BITS_1_TO_0__q9[1], x685_BITS_1_TO_0__q9 } ;
  assign SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97 =
	     { SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24[1],
	       SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24 } ;
  assign SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS__ETC___d164 =
	     { tmp1_i__h3209[7], tmp1_i__h3209 } ;
  assign SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298 =
	     { pe1get_partial_sum_BITS_7_TO_6__q14[1],
	       pe1get_partial_sum_BITS_7_TO_6__q14 } ;
  assign SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462 =
	     { pe3get_partial_sum_BITS_7_TO_6__q24[1],
	       pe3get_partial_sum_BITS_7_TO_6__q24 } ;
  assign SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365 =
	     { x662_BITS_7_TO_6__q19[1], x662_BITS_7_TO_6__q19 } ;
  assign _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d260 =
	     { 33'd0, x__h6324 } * 39'd10 ;
  assign _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d263 =
	     { 33'd0, x__h6324 } * 39'd100 ;
  assign _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d271 =
	     { 33'd0, x__h6324 } * 39'd1000 ;
  assign _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d280 =
	     { 33'd0, x__h6324 } * 39'd10000 ;
  assign _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d289 =
	     { 33'd0, x__h6324 } * 39'd100000 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d126 =
	     { 33'd0, x__h5113 } * 39'd10 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d129 =
	     { 33'd0, x__h5113 } * 39'd100 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d137 =
	     { 33'd0, x__h5113 } * 39'd1000 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d146 =
	     { 33'd0, x__h5113 } * 39'd10000 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d155 =
	     { 33'd0, x__h5113 } * 39'd100000 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d193 =
	     41'd0 * 41'd10 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d196 =
	     41'd0 * 41'd100 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d204 =
	     41'd0 * 41'd1000 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d213 =
	     41'd0 * 41'd10000 ;
  assign _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d222 =
	     41'd0 * 41'd100000 ;
  assign _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d327 =
	     { 33'd0, x__h6924 } * 39'd10 ;
  assign _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d330 =
	     { 33'd0, x__h6924 } * 39'd100 ;
  assign _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d338 =
	     { 33'd0, x__h6924 } * 39'd1000 ;
  assign _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d347 =
	     { 33'd0, x__h6924 } * 39'd10000 ;
  assign _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d356 =
	     { 33'd0, x__h6924 } * 39'd100000 ;
  assign _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d487 =
	     { 33'd0, x__h9337 } * 39'd10 ;
  assign _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d490 =
	     { 33'd0, x__h9337 } * 39'd100 ;
  assign _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d498 =
	     { 33'd0, x__h9337 } * 39'd1000 ;
  assign _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d507 =
	     { 33'd0, x__h9337 } * 39'd10000 ;
  assign _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d516 =
	     { 33'd0, x__h9337 } * 39'd100000 ;
  assign _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d525 =
	     { 33'd0, x__h9337 } * 39'd1000000 ;
  assign _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d394 =
	     { 33'd0, x__h7540 } * 39'd10 ;
  assign _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d397 =
	     { 33'd0, x__h7540 } * 39'd100 ;
  assign _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d405 =
	     { 33'd0, x__h7540 } * 39'd1000 ;
  assign _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d414 =
	     { 33'd0, x__h7540 } * 39'd10000 ;
  assign _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d423 =
	     { 33'd0, x__h7540 } * 39'd100000 ;
  assign _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_ETC___d266 =
	     39'd10 * digit__h6303 ;
  assign _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_ETC___d132 =
	     39'd10 * digit__h5092 ;
  assign _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_ETC___d199 =
	     41'd10 * digit__h5703 ;
  assign _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_get_parti_ETC___d333 =
	     39'd10 * digit__h6903 ;
  assign _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_get_parti_ETC___d493 =
	     39'd10 * digit__h9316 ;
  assign _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_PLUS_I_ETC___d400 =
	     39'd10 * digit__h7519 ;
  assign _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d275 =
	     39'd10 * y__h6489 ;
  assign _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d141 =
	     39'd10 * y__h5278 ;
  assign _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d208 =
	     41'd10 * y__h5889 ;
  assign _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_ge_ETC___d342 =
	     39'd10 * y__h7089 ;
  assign _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_ge_ETC___d502 =
	     39'd10 * y__h9502 ;
  assign _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_ETC___d409 =
	     39'd10 * y__h7705 ;
  assign _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d150 =
	     39'd10 * y__h5358 ;
  assign _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d217 =
	     41'd10 * y__h5969 ;
  assign _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d284 =
	     39'd10 * y__h6569 ;
  assign _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d351 =
	     39'd10 * y__h7169 ;
  assign _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d418 =
	     39'd10 * y__h7785 ;
  assign _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d511 =
	     39'd10 * y__h9582 ;
  assign _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d159 =
	     39'd10 * y__h5438 ;
  assign _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d226 =
	     41'd10 * y__h6049 ;
  assign _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d293 =
	     39'd10 * y__h6649 ;
  assign _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d360 =
	     39'd10 * y__h7249 ;
  assign _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d427 =
	     39'd10 * y__h7865 ;
  assign _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d520 =
	     39'd10 * y__h9662 ;
  assign _10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0__ETC___d529 =
	     39'd10 * y__h9742 ;
  assign cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94 =
	     cycle1_ULT_10___d5 &&
	     (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	      x__h2662[5:0] != pe1_get_partial_sum[5:0]) ;
  assign cycle1_ULT_10___d5 = cycle1 < 32'd10 ;
  assign cycle2_39_MINUS_1___d555 = cycle2 - 32'd1 ;
  assign cycle2_39_ULE_8_43_AND_NOT_SEL_ARR_pe2_read_we_ETC___d575 =
	     cycle2_39_ULE_8___d543 &&
	     (SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 !=
	      SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557 ||
	      SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 !=
	      8'd0) ;
  assign cycle2_39_ULE_8___d543 = cycle2 <= 32'd8 ;
  assign cycle3_36_ULT_9___d439 = cycle3 < 32'd9 ;
  assign digit__h5092 =
	     { 35'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d126[9:6] } ;
  assign digit__h5150 =
	     { 35'd0,
	       tx148_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_S_ETC__q1[3:0] } ;
  assign digit__h5230 =
	     { 35'd0,
	       tx228_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q2[3:0] } ;
  assign digit__h5310 =
	     { 35'd0,
	       tx308_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q3[3:0] } ;
  assign digit__h5390 =
	     { 35'd0,
	       tx388_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q4[3:0] } ;
  assign digit__h5703 =
	     { 37'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d193[11:8] } ;
  assign digit__h5761 =
	     { 37'd0,
	       tx759_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_S_ETC__q5[3:0] } ;
  assign digit__h5841 =
	     { 37'd0,
	       tx839_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q6[3:0] } ;
  assign digit__h5921 =
	     { 37'd0,
	       tx919_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q7[3:0] } ;
  assign digit__h6001 =
	     { 37'd0,
	       tx999_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q8[3:0] } ;
  assign digit__h6303 =
	     { 35'd0,
	       _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d260[9:6] } ;
  assign digit__h6361 =
	     { 35'd0,
	       tx359_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_I_ETC__q10[3:0] } ;
  assign digit__h6441 =
	     { 35'd0,
	       tx439_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q11[3:0] } ;
  assign digit__h6521 =
	     { 35'd0,
	       tx519_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q12[3:0] } ;
  assign digit__h6601 =
	     { 35'd0,
	       tx599_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q13[3:0] } ;
  assign digit__h6903 =
	     { 35'd0,
	       _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d327[9:6] } ;
  assign digit__h6961 =
	     { 35'd0,
	       tx959_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q15[3:0] } ;
  assign digit__h7041 =
	     { 35'd0,
	       tx039_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q16[3:0] } ;
  assign digit__h7121 =
	     { 35'd0,
	       tx119_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q17[3:0] } ;
  assign digit__h7201 =
	     { 35'd0,
	       tx199_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q18[3:0] } ;
  assign digit__h7519 =
	     { 35'd0,
	       _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d394[9:6] } ;
  assign digit__h7577 =
	     { 35'd0,
	       tx575_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q20[3:0] } ;
  assign digit__h7657 =
	     { 35'd0,
	       tx655_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q21[3:0] } ;
  assign digit__h7737 =
	     { 35'd0,
	       tx735_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q22[3:0] } ;
  assign digit__h7817 =
	     { 35'd0,
	       tx815_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q23[3:0] } ;
  assign digit__h9316 =
	     { 35'd0,
	       _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d487[9:6] } ;
  assign digit__h9374 =
	     { 35'd0,
	       tx372_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q25[3:0] } ;
  assign digit__h9454 =
	     { 35'd0,
	       tx452_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q26[3:0] } ;
  assign digit__h9534 =
	     { 35'd0,
	       tx532_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q27[3:0] } ;
  assign digit__h9614 =
	     { 35'd0,
	       tx612_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q28[3:0] } ;
  assign digit__h9694 =
	     { 35'd0,
	       tx692_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_ETC__q29[3:0] } ;
  assign pe1get_partial_sum_BITS_7_TO_6__q14 = pe1_get_partial_sum[7:6] ;
  assign pe3get_partial_sum_BITS_7_TO_6__q24 = pe3_get_partial_sum[7:6] ;
  assign tmp2_f__h3251 = { fpart__h4886, 2'd0 } ;
  assign tmp2_i__h3250 =
	     { {6{SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24[1]}},
	       SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24 } ;
  assign tx039_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q16 =
	     tx__h7039 -
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_ge_ETC___d342[38:0] ;
  assign tx119_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q17 =
	     tx__h7119 -
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d351[38:0] ;
  assign tx148_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_S_ETC__q1 =
	     tx__h5148 -
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_ETC___d132[38:0] ;
  assign tx199_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q18 =
	     tx__h7199 -
	     _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d360[38:0] ;
  assign tx228_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q2 =
	     tx__h5228 -
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d141[38:0] ;
  assign tx308_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q3 =
	     tx__h5308 -
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d150[38:0] ;
  assign tx359_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_I_ETC__q10 =
	     tx__h6359 -
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_ETC___d266[38:0] ;
  assign tx372_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q25 =
	     tx__h9372 -
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_get_parti_ETC___d493[38:0] ;
  assign tx388_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q4 =
	     tx__h5388 -
	     _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d159[38:0] ;
  assign tx439_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q11 =
	     tx__h6439 -
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d275[38:0] ;
  assign tx452_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q26 =
	     tx__h9452 -
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_ge_ETC___d502[38:0] ;
  assign tx519_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q12 =
	     tx__h6519 -
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d284[38:0] ;
  assign tx532_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q27 =
	     tx__h9532 -
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d511[38:0] ;
  assign tx575_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q20 =
	     tx__h7575 -
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_PLUS_I_ETC___d400[38:0] ;
  assign tx599_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q13 =
	     tx__h6599 -
	     _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d293[38:0] ;
  assign tx612_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q28 =
	     tx__h9612 -
	     _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d520[38:0] ;
  assign tx655_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q21 =
	     tx__h7655 -
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_ETC___d409[38:0] ;
  assign tx692_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_ETC__q29 =
	     tx__h9692 -
	     _10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0__ETC___d529[38:0] ;
  assign tx735_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q22 =
	     tx__h7735 -
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d418[38:0] ;
  assign tx759_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_S_ETC__q5 =
	     tx__h5759 -
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_ETC___d199[40:0] ;
  assign tx815_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q23 =
	     tx__h7815 -
	     _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d427[38:0] ;
  assign tx839_MINUS_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_ETC__q6 =
	     tx__h5839 -
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d208[40:0] ;
  assign tx919_MINUS_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CO_ETC__q7 =
	     tx__h5919 -
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d217[40:0] ;
  assign tx959_MINUS_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_p_ETC__q15 =
	     tx__h6959 -
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_get_parti_ETC___d333[38:0] ;
  assign tx999_MINUS_10_MUL_10_MUL_10_MUL_10_MUL_0_CONC_ETC__q8 =
	     tx__h5999 -
	     _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d226[40:0] ;
  assign tx__h5148 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d129[38:6] } ;
  assign tx__h5228 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d137[38:6] } ;
  assign tx__h5308 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d146[38:6] } ;
  assign tx__h5388 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d155[38:6] } ;
  assign tx__h5759 =
	     { 8'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d196[40:8] } ;
  assign tx__h5839 =
	     { 8'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d204[40:8] } ;
  assign tx__h5919 =
	     { 8'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d213[40:8] } ;
  assign tx__h5999 =
	     { 8'd0,
	       _0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_c_ETC___d222[40:8] } ;
  assign tx__h6359 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d263[38:6] } ;
  assign tx__h6439 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d271[38:6] } ;
  assign tx__h6519 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d280[38:6] } ;
  assign tx__h6599 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d289[38:6] } ;
  assign tx__h6959 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d330[38:6] } ;
  assign tx__h7039 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d338[38:6] } ;
  assign tx__h7119 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d347[38:6] } ;
  assign tx__h7199 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe1_get_partial_sum_5_BITS_7__ETC___d356[38:6] } ;
  assign tx__h7575 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d397[38:6] } ;
  assign tx__h7655 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d405[38:6] } ;
  assign tx__h7735 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d414[38:6] } ;
  assign tx__h7815 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d423[38:6] } ;
  assign tx__h9372 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d490[38:6] } ;
  assign tx__h9452 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d498[38:6] } ;
  assign tx__h9532 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d507[38:6] } ;
  assign tx__h9612 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d516[38:6] } ;
  assign tx__h9692 =
	     { 6'd0,
	       _0_CONCAT_IF_SEXT_pe3_get_partial_sum_51_BITS_7_ETC___d525[38:6] } ;
  assign x662_BITS_7_TO_6__q19 = x__h2662[7:6] ;
  assign x685_BITS_1_TO_0__q9 = x__h2685[1:0] ;
  assign x__h2526 = cycle1 - 32'd1 ;
  assign x__h2662 = psum + { x__h2685[1:0], x__h4789[7:2] } ;
  assign x__h2685 =
	     (!x__h2929[23] && (x__h2929[15] || x__h2929[23:16] != 8'd0)) ?
	       8'd127 :
	       ((x__h2929[23] &&
		 (!x__h2929[15] || ~x__h2929[23:16] != 8'd0)) ?
		  8'd128 :
		  x__h2929[15:8]) ;
  assign x__h2929 =
	     (!x__h3191[31] &&
	      IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d56[23]) ?
	       24'd8388607 :
	       IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d56 ;
  assign x__h3191 =
	     (tmp1_i__h3209[7] && !tmp2_i__h3250[7] ||
	      tmp2_i__h3250[7] && !tmp1_i__h3209[7]) ?
	       -IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d42 :
	       IF_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS_2__ETC___d42 ;
  assign x__h3309 =
	     tmp1_i__h3209[7] ?
	       -{ tmp1_i__h3209, 8'd0 } :
	       { tmp1_i__h3209, 8'd0 } ;
  assign x__h3328 =
	     tmp2_i__h3250[7] ?
	       -{ tmp2_i__h3250, tmp2_f__h3251 } :
	       { tmp2_i__h3250, tmp2_f__h3251 } ;
  assign x__h4789 =
	     (!x__h2929[23] && (x__h2929[15] || x__h2929[23:16] != 8'd0)) ?
	       8'd255 :
	       ((x__h2929[23] &&
		 (!x__h2929[15] || ~x__h2929[23:16] != 8'd0)) ?
		  8'd0 :
		  x__h2929[7:0]) ;
  assign x__h4898 = cycle1 - 32'd2 ;
  assign x__h5113 =
	     (SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97[2] &&
	      fpart__h4886 != 6'd0) ?
	       y_avValue_snd__h5056 :
	       fpart__h4886 ;
  assign x__h6324 =
	     (SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231[2] &&
	      x__h4789[7:2] != 6'd0) ?
	       y_avValue_snd__h6267 :
	       x__h4789[7:2] ;
  assign x__h6924 =
	     (SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298[2] &&
	      pe1_get_partial_sum[5:0] != 6'd0) ?
	       y_avValue_snd__h6867 :
	       pe1_get_partial_sum[5:0] ;
  assign x__h7540 =
	     (SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365[2] &&
	      x__h2662[5:0] != 6'd0) ?
	       y_avValue_snd__h7483 :
	       x__h2662[5:0] ;
  assign x__h8864 = cycle3 - 32'd1 ;
  assign x__h9337 =
	     (SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462[2] &&
	      pe3_get_partial_sum[5:0] != 6'd0) ?
	       y_avValue_snd__h9280 :
	       pe3_get_partial_sum[5:0] ;
  assign y__h5278 =
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_ETC___d132[38:0] +
	     digit__h5150 ;
  assign y__h5358 =
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d141[38:0] +
	     digit__h5230 ;
  assign y__h5438 =
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d150[38:0] +
	     digit__h5310 ;
  assign y__h5889 =
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_ETC___d199[40:0] +
	     digit__h5761 ;
  assign y__h5969 =
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d208[40:0] +
	     digit__h5841 ;
  assign y__h6049 =
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d217[40:0] +
	     digit__h5921 ;
  assign y__h6489 =
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_ETC___d266[38:0] +
	     digit__h6361 ;
  assign y__h6569 =
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d275[38:0] +
	     digit__h6441 ;
  assign y__h6649 =
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d284[38:0] +
	     digit__h6521 ;
  assign y__h7089 =
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_get_parti_ETC___d333[38:0] +
	     digit__h6961 ;
  assign y__h7169 =
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_ge_ETC___d342[38:0] +
	     digit__h7041 ;
  assign y__h7249 =
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d351[38:0] +
	     digit__h7121 ;
  assign y__h7705 =
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_PLUS_I_ETC___d400[38:0] +
	     digit__h7577 ;
  assign y__h7785 =
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_ETC___d409[38:0] +
	     digit__h7657 ;
  assign y__h7865 =
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d418[38:0] +
	     digit__h7737 ;
  assign y__h9502 =
	     _10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_get_parti_ETC___d493[38:0] +
	     digit__h9374 ;
  assign y__h9582 =
	     _10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe3_ge_ETC___d502[38:0] +
	     digit__h9454 ;
  assign y__h9662 =
	     _10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d511[38:0] +
	     digit__h9534 ;
  assign y__h9742 =
	     _10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d520[38:0] +
	     digit__h9614 ;
  assign y_avValue_snd__h5056 = 6'd0 - fpart__h4886 ;
  assign y_avValue_snd__h6267 = 6'd0 - x__h4789[7:2] ;
  assign y_avValue_snd__h6867 = 6'd0 - pe1_get_partial_sum[5:0] ;
  assign y_avValue_snd__h7483 = 6'd0 - x__h2662[5:0] ;
  assign y_avValue_snd__h9280 = 6'd0 - pe3_get_partial_sum[5:0] ;
  assign y_f__h3935 =
	     (x__h3191[7] && (x__h3191[31] || x__h3191[6:0] != 7'd0)) ?
	       8'd1 :
	       8'd0 ;
  always@(x__h4898)
  begin
    case (x__h4898)
      32'd0: fpart__h4886 = 6'd32;
      32'd1: fpart__h4886 = 6'd48;
      32'd2: fpart__h4886 = 6'd16;
      32'd3: fpart__h4886 = 6'd58;
      32'd4: fpart__h4886 = 6'd44;
      32'd5, 32'd6, 32'd7: fpart__h4886 = 6'd0;
      default: fpart__h4886 = 6'b101010 /* unspecified value */ ;
    endcase
  end
  always@(x__h4898)
  begin
    case (x__h4898)
      32'd0, 32'd1, 32'd7: tmp1_i__h3209 = 8'd1;
      32'd2, 32'd5: tmp1_i__h3209 = 8'd2;
      32'd3, 32'd6: tmp1_i__h3209 = 8'd0;
      32'd4: tmp1_i__h3209 = 8'd255;
      default: tmp1_i__h3209 = 8'b10101010 /* unspecified value */ ;
    endcase
  end
  always@(x__h4898)
  begin
    case (x__h4898)
      32'd0, 32'd2, 32'd4, 32'd5, 32'd6:
	  SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24 = 2'd0;
      32'd1, 32'd3, 32'd7:
	  SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24 = 2'd3;
      default: SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1___d24 =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  always@(cycle2_39_MINUS_1___d555 or pe2_read_weights)
  begin
    case (cycle2_39_MINUS_1___d555)
      32'd0:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[15:8];
      32'd1:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[31:24];
      32'd2:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[47:40];
      32'd3:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[63:56];
      32'd4:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[79:72];
      32'd5:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[95:88];
      32'd6:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[111:104];
      32'd7:
	  SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
	      pe2_read_weights[127:120];
      default: SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556 =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  always@(cycle2_39_MINUS_1___d555)
  begin
    case (cycle2_39_MINUS_1___d555)
      32'd0, 32'd1, 32'd7:
	  SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557 = 8'd1;
      32'd2, 32'd5:
	  SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557 = 8'd2;
      32'd3, 32'd6:
	  SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557 = 8'd0;
      32'd4: SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557 = 8'd255;
      default: SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557 =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  always@(cycle2_39_MINUS_1___d555 or pe2_read_weights)
  begin
    case (cycle2_39_MINUS_1___d555)
      32'd0:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[7:0];
      32'd1:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[23:16];
      32'd2:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[39:32];
      32'd3:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[55:48];
      32'd4:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[71:64];
      32'd5:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[87:80];
      32'd6:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[103:96];
      32'd7:
	  SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
	      pe2_read_weights[119:112];
      default: SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 =
		   8'b10101010 /* unspecified value */ ;
    endcase
  end
  always@(x__h2526)
  begin
    case (x__h2526)
      32'd0, 32'd2, 32'd4, 32'd5, 32'd6:
	  CASE_x526_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q30 = 2'd0;
      32'd1, 32'd3, 32'd7:
	  CASE_x526_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q30 = 2'd3;
      default: CASE_x526_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q30 =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  always@(x__h2526)
  begin
    case (x__h2526)
      32'd0: CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 = 6'd32;
      32'd1: CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 = 6'd48;
      32'd2: CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 = 6'd16;
      32'd3: CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 = 6'd58;
      32'd4: CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 = 6'd44;
      32'd5, 32'd6, 32'd7:
	  CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 = 6'd0;
      default: CASE_x526_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q31 =
		   6'b101010 /* unspecified value */ ;
    endcase
  end
  always@(x__h8864)
  begin
    case (x__h8864)
      32'd0, 32'd2, 32'd4, 32'd5, 32'd6:
	  CASE_x864_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q32 = 2'd0;
      32'd1, 32'd3, 32'd7:
	  CASE_x864_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q32 = 2'd3;
      default: CASE_x864_0_0_1_3_2_0_3_3_4_0_5_0_6_0_7_3_DONT_ETC__q32 =
		   2'b10 /* unspecified value */ ;
    endcase
  end
  always@(x__h8864)
  begin
    case (x__h8864)
      32'd0: CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 = 6'd32;
      32'd1: CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 = 6'd48;
      32'd2: CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 = 6'd16;
      32'd3: CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 = 6'd58;
      32'd4: CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 = 6'd44;
      32'd5, 32'd6, 32'd7:
	  CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 = 6'd0;
      default: CASE_x864_0_32_1_48_2_16_3_58_4_44_5_0_6_0_7_0_ETC__q33 =
		   6'b101010 /* unspecified value */ ;
    endcase
  end

  // handling of inlined registers

  always@(posedge clk_CLK_OUT)
  begin
    if (rstn_OUT_RST == `BSV_RESET_VALUE)
      begin
        cycle1 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	cycle2 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	cycle3 <= `BSV_ASSIGNMENT_DELAY 32'd0;
	psum <= `BSV_ASSIGNMENT_DELAY 8'd0;
	psum2 <= `BSV_ASSIGNMENT_DELAY 8'd0;
      end
    else
      begin
        if (cycle1_EN) cycle1 <= `BSV_ASSIGNMENT_DELAY cycle1_D_IN;
	if (cycle2_EN) cycle2 <= `BSV_ASSIGNMENT_DELAY cycle2_D_IN;
	if (cycle3_EN) cycle3 <= `BSV_ASSIGNMENT_DELAY cycle3_D_IN;
	if (psum_EN) psum <= `BSV_ASSIGNMENT_DELAY psum_D_IN;
	if (psum2_EN) psum2 <= `BSV_ASSIGNMENT_DELAY psum2_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    cycle1 = 32'hAAAAAAAA;
    cycle2 = 32'hAAAAAAAA;
    cycle3 = 32'hAAAAAAAA;
    psum = 8'hAA;
    psum2 = 8'hAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge clk_CLK_OUT)
  begin
    #0;
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_test_end) $finish(32'd1);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("Fail! ");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d104)
	$write("-0.");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d110)
	$write("%0d.",
	       $signed(SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97 +
		       3'd1));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d118)
	$write("%0d.",
	       $signed(SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cycle1_MINUS_2_1_4___d97));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5092);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5150);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5230);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5310);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5390);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write(" x ");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	   x__h2662[5:0] != pe1_get_partial_sum[5:0]))
	$write("%0d.",
	       $signed(SEXT_SEL_ARR_1_1_2_0_255_2_0_1_0_cycle1_MINUS__ETC___d164));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5703);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5761);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5841);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h5921);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6001);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write(" = ");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d238)
	$write("-0.");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d244)
	$write("%0d.",
	       $signed(SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231 +
		       3'd1));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  NOT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_ETC___d252)
	$write("%0d.",
	       $signed(SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1_2_0_255_2_0__ETC___d231));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6303);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6361);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6441);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6521);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6601);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write(" result:  ");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	   x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	  SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298[2] &&
	  pe1_get_partial_sum[5:0] != 6'd0 &&
	  SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298 == 3'd7)
	$write("-0.");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	   x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	  SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298[2] &&
	  pe1_get_partial_sum[5:0] != 6'd0 &&
	  SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298 != 3'd7)
	$write("%0d.",
	       $signed(SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298 +
		       3'd1));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	   x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	  (!SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298[2] ||
	   pe1_get_partial_sum[5:0] == 6'd0))
	$write("%0d.",
	       $signed(SEXT_pe1_get_partial_sum_5_BITS_7_TO_6_6___d298));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6903);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h6961);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7041);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7121);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7201);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write(" expected:  ");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	   x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	  SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365[2] &&
	  x__h2662[5:0] != 6'd0 &&
	  SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365 == 3'd7)
	$write("-0.");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	   x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	  SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365[2] &&
	  x__h2662[5:0] != 6'd0 &&
	  SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365 != 3'd7)
	$write("%0d.",
	       $signed(SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365 +
		       3'd1));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && cycle1_ULT_10___d5 &&
	  (x__h2662[7:6] != pe1_get_partial_sum[7:6] ||
	   x__h2662[5:0] != pe1_get_partial_sum[5:0]) &&
	  (!SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365[2] ||
	   x__h2662[5:0] == 6'd0))
	$write("%0d.",
	       $signed(SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d365));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7519);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7577);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7657);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7737);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$write("%0d", digit__h7817);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$display;
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 &&
	  cycle1_ULT_10_AND_NOT_psum_9_PLUS_IF_NOT_IF_NO_ETC___d94)
	$finish(32'd1);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle1 != 32'd0 && cycle1 != 32'd1 && !cycle1_ULT_10___d5)
	$display("Passed all dot product tests.");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("Failed nonlinearity! Recvd: ");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 && !cycle3_36_ULT_9___d439 && cycle3 != 32'd9 &&
	  SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462[2] &&
	  pe3_get_partial_sum[5:0] != 6'd0 &&
	  SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462 == 3'd7)
	$write("-0.");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 && !cycle3_36_ULT_9___d439 && cycle3 != 32'd9 &&
	  SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462[2] &&
	  pe3_get_partial_sum[5:0] != 6'd0 &&
	  SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462 != 3'd7)
	$write("%0d.",
	       $signed(SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462 +
		       3'd1));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 && !cycle3_36_ULT_9___d439 && cycle3 != 32'd9 &&
	  (pe3_get_partial_sum[7:6] != 2'd0 ||
	   pe3_get_partial_sum[5:0] != 6'd0) &&
	  (!SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462[2] ||
	   pe3_get_partial_sum[5:0] == 6'd0))
	$write("%0d.",
	       $signed(SEXT_pe3_get_partial_sum_51_BITS_7_TO_6_52___d462));
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("%0d", digit__h9316);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("%0d", digit__h9374);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("%0d", digit__h9454);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("%0d", digit__h9534);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("%0d", digit__h9614);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("%0d", digit__h9694);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 &&
	  NOT_cycle3_36_ULT_9_39_49_AND_NOT_cycle3_36_EQ_ETC___d460)
	$write("\n");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (cycle3 != 32'd0 && !cycle3_36_ULT_9___d439 && cycle3 != 32'd9 &&
	  pe3_get_partial_sum[7:6] == 2'd0 &&
	  pe3_get_partial_sum[5:0] == 6'd0)
	$display("Passed all non-linearity tests.");
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_test_rw_weights && cycle2 != 32'd0 &&
	  cycle2_39_ULE_8_43_AND_NOT_SEL_ARR_pe2_read_we_ETC___d575)
	$display("Fail! %d vs. %d, cycle2 %d",
		 { SEL_ARR_pe2_read_weights_45_BITS_15_TO_8_46_pe_ETC___d556,
		   SEL_ARR_pe2_read_weights_45_BITS_7_TO_0_60_pe2_ETC___d569 },
		 { SEL_ARR_1_1_2_0_255_2_0_1_0_cycle2_39_MINUS_1_55___d557,
		   8'd0 },
		 cycle2_39_MINUS_1___d555);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_test_rw_weights && cycle2 != 32'd0 &&
	  cycle2_39_ULE_8_43_AND_NOT_SEL_ARR_pe2_read_we_ETC___d575)
	$finish(32'd1);
    if (rstn_OUT_RST != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_test_rw_weights && cycle2 != 32'd0 &&
	  !cycle2_39_ULE_8___d543)
	$display("Passed all r/w weight tests.");
  end
  // synopsys translate_on
endmodule  // mkPEFPTest

