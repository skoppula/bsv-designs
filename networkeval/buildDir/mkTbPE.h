/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Tue Oct 31 15:39:30 EDT 2017
 * 
 */

/* Generation options: */
#ifndef __mkTbPE_h__
#define __mkTbPE_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbPE module */
class MOD_mkTbPE : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_cycle1;
  MOD_Reg<tUInt32> INST_cycle2;
  MOD_Reg<tUInt32> INST_cycle3;
  MOD_Reg<tUInt8> INST_pe1_neg_partial_sum;
  MOD_Reg<tUInt8> INST_pe1_pos_partial_sum;
  MOD_Reg<tUInt8> INST_pe1_step;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_0;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_1;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_2;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_3;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_4;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_5;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_6;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_7;
  MOD_Reg<tUInt8> INST_pe2_neg_partial_sum;
  MOD_Reg<tUInt8> INST_pe2_pos_partial_sum;
  MOD_Reg<tUInt8> INST_pe2_step;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_0;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_1;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_2;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_3;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_4;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_5;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_6;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_7;
  MOD_Reg<tUInt8> INST_pe3_neg_partial_sum;
  MOD_Reg<tUInt8> INST_pe3_pos_partial_sum;
  MOD_Reg<tUInt8> INST_pe3_step;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_0;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_1;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_2;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_3;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_4;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_5;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_6;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_7;
  MOD_Reg<tUInt8> INST_psum;
  MOD_Reg<tUInt8> INST_psum2;
 
 /* Constructor */
 public:
  MOD_mkTbPE(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_x__h14205;
  tUInt32 DEF_x__h14211;
  tUInt32 DEF_x__h14218;
  tUInt8 DEF_NOT_cycle2_63_ULE_8_67___d484;
  tUInt8 DEF_cycle2_63_ULE_8___d467;
 
 /* Local definitions */
 private:
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d389;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d380;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_5_ETC___d371;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_5_PLUS_I_ETC___d362;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d322;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d313;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_po_ETC___d304;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_pos_parti_ETC___d295;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d255;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d246;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d237;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_ETC___d228;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d180;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d171;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d162;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_ETC___d153;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_5_PLUS_IF_NOT_IF_NOT_IF__ETC___d385;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_5_PLUS_IF_NOT_IF_NOT_IF__ETC___d376;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_5_PLUS_IF_NOT_IF_NOT_IF__ETC___d367;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_5_PLUS_IF_NOT_IF_NOT_IF__ETC___d359;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_pos_partial_sum_0_PLUS_pe_ETC___d318;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_pos_partial_sum_0_PLUS_pe_ETC___d309;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_pos_partial_sum_0_PLUS_pe_ETC___d300;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_pos_partial_sum_0_PLUS_pe_ETC___d292;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_0_CONCAT_SEL_ETC___d251;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_0_CONCAT_SEL_ETC___d242;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_0_CONCAT_SEL_ETC___d233;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_0_CONCAT_SEL_ETC___d225;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_1_cyc_ETC___d176;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_1_cyc_ETC___d167;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_1_cyc_ETC___d158;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_1_cyc_ETC___d150;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_5_PLUS_IF_NOT_IF_NOT_IF__ETC___d356;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_pos_partial_sum_0_PLUS_pe_ETC___d289;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_0_CONCAT_SEL_ETC___d222;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_1_cyc_ETC___d147;
 
 /* Rules */
 public:
  void RL_test_dot_product();
  void RL_test_nonlinearity();
  void RL_test_rw_weights();
  void RL_test_end();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbPE &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbPE &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbPE &backing);
};

#endif /* ifndef __mkTbPE_h__ */
