/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Mon Oct 30 15:09:33 EDT 2017
 * 
 */

/* Generation options: */
#ifndef __mkTbPE_h__
#define __mkTbPE_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbPE module */
class MOD_mkTbPE : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_cycle1;
  MOD_Reg<tUInt32> INST_cycle2;
  MOD_Reg<tUInt32> INST_cycle3;
  MOD_Reg<tUInt8> INST_pe1_partialSum;
  MOD_Reg<tUInt8> INST_pe1_step;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_0;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_1;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_2;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_3;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_4;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_5;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_6;
  MOD_Reg<tUInt8> INST_pe1_weight_regs_7;
  MOD_Reg<tUInt8> INST_pe2_partialSum;
  MOD_Reg<tUInt8> INST_pe2_step;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_0;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_1;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_2;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_3;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_4;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_5;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_6;
  MOD_Reg<tUInt8> INST_pe2_weight_regs_7;
  MOD_Reg<tUInt8> INST_pe3_partialSum;
  MOD_Reg<tUInt8> INST_pe3_step;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_0;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_1;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_2;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_3;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_4;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_5;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_6;
  MOD_Reg<tUInt8> INST_pe3_weight_regs_7;
  MOD_Reg<tUInt8> INST_psum;
  MOD_Reg<tUInt8> INST_psum2;
 
 /* Constructor */
 public:
  MOD_mkTbPE(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_x__h13978;
  tUInt32 DEF_x__h13984;
  tUInt32 DEF_x__h13991;
  tUInt8 DEF_NOT_cycle2_54_ULE_8_58___d475;
  tUInt8 DEF_cycle2_54_ULE_8___d458;
 
 /* Local definitions */
 private:
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d387;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d378;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_ETC___d369;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_9_PLUS_I_ETC___d360;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d320;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d311;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_pa_ETC___d302;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_pe1_partialSu_ETC___d293;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d253;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d244;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d235;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_ETC___d226;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d178;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d169;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d160;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_ETC___d151;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d383;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d374;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d365;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d357;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_partialSum_9_BITS_7_TO_6__ETC___d316;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_partialSum_9_BITS_7_TO_6__ETC___d307;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_partialSum_9_BITS_7_TO_6__ETC___d298;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_partialSum_9_BITS_7_TO_6__ETC___d290;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d249;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d240;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d231;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d223;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d174;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d165;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d156;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d148;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_9_PLUS_IF_NOT_IF_NOT_IF__ETC___d354;
  tUWide DEF__0_CONCAT_IF_SEXT_pe1_partialSum_9_BITS_7_TO_6__ETC___d287;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d220;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_0_cyc_ETC___d145;
 
 /* Rules */
 public:
  void RL_test_dot_product();
  void RL_test_nonlinearity();
  void RL_test_rw_weights();
  void RL_test_end();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbPE &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbPE &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbPE &backing);
};

#endif /* ifndef __mkTbPE_h__ */
