/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Mon Oct 30 15:09:38 EDT 2017
 * 
 */
#include "bluesim_primitives.h"
#include "mkTbLayerEval.h"


/* Constructor */
MOD_mkTbLayerEval::MOD_mkTbLayerEval(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_cycle1(simHdl, "cycle1", this, 32u, 0u, (tUInt8)0u),
    INST_le1_pe_vec_0_partialSum(simHdl, "le1_pe_vec_0_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_0_step(simHdl, "le1_pe_vec_0_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_0(simHdl,
				    "le1_pe_vec_0_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_1(simHdl,
				    "le1_pe_vec_0_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_2(simHdl,
				    "le1_pe_vec_0_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_3(simHdl,
				    "le1_pe_vec_0_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_4(simHdl,
				    "le1_pe_vec_0_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_5(simHdl,
				    "le1_pe_vec_0_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_6(simHdl,
				    "le1_pe_vec_0_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_0_weight_regs_7(simHdl,
				    "le1_pe_vec_0_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_partialSum(simHdl, "le1_pe_vec_1_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_1_step(simHdl, "le1_pe_vec_1_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_0(simHdl,
				    "le1_pe_vec_1_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_1(simHdl,
				    "le1_pe_vec_1_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_2(simHdl,
				    "le1_pe_vec_1_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_3(simHdl,
				    "le1_pe_vec_1_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_4(simHdl,
				    "le1_pe_vec_1_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_5(simHdl,
				    "le1_pe_vec_1_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_6(simHdl,
				    "le1_pe_vec_1_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_1_weight_regs_7(simHdl,
				    "le1_pe_vec_1_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_partialSum(simHdl, "le1_pe_vec_2_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_2_step(simHdl, "le1_pe_vec_2_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_0(simHdl,
				    "le1_pe_vec_2_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_1(simHdl,
				    "le1_pe_vec_2_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_2(simHdl,
				    "le1_pe_vec_2_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_3(simHdl,
				    "le1_pe_vec_2_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_4(simHdl,
				    "le1_pe_vec_2_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_5(simHdl,
				    "le1_pe_vec_2_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_6(simHdl,
				    "le1_pe_vec_2_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_2_weight_regs_7(simHdl,
				    "le1_pe_vec_2_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_partialSum(simHdl, "le1_pe_vec_3_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_3_step(simHdl, "le1_pe_vec_3_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_0(simHdl,
				    "le1_pe_vec_3_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_1(simHdl,
				    "le1_pe_vec_3_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_2(simHdl,
				    "le1_pe_vec_3_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_3(simHdl,
				    "le1_pe_vec_3_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_4(simHdl,
				    "le1_pe_vec_3_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_5(simHdl,
				    "le1_pe_vec_3_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_6(simHdl,
				    "le1_pe_vec_3_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_3_weight_regs_7(simHdl,
				    "le1_pe_vec_3_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_partialSum(simHdl, "le1_pe_vec_4_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_4_step(simHdl, "le1_pe_vec_4_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_0(simHdl,
				    "le1_pe_vec_4_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_1(simHdl,
				    "le1_pe_vec_4_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_2(simHdl,
				    "le1_pe_vec_4_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_3(simHdl,
				    "le1_pe_vec_4_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_4(simHdl,
				    "le1_pe_vec_4_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_5(simHdl,
				    "le1_pe_vec_4_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_6(simHdl,
				    "le1_pe_vec_4_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_4_weight_regs_7(simHdl,
				    "le1_pe_vec_4_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_partialSum(simHdl, "le1_pe_vec_5_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_5_step(simHdl, "le1_pe_vec_5_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_0(simHdl,
				    "le1_pe_vec_5_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_1(simHdl,
				    "le1_pe_vec_5_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_2(simHdl,
				    "le1_pe_vec_5_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_3(simHdl,
				    "le1_pe_vec_5_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_4(simHdl,
				    "le1_pe_vec_5_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_5(simHdl,
				    "le1_pe_vec_5_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_6(simHdl,
				    "le1_pe_vec_5_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_5_weight_regs_7(simHdl,
				    "le1_pe_vec_5_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_partialSum(simHdl, "le1_pe_vec_6_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_6_step(simHdl, "le1_pe_vec_6_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_0(simHdl,
				    "le1_pe_vec_6_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_1(simHdl,
				    "le1_pe_vec_6_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_2(simHdl,
				    "le1_pe_vec_6_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_3(simHdl,
				    "le1_pe_vec_6_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_4(simHdl,
				    "le1_pe_vec_6_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_5(simHdl,
				    "le1_pe_vec_6_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_6(simHdl,
				    "le1_pe_vec_6_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_6_weight_regs_7(simHdl,
				    "le1_pe_vec_6_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_partialSum(simHdl, "le1_pe_vec_7_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_7_step(simHdl, "le1_pe_vec_7_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_0(simHdl,
				    "le1_pe_vec_7_weight_regs_0",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_1(simHdl,
				    "le1_pe_vec_7_weight_regs_1",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_2(simHdl,
				    "le1_pe_vec_7_weight_regs_2",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_3(simHdl,
				    "le1_pe_vec_7_weight_regs_3",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_4(simHdl,
				    "le1_pe_vec_7_weight_regs_4",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_5(simHdl,
				    "le1_pe_vec_7_weight_regs_5",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_6(simHdl,
				    "le1_pe_vec_7_weight_regs_6",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_pe_vec_7_weight_regs_7(simHdl,
				    "le1_pe_vec_7_weight_regs_7",
				    this,
				    2u,
				    (tUInt8)0u,
				    (tUInt8)0u),
    INST_le1_step(simHdl, "le1_step", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_partialSum(simHdl, "pe1_partialSum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_step(simHdl, "pe1_step", this, 4u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_0(simHdl, "pe1_weight_regs_0", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_1(simHdl, "pe1_weight_regs_1", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_2(simHdl, "pe1_weight_regs_2", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_3(simHdl, "pe1_weight_regs_3", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_4(simHdl, "pe1_weight_regs_4", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_5(simHdl, "pe1_weight_regs_5", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_6(simHdl, "pe1_weight_regs_6", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_pe1_weight_regs_7(simHdl, "pe1_weight_regs_7", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_psum(simHdl, "psum", this, 8u, (tUInt8)0u, (tUInt8)0u),
    PORT_RST_N((tUInt8)1u)
{
  symbol_count = 96u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkTbLayerEval::init_symbols_0()
{
  init_symbol(&symbols[0u], "_read__h66", SYM_DEF, &DEF__read__h66, 32u);
  init_symbol(&symbols[1u], "cycle1", SYM_MODULE, &INST_cycle1);
  init_symbol(&symbols[2u], "le1_pe_vec_0_partialSum", SYM_MODULE, &INST_le1_pe_vec_0_partialSum);
  init_symbol(&symbols[3u], "le1_pe_vec_0_step", SYM_MODULE, &INST_le1_pe_vec_0_step);
  init_symbol(&symbols[4u],
	      "le1_pe_vec_0_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_0);
  init_symbol(&symbols[5u],
	      "le1_pe_vec_0_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_1);
  init_symbol(&symbols[6u],
	      "le1_pe_vec_0_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_2);
  init_symbol(&symbols[7u],
	      "le1_pe_vec_0_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_3);
  init_symbol(&symbols[8u],
	      "le1_pe_vec_0_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_4);
  init_symbol(&symbols[9u],
	      "le1_pe_vec_0_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_5);
  init_symbol(&symbols[10u],
	      "le1_pe_vec_0_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_6);
  init_symbol(&symbols[11u],
	      "le1_pe_vec_0_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_0_weight_regs_7);
  init_symbol(&symbols[12u], "le1_pe_vec_1_partialSum", SYM_MODULE, &INST_le1_pe_vec_1_partialSum);
  init_symbol(&symbols[13u], "le1_pe_vec_1_step", SYM_MODULE, &INST_le1_pe_vec_1_step);
  init_symbol(&symbols[14u],
	      "le1_pe_vec_1_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_0);
  init_symbol(&symbols[15u],
	      "le1_pe_vec_1_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_1);
  init_symbol(&symbols[16u],
	      "le1_pe_vec_1_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_2);
  init_symbol(&symbols[17u],
	      "le1_pe_vec_1_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_3);
  init_symbol(&symbols[18u],
	      "le1_pe_vec_1_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_4);
  init_symbol(&symbols[19u],
	      "le1_pe_vec_1_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_5);
  init_symbol(&symbols[20u],
	      "le1_pe_vec_1_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_6);
  init_symbol(&symbols[21u],
	      "le1_pe_vec_1_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_1_weight_regs_7);
  init_symbol(&symbols[22u], "le1_pe_vec_2_partialSum", SYM_MODULE, &INST_le1_pe_vec_2_partialSum);
  init_symbol(&symbols[23u], "le1_pe_vec_2_step", SYM_MODULE, &INST_le1_pe_vec_2_step);
  init_symbol(&symbols[24u],
	      "le1_pe_vec_2_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_0);
  init_symbol(&symbols[25u],
	      "le1_pe_vec_2_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_1);
  init_symbol(&symbols[26u],
	      "le1_pe_vec_2_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_2);
  init_symbol(&symbols[27u],
	      "le1_pe_vec_2_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_3);
  init_symbol(&symbols[28u],
	      "le1_pe_vec_2_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_4);
  init_symbol(&symbols[29u],
	      "le1_pe_vec_2_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_5);
  init_symbol(&symbols[30u],
	      "le1_pe_vec_2_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_6);
  init_symbol(&symbols[31u],
	      "le1_pe_vec_2_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_2_weight_regs_7);
  init_symbol(&symbols[32u], "le1_pe_vec_3_partialSum", SYM_MODULE, &INST_le1_pe_vec_3_partialSum);
  init_symbol(&symbols[33u], "le1_pe_vec_3_step", SYM_MODULE, &INST_le1_pe_vec_3_step);
  init_symbol(&symbols[34u],
	      "le1_pe_vec_3_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_0);
  init_symbol(&symbols[35u],
	      "le1_pe_vec_3_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_1);
  init_symbol(&symbols[36u],
	      "le1_pe_vec_3_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_2);
  init_symbol(&symbols[37u],
	      "le1_pe_vec_3_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_3);
  init_symbol(&symbols[38u],
	      "le1_pe_vec_3_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_4);
  init_symbol(&symbols[39u],
	      "le1_pe_vec_3_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_5);
  init_symbol(&symbols[40u],
	      "le1_pe_vec_3_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_6);
  init_symbol(&symbols[41u],
	      "le1_pe_vec_3_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_3_weight_regs_7);
  init_symbol(&symbols[42u], "le1_pe_vec_4_partialSum", SYM_MODULE, &INST_le1_pe_vec_4_partialSum);
  init_symbol(&symbols[43u], "le1_pe_vec_4_step", SYM_MODULE, &INST_le1_pe_vec_4_step);
  init_symbol(&symbols[44u],
	      "le1_pe_vec_4_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_0);
  init_symbol(&symbols[45u],
	      "le1_pe_vec_4_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_1);
  init_symbol(&symbols[46u],
	      "le1_pe_vec_4_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_2);
  init_symbol(&symbols[47u],
	      "le1_pe_vec_4_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_3);
  init_symbol(&symbols[48u],
	      "le1_pe_vec_4_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_4);
  init_symbol(&symbols[49u],
	      "le1_pe_vec_4_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_5);
  init_symbol(&symbols[50u],
	      "le1_pe_vec_4_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_6);
  init_symbol(&symbols[51u],
	      "le1_pe_vec_4_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_4_weight_regs_7);
  init_symbol(&symbols[52u], "le1_pe_vec_5_partialSum", SYM_MODULE, &INST_le1_pe_vec_5_partialSum);
  init_symbol(&symbols[53u], "le1_pe_vec_5_step", SYM_MODULE, &INST_le1_pe_vec_5_step);
  init_symbol(&symbols[54u],
	      "le1_pe_vec_5_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_0);
  init_symbol(&symbols[55u],
	      "le1_pe_vec_5_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_1);
  init_symbol(&symbols[56u],
	      "le1_pe_vec_5_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_2);
  init_symbol(&symbols[57u],
	      "le1_pe_vec_5_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_3);
  init_symbol(&symbols[58u],
	      "le1_pe_vec_5_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_4);
  init_symbol(&symbols[59u],
	      "le1_pe_vec_5_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_5);
  init_symbol(&symbols[60u],
	      "le1_pe_vec_5_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_6);
  init_symbol(&symbols[61u],
	      "le1_pe_vec_5_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_5_weight_regs_7);
  init_symbol(&symbols[62u], "le1_pe_vec_6_partialSum", SYM_MODULE, &INST_le1_pe_vec_6_partialSum);
  init_symbol(&symbols[63u], "le1_pe_vec_6_step", SYM_MODULE, &INST_le1_pe_vec_6_step);
  init_symbol(&symbols[64u],
	      "le1_pe_vec_6_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_0);
  init_symbol(&symbols[65u],
	      "le1_pe_vec_6_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_1);
  init_symbol(&symbols[66u],
	      "le1_pe_vec_6_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_2);
  init_symbol(&symbols[67u],
	      "le1_pe_vec_6_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_3);
  init_symbol(&symbols[68u],
	      "le1_pe_vec_6_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_4);
  init_symbol(&symbols[69u],
	      "le1_pe_vec_6_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_5);
  init_symbol(&symbols[70u],
	      "le1_pe_vec_6_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_6);
  init_symbol(&symbols[71u],
	      "le1_pe_vec_6_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_6_weight_regs_7);
  init_symbol(&symbols[72u], "le1_pe_vec_7_partialSum", SYM_MODULE, &INST_le1_pe_vec_7_partialSum);
  init_symbol(&symbols[73u], "le1_pe_vec_7_step", SYM_MODULE, &INST_le1_pe_vec_7_step);
  init_symbol(&symbols[74u],
	      "le1_pe_vec_7_weight_regs_0",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_0);
  init_symbol(&symbols[75u],
	      "le1_pe_vec_7_weight_regs_1",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_1);
  init_symbol(&symbols[76u],
	      "le1_pe_vec_7_weight_regs_2",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_2);
  init_symbol(&symbols[77u],
	      "le1_pe_vec_7_weight_regs_3",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_3);
  init_symbol(&symbols[78u],
	      "le1_pe_vec_7_weight_regs_4",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_4);
  init_symbol(&symbols[79u],
	      "le1_pe_vec_7_weight_regs_5",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_5);
  init_symbol(&symbols[80u],
	      "le1_pe_vec_7_weight_regs_6",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_6);
  init_symbol(&symbols[81u],
	      "le1_pe_vec_7_weight_regs_7",
	      SYM_MODULE,
	      &INST_le1_pe_vec_7_weight_regs_7);
  init_symbol(&symbols[82u], "le1_step", SYM_MODULE, &INST_le1_step);
  init_symbol(&symbols[83u], "pe1_partialSum", SYM_MODULE, &INST_pe1_partialSum);
  init_symbol(&symbols[84u], "pe1_step", SYM_MODULE, &INST_pe1_step);
  init_symbol(&symbols[85u], "pe1_weight_regs_0", SYM_MODULE, &INST_pe1_weight_regs_0);
  init_symbol(&symbols[86u], "pe1_weight_regs_1", SYM_MODULE, &INST_pe1_weight_regs_1);
  init_symbol(&symbols[87u], "pe1_weight_regs_2", SYM_MODULE, &INST_pe1_weight_regs_2);
  init_symbol(&symbols[88u], "pe1_weight_regs_3", SYM_MODULE, &INST_pe1_weight_regs_3);
  init_symbol(&symbols[89u], "pe1_weight_regs_4", SYM_MODULE, &INST_pe1_weight_regs_4);
  init_symbol(&symbols[90u], "pe1_weight_regs_5", SYM_MODULE, &INST_pe1_weight_regs_5);
  init_symbol(&symbols[91u], "pe1_weight_regs_6", SYM_MODULE, &INST_pe1_weight_regs_6);
  init_symbol(&symbols[92u], "pe1_weight_regs_7", SYM_MODULE, &INST_pe1_weight_regs_7);
  init_symbol(&symbols[93u], "psum", SYM_MODULE, &INST_psum);
  init_symbol(&symbols[94u], "RL_test_end", SYM_RULE);
  init_symbol(&symbols[95u], "RL_test_load_weights", SYM_RULE);
}


/* Rule actions */

void MOD_mkTbLayerEval::RL_test_load_weights()
{
  tUInt32 DEF_x__h5198;
  DEF__read__h66 = INST_cycle1.METH_read();
  DEF_x__h5198 = DEF__read__h66 + 1u;
  INST_cycle1.METH_write(DEF_x__h5198);
}

void MOD_mkTbLayerEval::RL_test_end()
{
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_finish(sim_hdl, "32", 1u);
}


/* Methods */


/* Reset routines */

void MOD_mkTbLayerEval::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_psum.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_7.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_6.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_5.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_4.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_3.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_2.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_1.reset_RST(ARG_rst_in);
  INST_pe1_weight_regs_0.reset_RST(ARG_rst_in);
  INST_pe1_step.reset_RST(ARG_rst_in);
  INST_pe1_partialSum.reset_RST(ARG_rst_in);
  INST_le1_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_7_partialSum.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_6_partialSum.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_5_partialSum.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_4_partialSum.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_3_partialSum.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_2_partialSum.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_1_partialSum.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_7.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_6.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_5.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_4.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_3.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_2.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_1.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_weight_regs_0.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_step.reset_RST(ARG_rst_in);
  INST_le1_pe_vec_0_partialSum.reset_RST(ARG_rst_in);
  INST_cycle1.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkTbLayerEval::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkTbLayerEval::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_cycle1.dump_state(indent + 2u);
  INST_le1_pe_vec_0_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_0_step.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_0_weight_regs_7.dump_state(indent + 2u);
  INST_le1_pe_vec_1_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_1_step.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_1_weight_regs_7.dump_state(indent + 2u);
  INST_le1_pe_vec_2_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_2_step.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_2_weight_regs_7.dump_state(indent + 2u);
  INST_le1_pe_vec_3_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_3_step.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_3_weight_regs_7.dump_state(indent + 2u);
  INST_le1_pe_vec_4_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_4_step.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_4_weight_regs_7.dump_state(indent + 2u);
  INST_le1_pe_vec_5_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_5_step.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_5_weight_regs_7.dump_state(indent + 2u);
  INST_le1_pe_vec_6_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_6_step.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_6_weight_regs_7.dump_state(indent + 2u);
  INST_le1_pe_vec_7_partialSum.dump_state(indent + 2u);
  INST_le1_pe_vec_7_step.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_0.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_1.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_2.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_3.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_4.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_5.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_6.dump_state(indent + 2u);
  INST_le1_pe_vec_7_weight_regs_7.dump_state(indent + 2u);
  INST_le1_step.dump_state(indent + 2u);
  INST_pe1_partialSum.dump_state(indent + 2u);
  INST_pe1_step.dump_state(indent + 2u);
  INST_pe1_weight_regs_0.dump_state(indent + 2u);
  INST_pe1_weight_regs_1.dump_state(indent + 2u);
  INST_pe1_weight_regs_2.dump_state(indent + 2u);
  INST_pe1_weight_regs_3.dump_state(indent + 2u);
  INST_pe1_weight_regs_4.dump_state(indent + 2u);
  INST_pe1_weight_regs_5.dump_state(indent + 2u);
  INST_pe1_weight_regs_6.dump_state(indent + 2u);
  INST_pe1_weight_regs_7.dump_state(indent + 2u);
  INST_psum.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkTbLayerEval::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 95u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_read__h66", 32u);
  num = INST_cycle1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_0_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_1_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_2_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_3_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_4_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_5_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_6_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_partialSum.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_step.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_0.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_1.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_2.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_3.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_4.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_5.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_6.dump_VCD_defs(num);
  num = INST_le1_pe_vec_7_weight_regs_7.dump_VCD_defs(num);
  num = INST_le1_step.dump_VCD_defs(num);
  num = INST_pe1_partialSum.dump_VCD_defs(num);
  num = INST_pe1_step.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_0.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_1.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_2.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_3.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_4.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_5.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_6.dump_VCD_defs(num);
  num = INST_pe1_weight_regs_7.dump_VCD_defs(num);
  num = INST_psum.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkTbLayerEval::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbLayerEval &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkTbLayerEval::vcd_defs(tVCDDumpType dt, MOD_mkTbLayerEval &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF__read__h66) != DEF__read__h66)
      {
	vcd_write_val(sim_hdl, num, DEF__read__h66, 32u);
	backing.DEF__read__h66 = DEF__read__h66;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF__read__h66, 32u);
      backing.DEF__read__h66 = DEF__read__h66;
    }
}

void MOD_mkTbLayerEval::vcd_prims(tVCDDumpType dt, MOD_mkTbLayerEval &backing)
{
  INST_cycle1.dump_VCD(dt, backing.INST_cycle1);
  INST_le1_pe_vec_0_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_0_partialSum);
  INST_le1_pe_vec_0_step.dump_VCD(dt, backing.INST_le1_pe_vec_0_step);
  INST_le1_pe_vec_0_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_0);
  INST_le1_pe_vec_0_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_1);
  INST_le1_pe_vec_0_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_2);
  INST_le1_pe_vec_0_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_3);
  INST_le1_pe_vec_0_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_4);
  INST_le1_pe_vec_0_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_5);
  INST_le1_pe_vec_0_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_6);
  INST_le1_pe_vec_0_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_0_weight_regs_7);
  INST_le1_pe_vec_1_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_1_partialSum);
  INST_le1_pe_vec_1_step.dump_VCD(dt, backing.INST_le1_pe_vec_1_step);
  INST_le1_pe_vec_1_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_0);
  INST_le1_pe_vec_1_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_1);
  INST_le1_pe_vec_1_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_2);
  INST_le1_pe_vec_1_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_3);
  INST_le1_pe_vec_1_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_4);
  INST_le1_pe_vec_1_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_5);
  INST_le1_pe_vec_1_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_6);
  INST_le1_pe_vec_1_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_1_weight_regs_7);
  INST_le1_pe_vec_2_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_2_partialSum);
  INST_le1_pe_vec_2_step.dump_VCD(dt, backing.INST_le1_pe_vec_2_step);
  INST_le1_pe_vec_2_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_0);
  INST_le1_pe_vec_2_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_1);
  INST_le1_pe_vec_2_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_2);
  INST_le1_pe_vec_2_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_3);
  INST_le1_pe_vec_2_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_4);
  INST_le1_pe_vec_2_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_5);
  INST_le1_pe_vec_2_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_6);
  INST_le1_pe_vec_2_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_2_weight_regs_7);
  INST_le1_pe_vec_3_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_3_partialSum);
  INST_le1_pe_vec_3_step.dump_VCD(dt, backing.INST_le1_pe_vec_3_step);
  INST_le1_pe_vec_3_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_0);
  INST_le1_pe_vec_3_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_1);
  INST_le1_pe_vec_3_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_2);
  INST_le1_pe_vec_3_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_3);
  INST_le1_pe_vec_3_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_4);
  INST_le1_pe_vec_3_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_5);
  INST_le1_pe_vec_3_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_6);
  INST_le1_pe_vec_3_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_3_weight_regs_7);
  INST_le1_pe_vec_4_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_4_partialSum);
  INST_le1_pe_vec_4_step.dump_VCD(dt, backing.INST_le1_pe_vec_4_step);
  INST_le1_pe_vec_4_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_0);
  INST_le1_pe_vec_4_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_1);
  INST_le1_pe_vec_4_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_2);
  INST_le1_pe_vec_4_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_3);
  INST_le1_pe_vec_4_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_4);
  INST_le1_pe_vec_4_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_5);
  INST_le1_pe_vec_4_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_6);
  INST_le1_pe_vec_4_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_4_weight_regs_7);
  INST_le1_pe_vec_5_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_5_partialSum);
  INST_le1_pe_vec_5_step.dump_VCD(dt, backing.INST_le1_pe_vec_5_step);
  INST_le1_pe_vec_5_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_0);
  INST_le1_pe_vec_5_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_1);
  INST_le1_pe_vec_5_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_2);
  INST_le1_pe_vec_5_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_3);
  INST_le1_pe_vec_5_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_4);
  INST_le1_pe_vec_5_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_5);
  INST_le1_pe_vec_5_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_6);
  INST_le1_pe_vec_5_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_5_weight_regs_7);
  INST_le1_pe_vec_6_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_6_partialSum);
  INST_le1_pe_vec_6_step.dump_VCD(dt, backing.INST_le1_pe_vec_6_step);
  INST_le1_pe_vec_6_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_0);
  INST_le1_pe_vec_6_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_1);
  INST_le1_pe_vec_6_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_2);
  INST_le1_pe_vec_6_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_3);
  INST_le1_pe_vec_6_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_4);
  INST_le1_pe_vec_6_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_5);
  INST_le1_pe_vec_6_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_6);
  INST_le1_pe_vec_6_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_6_weight_regs_7);
  INST_le1_pe_vec_7_partialSum.dump_VCD(dt, backing.INST_le1_pe_vec_7_partialSum);
  INST_le1_pe_vec_7_step.dump_VCD(dt, backing.INST_le1_pe_vec_7_step);
  INST_le1_pe_vec_7_weight_regs_0.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_0);
  INST_le1_pe_vec_7_weight_regs_1.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_1);
  INST_le1_pe_vec_7_weight_regs_2.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_2);
  INST_le1_pe_vec_7_weight_regs_3.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_3);
  INST_le1_pe_vec_7_weight_regs_4.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_4);
  INST_le1_pe_vec_7_weight_regs_5.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_5);
  INST_le1_pe_vec_7_weight_regs_6.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_6);
  INST_le1_pe_vec_7_weight_regs_7.dump_VCD(dt, backing.INST_le1_pe_vec_7_weight_regs_7);
  INST_le1_step.dump_VCD(dt, backing.INST_le1_step);
  INST_pe1_partialSum.dump_VCD(dt, backing.INST_pe1_partialSum);
  INST_pe1_step.dump_VCD(dt, backing.INST_pe1_step);
  INST_pe1_weight_regs_0.dump_VCD(dt, backing.INST_pe1_weight_regs_0);
  INST_pe1_weight_regs_1.dump_VCD(dt, backing.INST_pe1_weight_regs_1);
  INST_pe1_weight_regs_2.dump_VCD(dt, backing.INST_pe1_weight_regs_2);
  INST_pe1_weight_regs_3.dump_VCD(dt, backing.INST_pe1_weight_regs_3);
  INST_pe1_weight_regs_4.dump_VCD(dt, backing.INST_pe1_weight_regs_4);
  INST_pe1_weight_regs_5.dump_VCD(dt, backing.INST_pe1_weight_regs_5);
  INST_pe1_weight_regs_6.dump_VCD(dt, backing.INST_pe1_weight_regs_6);
  INST_pe1_weight_regs_7.dump_VCD(dt, backing.INST_pe1_weight_regs_7);
  INST_psum.dump_VCD(dt, backing.INST_psum);
}
