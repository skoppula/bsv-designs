/*
 * Generated by Bluespec Compiler, version 2014.07.A (build 34078, 2014-07-30)
 * 
 * On Sun Nov  5 10:57:33 EST 2017
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkTbController.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkTbController::MODEL_mkTbController()
{
  mkTbController_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkTbController()
{
  MODEL_mkTbController *model = new MODEL_mkTbController();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkTbController &INST_top = *((MOD_mkTbController *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_NOT_controller_le_waiting_22___d123;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_cnt_6__ETC___d170;
	 tUInt8 DEF_INST_top_DEF_controller_le_step_20_EQ_1___d121;
	 tUInt8 DEF_INST_top_DEF_controller_le_step_20_EQ_2___d171;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_s1_0_B_ETC___d55;
	 tUInt8 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_s1_09_B_ETC___d114;
	 tUInt8 DEF_INST_top_DEF_controller_le_waiting__h8122;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d2;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d53;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d9;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d1;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d6;
	 tUInt8 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d10;
	 tUInt8 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d61;
	 tUInt8 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d112;
	 tUInt8 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d68;
	 tUInt8 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d60;
	 tUInt8 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d65;
	 tUInt8 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d69;
	 tUInt8 DEF_INST_top_DEF_cycle1_094_EQ_0___d1095;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstCore;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstCore;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqOnly;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqOnly;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_deqOnly;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_deqOnly;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqAndDeq;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqAndDeq;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_cnt_finalAdd;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_cnt_finalAdd;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_s1__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_s1__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_stageReadResponseAlways;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_stageReadResponseAlways;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_moveToOutFIFO;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_moveToOutFIFO;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_overRun;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_overRun;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstCore;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstCore;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqOnly;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqOnly;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_deqOnly;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_deqOnly;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqAndDeq;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqAndDeq;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_cnt_finalAdd;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_cnt_finalAdd;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_s1__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_s1__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_stageReadResponseAlways;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_stageReadResponseAlways;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_moveToOutFIFO;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_moveToOutFIFO;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_overRun;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_overRun;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_weights_request;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_weights_request;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_weights_recieve;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_weights_recieve;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_request;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_inputs_request;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_recv;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_inputs_recv;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_multiply_constants;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_multiply_constants;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_combine;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_combine;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_add_bias;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_add_bias;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_nonlinearity;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_nonlinearity;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_clear_regs;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_clear_regs;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_save_outputs_req;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_save_outputs_req;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_test_one;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_test_one;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_test_end;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_test_end;
	 INST_top.DEF_b__h8116 = INST_top.INST_controller_le_step.METH_read();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_add_bias = (INST_top.DEF_b__h8116) == (tUInt8)5u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_add_bias = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_add_bias;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_clear_regs = (INST_top.DEF_b__h8116) == (tUInt8)7u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_clear_regs = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_clear_regs;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_combine = (INST_top.DEF_b__h8116) == (tUInt8)4u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_combine = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_combine;
	 INST_top.DEF_controller_le_featureBRAM_serverAdapter_s1___d50 = INST_top.INST_controller_le_featureBRAM_serverAdapter_s1.METH_read();
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d53 = INST_top.INST_controller_le_featureBRAM_serverAdapter_outDataCore.METH_notFull();
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_s1_0_B_ETC___d55 = (tUInt8)((INST_top.DEF_controller_le_featureBRAM_serverAdapter_s1___d50) >> 1u);
	 INST_top.DEF_controller_le_featureBRAM_serverAdapter_s1_0_B_ETC___d51 = (tUInt8)((tUInt8)1u & (INST_top.DEF_controller_le_featureBRAM_serverAdapter_s1___d50));
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_moveToOutFIFO = (!(INST_top.DEF_controller_le_featureBRAM_serverAdapter_s1_0_B_ETC___d51) || DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d53) && DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_s1_0_B_ETC___d55;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_moveToOutFIFO = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_moveToOutFIFO;
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d1 = INST_top.INST_controller_le_featureBRAM_serverAdapter_outDataCore.METH_i_notEmpty();
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d2 = INST_top.INST_controller_le_featureBRAM_serverAdapter_outDataCore.METH_notEmpty();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstCore = DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d1 && DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d2;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstCore = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstCore;
	 INST_top.DEF_b__h5893 = INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt.METH_read();
	 DEF_INST_top_DEF_controller_le_waiting__h8122 = INST_top.INST_controller_le_waiting.METH_read();
	 DEF_INST_top_DEF_controller_le_step_20_EQ_2___d171 = (INST_top.DEF_b__h8116) == (tUInt8)2u;
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_cnt_6__ETC___d170 = primSLT8(1u,
											       3u,
											       (tUInt8)(INST_top.DEF_b__h5893),
											       3u,
											       (tUInt8)3u);
	 DEF_INST_top_DEF_NOT_controller_le_waiting_22___d123 = !DEF_INST_top_DEF_controller_le_waiting__h8122;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_request = DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_cnt_6__ETC___d170 && (DEF_INST_top_DEF_controller_le_step_20_EQ_2___d171 && DEF_INST_top_DEF_NOT_controller_le_waiting_22___d123);
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_inputs_request = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_request;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_overRun = DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_s1_0_B_ETC___d55 && !DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d53;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_overRun = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_overRun;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_s1__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_s1__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_s1__dreg_update;
	 INST_top.DEF_b__h7442 = INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt.METH_read();
	 DEF_INST_top_DEF_controller_le_step_20_EQ_1___d121 = (INST_top.DEF_b__h8116) == (tUInt8)1u;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_weights_request = primSLT8(1u,
										    3u,
										    (tUInt8)(INST_top.DEF_b__h7442),
										    3u,
										    (tUInt8)3u) && (DEF_INST_top_DEF_controller_le_step_20_EQ_1___d121 && DEF_INST_top_DEF_NOT_controller_le_waiting_22___d123);
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_weights_request = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_weights_request;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_multiply_constants = (INST_top.DEF_b__h8116) == (tUInt8)3u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_multiply_constants = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_multiply_constants;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_nonlinearity = (INST_top.DEF_b__h8116) == (tUInt8)6u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_nonlinearity = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_nonlinearity;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_save_outputs_req = DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_cnt_6__ETC___d170 && (INST_top.DEF_b__h8116) == (tUInt8)8u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_save_outputs_req = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_save_outputs_req;
	 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d60 = INST_top.INST_controller_le_weightBRAM_serverAdapter_outDataCore.METH_i_notEmpty();
	 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d61 = INST_top.INST_controller_le_weightBRAM_serverAdapter_outDataCore.METH_notEmpty();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstCore = DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d60 && DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d61;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstCore = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstCore;
	 INST_top.DEF_controller_le_weightBRAM_serverAdapter_s1___d109 = INST_top.INST_controller_le_weightBRAM_serverAdapter_s1.METH_read();
	 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d112 = INST_top.INST_controller_le_weightBRAM_serverAdapter_outDataCore.METH_notFull();
	 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_s1_09_B_ETC___d114 = (tUInt8)((INST_top.DEF_controller_le_weightBRAM_serverAdapter_s1___d109) >> 1u);
	 INST_top.DEF_controller_le_weightBRAM_serverAdapter_s1_09_B_ETC___d110 = (tUInt8)((tUInt8)1u & (INST_top.DEF_controller_le_weightBRAM_serverAdapter_s1___d109));
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_moveToOutFIFO = (!(INST_top.DEF_controller_le_weightBRAM_serverAdapter_s1_09_B_ETC___d110) || DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d112) && DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_s1_09_B_ETC___d114;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_moveToOutFIFO = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_moveToOutFIFO;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_overRun = DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_s1_09_B_ETC___d114 && !DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d112;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_overRun = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_overRun;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_s1__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_s1__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_s1__dreg_update;
	 INST_top.DEF__read__h66 = INST_top.INST_cycle1.METH_read();
	 DEF_INST_top_DEF_cycle1_094_EQ_0___d1095 = (INST_top.DEF__read__h66) == 0u;
	 DEF_INST_top_DEF_CAN_FIRE_RL_test_end = !DEF_INST_top_DEF_cycle1_094_EQ_0___d1095;
	 DEF_INST_top_DEF_WILL_FIRE_RL_test_end = DEF_INST_top_DEF_CAN_FIRE_RL_test_end;
	 DEF_INST_top_DEF_CAN_FIRE_RL_test_one = DEF_INST_top_DEF_cycle1_094_EQ_0___d1095;
	 DEF_INST_top_DEF_WILL_FIRE_RL_test_one = DEF_INST_top_DEF_CAN_FIRE_RL_test_one;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_add_bias)
	   INST_top.RL_controller_le_add_bias();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_clear_regs)
	   INST_top.RL_controller_le_clear_regs();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_combine)
	   INST_top.RL_controller_le_combine();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_moveToOutFIFO)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_moveToOutFIFO();
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d6 = INST_top.INST_controller_le_featureBRAM_serverAdapter_outData_enqData.METH_whas();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq = !DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d2 && DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d6;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstCore)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_outData_setFirstCore();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_recv = (((DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d2 || DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d6) && INST_top.INST_controller_le_featureBRAM_serverAdapter_outData_outData.METH_whas()) && (DEF_INST_top_DEF_controller_le_step_20_EQ_2___d171 && DEF_INST_top_DEF_controller_le_waiting__h8122)) && !((DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_clear_regs || DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_add_bias) || DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_combine);
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_inputs_recv = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_recv;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_inputs_recv)
	   INST_top.RL_controller_le_feed_inputs_recv();
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d10 = INST_top.INST_controller_le_featureBRAM_serverAdapter_outData_deqCalled.METH_whas();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_deqOnly = (DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d1 && (DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d10 && !DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d6)) && !DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_deqOnly = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_deqOnly;
	 DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d9 = INST_top.INST_controller_le_featureBRAM_serverAdapter_outDataCore.METH_i_notFull();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqAndDeq = ((DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d1 && DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d9) && (DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d10 && DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d6)) && !DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_setFirstEnq;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqAndDeq = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqAndDeq;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqOnly = DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d9 && (!DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d10 && DEF_INST_top_DEF_controller_le_featureBRAM_serverAdapter_outDat_ETC___d6);
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqOnly = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqOnly;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqAndDeq)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_outData_enqAndDeq();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_enqOnly)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_outData_enqOnly();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_weights_request)
	   INST_top.RL_controller_le_feed_weights_request();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_stageReadResponseAlways = INST_top.INST_controller_le_weightBRAM_serverAdapter_writeWithResp.METH_whas();
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_stageReadResponseAlways = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_stageReadResponseAlways;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_inputs_request)
	   INST_top.RL_controller_le_feed_inputs_request();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_multiply_constants)
	   INST_top.RL_controller_le_multiply_constants();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_nonlinearity)
	   INST_top.RL_controller_le_nonlinearity();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_save_outputs_req)
	   INST_top.RL_controller_le_save_outputs_req();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_stageReadResponseAlways = INST_top.INST_controller_le_featureBRAM_serverAdapter_writeWithResp.METH_whas();
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_stageReadResponseAlways = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_stageReadResponseAlways;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_stageReadResponseAlways)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_stageReadResponseAlways();
	 INST_top.DEF_controller_le_featureBRAM_serverAdapter_cnt_3__ETC___d23 = INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt_3.METH_whas();
	 INST_top.DEF_controller_le_featureBRAM_serverAdapter_cnt_2__ETC___d21 = INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt_2.METH_whas();
	 INST_top.DEF_controller_le_featureBRAM_serverAdapter_cnt_1__ETC___d20 = INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt_1.METH_whas();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_cnt_finalAdd = (INST_top.DEF_controller_le_featureBRAM_serverAdapter_cnt_1__ETC___d20 || INST_top.DEF_controller_le_featureBRAM_serverAdapter_cnt_2__ETC___d21) || INST_top.DEF_controller_le_featureBRAM_serverAdapter_cnt_3__ETC___d23;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_cnt_finalAdd = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_featureBRAM_serverAdapter_cnt_finalAdd;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_cnt_finalAdd)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_cnt_finalAdd();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_moveToOutFIFO)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_moveToOutFIFO();
	 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d65 = INST_top.INST_controller_le_weightBRAM_serverAdapter_outData_enqData.METH_whas();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq = !DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d61 && DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d65;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstCore)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_outData_setFirstCore();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_weights_recieve = (((DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d61 || DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d65) && INST_top.INST_controller_le_weightBRAM_serverAdapter_outData_outData.METH_whas()) && (DEF_INST_top_DEF_controller_le_step_20_EQ_1___d121 && DEF_INST_top_DEF_controller_le_waiting__h8122)) && !((((DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_save_outputs_req || DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_clear_regs) || (DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_nonlinearity || DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_add_bias)) || ((DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_combine || DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_multiply_constants) || (DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_recv || DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_inputs_request))) || DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_weights_request);
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_weights_recieve = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_feed_weights_recieve;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_feed_weights_recieve)
	   INST_top.RL_controller_le_feed_weights_recieve();
	 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d69 = INST_top.INST_controller_le_weightBRAM_serverAdapter_outData_deqCalled.METH_whas();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_deqOnly = (DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d60 && (DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d69 && !DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d65)) && !DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_deqOnly = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_deqOnly;
	 DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d68 = INST_top.INST_controller_le_weightBRAM_serverAdapter_outDataCore.METH_i_notFull();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqAndDeq = ((DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d60 && DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d68) && (DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d69 && DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d65)) && !DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_setFirstEnq;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqAndDeq = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqAndDeq;
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqOnly = DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d68 && (!DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d69 && DEF_INST_top_DEF_controller_le_weightBRAM_serverAdapter_outData_ETC___d65);
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqOnly = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqOnly;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqAndDeq)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_outData_enqAndDeq();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_enqOnly)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_outData_enqOnly();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_stageReadResponseAlways)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_stageReadResponseAlways();
	 INST_top.DEF_controller_le_weightBRAM_serverAdapter_cnt_3_w_ETC___d82 = INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt_3.METH_whas();
	 INST_top.DEF_controller_le_weightBRAM_serverAdapter_cnt_2_w_ETC___d80 = INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt_2.METH_whas();
	 INST_top.DEF_controller_le_weightBRAM_serverAdapter_cnt_1_w_ETC___d79 = INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt_1.METH_whas();
	 DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_cnt_finalAdd = (INST_top.DEF_controller_le_weightBRAM_serverAdapter_cnt_1_w_ETC___d79 || INST_top.DEF_controller_le_weightBRAM_serverAdapter_cnt_2_w_ETC___d80) || INST_top.DEF_controller_le_weightBRAM_serverAdapter_cnt_3_w_ETC___d82;
	 DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_cnt_finalAdd = DEF_INST_top_DEF_CAN_FIRE_RL_controller_le_weightBRAM_serverAdapter_cnt_finalAdd;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_cnt_finalAdd)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_cnt_finalAdd();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_test_end)
	   INST_top.RL_test_end();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_overRun)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_overRun();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_outData_deqOnly)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_outData_deqOnly();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_featureBRAM_serverAdapter_s1__dreg_update)
	   INST_top.RL_controller_le_featureBRAM_serverAdapter_s1__dreg_update();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_overRun)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_overRun();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_outData_deqOnly)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_outData_deqOnly();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_controller_le_weightBRAM_serverAdapter_s1__dreg_update)
	   INST_top.RL_controller_le_weightBRAM_serverAdapter_s1__dreg_update();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_test_one)
	   INST_top.RL_test_one();
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_s1_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_writeWithResp.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt_3.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt_2.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_outData_deqCalled.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_outData_outData.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_serverAdapter_outData_enqData.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_weightBRAM_memory.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_s1_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_writeWithResp.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt_3.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt_2.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_outData_deqCalled.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_outData_outData.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_serverAdapter_outData_enqData.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_controller_le_featureBRAM_memory.clk((tUInt8)1u, (tUInt8)1u);
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_cycle1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_0_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_1_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_2_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_3_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_4_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_5_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_6_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_0.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_2.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_3.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_4.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_5.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_6.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_weight_regs_7.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_pos_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_neg_partial_sum.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pe_vec_7_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_weight_addr.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_feat_addr.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_waiting.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_pos_const.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_neg_const.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_bias.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_featureBRAM_serverAdapter_outDataCore.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_controller_le_featureBRAM_serverAdapter_cnt.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_featureBRAM_serverAdapter_s1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_weightBRAM_serverAdapter_outDataCore.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_controller_le_weightBRAM_serverAdapter_cnt.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_le_weightBRAM_serverAdapter_s1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_step.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_controller_weight_addr.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkTbController::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkTbController_instance = new MOD_mkTbController(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkTbController_instance->INST_controller_le_featureBRAM_memory.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_outDataCore.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_outData_enqData.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_outData_outData.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_outData_deqCalled.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_cnt_1.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_cnt_2.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_cnt_3.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_writeWithResp.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_featureBRAM_serverAdapter_s1_1.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_memory.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_outDataCore.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_outData_enqData.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_outData_outData.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_outData_deqCalled.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_cnt_1.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_cnt_2.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_cnt_3.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_writeWithResp.set_clk_0)("CLK");
  (mkTbController_instance->INST_controller_le_weightBRAM_serverAdapter_s1_1.set_clk_0)("CLK");
  (mkTbController_instance->set_clk_0)("CLK");
}
void MODEL_mkTbController::destroy_model()
{
  delete mkTbController_instance;
  mkTbController_instance = NULL;
}
void MODEL_mkTbController::reset_model(bool asserted)
{
  (mkTbController_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkTbController::get_instance()
{
  return mkTbController_instance;
}

/* Fill in version numbers */
void MODEL_mkTbController::get_version(unsigned int *year,
				       unsigned int *month,
				       char const **annotation,
				       char const **build)
{
  *year = 2014u;
  *month = 7u;
  *annotation = "A";
  *build = "34078";
}

/* Get the model creation time */
time_t MODEL_mkTbController::get_creation_time()
{
  
  /* Sun Nov  5 15:57:33 UTC 2017 */
  return 1509897453llu;
}

/* Control run-time licensing */
tUInt64 MODEL_mkTbController::skip_license_check()
{
  return 0llu;
}

/* State dumping function */
void MODEL_mkTbController::dump_state()
{
  (mkTbController_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkTbController & mkTbController_backing(tSimStateHdl simHdl)
{
  static MOD_mkTbController *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkTbController(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkTbController::dump_VCD_defs()
{
  (mkTbController_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkTbController::dump_VCD(tVCDDumpType dt)
{
  (mkTbController_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkTbController_backing(sim_hdl));
}
