/*
 * Generated by Bluespec Compiler, version 2016.07.beta1 (build 34806, 2016-07-05)
 * 
 * On Mon Dec 11 17:54:02 EST 2017
 * 
 */

/* Generation options: */
#ifndef __mkTbPEFP_h__
#define __mkTbPEFP_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTbPEFP module */
class MOD_mkTbPEFP : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_cycle1;
  MOD_Reg<tUInt32> INST_cycle2;
  MOD_Reg<tUInt32> INST_cycle3;
  MOD_Reg<tUInt32> INST_pe1_partial_sum;
  MOD_Reg<tUInt8> INST_pe1_step;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_0;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_1;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_2;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_3;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_4;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_5;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_6;
  MOD_Reg<tUInt32> INST_pe1_weight_regs_7;
  MOD_Reg<tUInt32> INST_pe2_partial_sum;
  MOD_Reg<tUInt8> INST_pe2_step;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_0;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_1;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_2;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_3;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_4;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_5;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_6;
  MOD_Reg<tUInt32> INST_pe2_weight_regs_7;
  MOD_Reg<tUInt32> INST_pe3_partial_sum;
  MOD_Reg<tUInt8> INST_pe3_step;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_0;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_1;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_2;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_3;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_4;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_5;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_6;
  MOD_Reg<tUInt32> INST_pe3_weight_regs_7;
  MOD_Reg<tUInt8> INST_psum;
  MOD_Reg<tUInt8> INST_psum2;
 
 /* Constructor */
 public:
  MOD_mkTbPEFP(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_x__h31705;
  tUInt32 DEF_x__h31711;
  tUInt32 DEF_x__h31718;
  tUInt8 DEF_NOT_cycle2_56_ULE_8_60___d802;
  tUInt8 DEF_cycle2_56_ULE_8___d760;
 
 /* Local definitions */
 private:
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d334;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d325;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d316;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_ETC___d307;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0__ETC___d746;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d737;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d728;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d719;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_pe3_pa_ETC___d710;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d535;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d526;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_1_ETC___d517;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_psum_12_PLUS__ETC___d508;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d468;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d459;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d450;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_pe1_pa_ETC___d441;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d401;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d392;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_ETC___d383;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_ETC___d374;
  tUWide DEF__10_MUL_10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT__ETC___d267;
  tUWide DEF__10_MUL_10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_ETC___d258;
  tUWide DEF__10_MUL_10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_AR_ETC___d249;
  tUWide DEF__10_MUL_0_CONCAT_0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_ETC___d240;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_65535_2_0_1_1_ETC___d330;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_65535_2_0_1_1_ETC___d321;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_65535_2_0_1_1_ETC___d312;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_65535_2_0_1_1_ETC___d304;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe3_partial_sum_51_BIT_ETC___d742;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe3_partial_sum_51_BIT_ETC___d733;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe3_partial_sum_51_BIT_ETC___d724;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe3_partial_sum_51_BIT_ETC___d715;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe3_partial_sum_51_BIT_ETC___d707;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_12_PLUS_IF_NOT_IF_NOT_IF_ETC___d531;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_12_PLUS_IF_NOT_IF_NOT_IF_ETC___d522;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_12_PLUS_IF_NOT_IF_NOT_IF_ETC___d513;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_12_PLUS_IF_NOT_IF_NOT_IF_ETC___d505;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe1_partial_sum_0_BIT__ETC___d464;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe1_partial_sum_0_BIT__ETC___d455;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe1_partial_sum_0_BIT__ETC___d446;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe1_partial_sum_0_BIT__ETC___d438;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d397;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d388;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d379;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d371;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_3_cyc_ETC___d263;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_3_cyc_ETC___d254;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_3_cyc_ETC___d245;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_3_cyc_ETC___d237;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_1_1_2_0_65535_2_0_1_1_ETC___d301;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe3_partial_sum_51_BIT_ETC___d704;
  tUWide DEF__0_CONCAT_IF_SEXT_psum_12_PLUS_IF_NOT_IF_NOT_IF_ETC___d502;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_pe1_partial_sum_0_BIT__ETC___d435;
  tUWide DEF__0_CONCAT_IF_SEXT_IF_NOT_IF_NOT_IF_SEL_ARR_1_1__ETC___d368;
  tUWide DEF__0_CONCAT_IF_SEXT_SEL_ARR_0_3_0_3_0_0_0_3_3_cyc_ETC___d234;
 
 /* Rules */
 public:
  void RL_test_dot_product();
  void RL_test_nonlinearity();
  void RL_test_rw_weights();
  void RL_test_end();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTbPEFP &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTbPEFP &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTbPEFP &backing);
};

#endif /* ifndef __mkTbPEFP_h__ */
